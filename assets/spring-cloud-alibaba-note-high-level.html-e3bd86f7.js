import{_ as e,V as o,W as c,a0 as l,X as n,Y as s,Z as t,$ as p,G as i}from"./framework-ed4f969a.js";const u="/assets/true-image-20210604131952296-11fdaa89.png",k="/assets/true-image-20210604132012980-e5e1feb9.png",r="/assets/true-image-20210912091935588-036b5631.png",d="/assets/true-image-20210912115033523-42e020a1.png",m="/assets/true-image-20210912115114599-63405b2c.png",v="/assets/true-image-20210912125255950-d3f61c72.png",b="/assets/true-image-20210912125306914-e9179f4f.png",g="/assets/true-image-20210912155154018-755b7d22.png",f="/assets/true-image-20210912155207647-f500933c.png",h="/assets/true-image-20210912164205853-1c2fa8df.png",y="/assets/true-image-20210926173348217-7b0065c0.png",q="/assets/true-订单中心-6c461187.png",S="/assets/true-image-20211004160657576-8da80a1e.png",w="/assets/true-image-20211004175207905-4d5c57c6.png",I="/assets/true-image-20211004180806491-921bde67.png",_="/assets/true-image-20211004181324416-edb9a4a1.png",x="/assets/true-image-20211004192550633-82f8b758.png",T="/assets/true-image-20211004194440103-58dbb1e9.png",E="/assets/true-image-20211004212537610-9a77105a.png",C="/assets/true-image-20211004212605590-e0fc2498.png",j="/assets/true-image-20211004214057804-b29c18d1.png",V="/assets/true-image-20211116210606144-5bb28053.png",O="/assets/true-image-20211116215716456-d4d6addc.png",R="/assets/true-image-20211116215727891-c5a80972.png",A="/assets/true-image-20211116220459730-77206648.png",L="/assets/true-image-20211118125418053-07a1f614.png",P="/assets/true-image-20211118130052716-d60fcf8d.png",M="/assets/true-image-20211118130031288-4a446989.png",U="/assets/true-image-20211118130142204-b77f085c.png",D="/assets/true-image-20211118141952959-52f6d9db.png",B="/assets/true-image-20211118141137454-85399d00.png",N="/assets/true-image-20211118141454410-2bb1a63c.png",F={},H=p('<h2 id="es集群" tabindex="-1"><a class="header-anchor" href="#es集群" aria-hidden="true">#</a> ES集群</h2><p><img src="'+u+'" alt="image-20210604131952296"></p><p><img src="'+k+`" alt="image-20210604132012980"></p><h1>七、商品上架</h1><p><strong>商品上架 ：把数据保存到es</strong> ：spu</p><h2 id="构造sku检索属性" tabindex="-1"><a class="header-anchor" href="#构造sku检索属性" aria-hidden="true">#</a> -- 构造sku检索属性</h2><h3 id="_1、上架-product-spuinfo-list-spuid-up" tabindex="-1"><a class="header-anchor" href="#_1、上架-product-spuinfo-list-spuid-up" aria-hidden="true">#</a> 1、上架 product/spuinfo/list/{spuId}/up</h3><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code>spuInfoService<span class="token punctuation">.</span><span class="token function">up</span><span class="token punctuation">(</span>spuId<span class="token punctuation">)</span><span class="token punctuation">;</span>
skuInfoService<span class="token punctuation">.</span><span class="token function">getSkusBySpuId</span><span class="token punctuation">(</span>spuId<span class="token punctuation">)</span><span class="token punctuation">;</span>
	<span class="token operator">-&gt;</span> <span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">SkuInfoEntity</span><span class="token punctuation">&gt;</span></span> skuInfoEntityList <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">list</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">QueryWrapper</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">SkuInfoEntity</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">eq</span><span class="token punctuation">(</span><span class="token string">&quot;spu_id&quot;</span><span class="token punctuation">,</span> spuId<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">//组装需要的数据</span>
skus<span class="token punctuation">.</span><span class="token function">stream</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">map</span><span class="token punctuation">(</span>sku <span class="token operator">-&gt;</span> <span class="token punctuation">{</span>
    <span class="token class-name">SkuEsModel</span> esModel <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">SkuEsModel</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
	<span class="token class-name">BeanUtils</span><span class="token punctuation">.</span><span class="token function">copyProperties</span><span class="token punctuation">(</span>sku<span class="token punctuation">,</span> esModel<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token comment">//TODO 1、发送远程调用，库存系统查询是否有库存</span>
    <span class="token comment">//TODO 2、热度评分。e,</span>
    <span class="token function">setHotScore</span><span class="token punctuation">(</span><span class="token number">0L</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token comment">//TODO 3 查询品牌和分类的名字信息</span>
    brandService<span class="token punctuation">.</span><span class="token function">getById</span><span class="token punctuation">(</span>esModel<span class="token punctuation">.</span><span class="token function">getBrandId</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token comment">//setSkuPrice/setSkuImg/setHotScore(0L)/setBrandName(brand.getName());</span>
    <span class="token comment">//esModel.setBrandImg(brand.getLogo());</span>
    categoryService<span class="token punctuation">.</span><span class="token function">getById</span><span class="token punctuation">(</span>esModel<span class="token punctuation">.</span><span class="token function">getCatalogId</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token comment">//setCatalogName(categoryServiceById.getName());</span>
    <span class="token function">setAttrs</span><span class="token punctuation">(</span>attrsList<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span> 
<span class="token comment">///////////////////</span>
<span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Long</span><span class="token punctuation">&gt;</span></span> searchAttrIds <span class="token operator">=</span> attrService<span class="token punctuation">.</span><span class="token function">selectSearchAttrIds</span><span class="token punctuation">(</span>attrIds<span class="token punctuation">)</span><span class="token punctuation">;</span>
	<span class="token operator">--</span><span class="token operator">&gt;</span> baseMapper<span class="token punctuation">.</span><span class="token function">selectSearchAttrIds</span><span class="token punctuation">(</span>attrIds<span class="token punctuation">)</span><span class="token punctuation">;</span> 
        <span class="token operator">--</span><span class="token operator">&gt;</span> <span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Long</span><span class="token punctuation">&gt;</span></span> <span class="token function">selectSearchAttrIds</span><span class="token punctuation">(</span><span class="token annotation punctuation">@Param</span><span class="token punctuation">(</span><span class="token string">&quot;attrIds&quot;</span><span class="token punctuation">)</span> <span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Long</span><span class="token punctuation">&gt;</span></span> attrIds<span class="token punctuation">)</span><span class="token punctuation">;</span> 
             <span class="token operator">--</span><span class="token operator">&gt;</span> <span class="token constant">SELECT</span> attr_id <span class="token constant">FROM</span> pms_attr <span class="token constant">WHERE</span> attr_id <span class="token constant">IN</span> <span class="token operator">&lt;</span>foreach collection<span class="token operator">=</span><span class="token string">&quot;attrIds&quot;</span> item<span class="token operator">=</span><span class="token string">&quot;id&quot;</span> separator<span class="token operator">=</span><span class="token string">&quot;,&quot;</span> <span class="token keyword">open</span><span class="token operator">=</span><span class="token string">&quot;(&quot;</span> close<span class="token operator">=</span><span class="token string">&quot;)&quot;</span><span class="token operator">&gt;</span> #<span class="token punctuation">{</span>id<span class="token punctuation">}</span> <span class="token operator">&lt;</span><span class="token operator">/</span>foreach<span class="token operator">&gt;</span> <span class="token class-name">AND</span> search_type <span class="token operator">=</span> <span class="token number">1</span>
<span class="token comment">//////////////////                  </span>
                  
<span class="token class-name">Set</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Long</span><span class="token punctuation">&gt;</span></span> idSet <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">HashSet</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span>searchAttrIds<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">SkuEsModel<span class="token punctuation">.</span>Attrs</span><span class="token punctuation">&gt;</span></span> attrsList <span class="token operator">=</span> baseAttrs<span class="token punctuation">.</span><span class="token function">stream</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">filter</span><span class="token punctuation">(</span>item <span class="token operator">-&gt;</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> idSet<span class="token punctuation">.</span><span class="token function">contains</span><span class="token punctuation">(</span>item<span class="token punctuation">.</span><span class="token function">getAttrId</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">map</span><span class="token punctuation">(</span>item <span class="token operator">-&gt;</span> <span class="token punctuation">{</span>
    <span class="token class-name">SkuEsModel<span class="token punctuation">.</span>Attrs</span> attrs1 <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">SkuEsModel<span class="token punctuation">.</span>Attrs</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token class-name">BeanUtils</span><span class="token punctuation">.</span><span class="token function">copyProperties</span><span class="token punctuation">(</span>item<span class="token punctuation">,</span> attrs1<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">return</span> attrs1<span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">collect</span><span class="token punctuation">(</span><span class="token class-name">Collectors</span><span class="token punctuation">.</span><span class="token function">toList</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>              
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="发送远程调用-库存系统查询是否有库存" tabindex="-1"><a class="header-anchor" href="#发送远程调用-库存系统查询是否有库存" aria-hidden="true">#</a> -- 发送远程调用，库存系统查询是否有库存</h2><p>/ware/waresku/hasstock</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token function">getSkusHasStock</span><span class="token punctuation">(</span><span class="token annotation punctuation">@RequestBody</span> <span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Long</span><span class="token punctuation">&gt;</span></span> skuIds<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    wareSkuService<span class="token punctuation">.</span><span class="token function">getSkusHasStock</span><span class="token punctuation">(</span>skuIds<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">//////////////getSkusHasStock:</span>
<span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">SkuHasStockVo</span><span class="token punctuation">&gt;</span></span> collect <span class="token operator">=</span> skuIds<span class="token punctuation">.</span><span class="token function">stream</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">map</span><span class="token punctuation">(</span>skuId <span class="token operator">-&gt;</span> <span class="token punctuation">{</span>
            <span class="token class-name">SkuHasStockVo</span> vo <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">SkuHasStockVo</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token comment">//查询当前sku的总库存量</span>
        <span class="token comment">//SELECT SUM(stock-stock_ locked) FROM、 wms_ _ware_ sku^ WHERE sku_ id=1</span>
            <span class="token keyword">long</span> count <span class="token operator">=</span> baseMapper<span class="token punctuation">.</span><span class="token function">getSkuStock</span><span class="token punctuation">(</span>skuId<span class="token punctuation">)</span><span class="token punctuation">;</span>
            vo<span class="token punctuation">.</span><span class="token function">setSkuld</span><span class="token punctuation">(</span>skuId<span class="token punctuation">)</span><span class="token punctuation">;</span>
            vo<span class="token punctuation">.</span><span class="token function">setHasStock</span><span class="token punctuation">(</span>count <span class="token operator">&gt;</span> <span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token keyword">return</span> vo<span class="token punctuation">;</span>
        <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">collect</span><span class="token punctuation">(</span><span class="token class-name">Collectors</span><span class="token punctuation">.</span><span class="token function">toList</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    
    <span class="token operator">--</span><span class="token operator">&gt;</span> getSkuStock<span class="token operator">:</span>
    	<span class="token class-name">SELECT</span> <span class="token function">SUM</span><span class="token punctuation">(</span>stock<span class="token operator">-</span>stock_ locked<span class="token punctuation">)</span> <span class="token constant">FROM</span> wms_ _ware_ sku <span class="token class-name">WHERE</span> sku_id<span class="token operator">=</span>#<span class="token punctuation">{</span>skuId<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>创建 WareFeignService</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token annotation punctuation">@PostMapping</span><span class="token punctuation">(</span><span class="token string">&quot;/ware/waresku/hasstock&quot;</span><span class="token punctuation">)</span>
<span class="token class-name">R</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">List</span><span class="token punctuation">&lt;</span><span class="token class-name">SkuHasStockVo</span><span class="token punctuation">&gt;</span><span class="token punctuation">&gt;</span></span> <span class="token function">getSkusHasStock</span><span class="token punctuation">(</span><span class="token annotation punctuation">@RequestBody</span> <span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Long</span><span class="token punctuation">&gt;</span></span> skuIds<span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token class-name">Map</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Long</span><span class="token punctuation">,</span> <span class="token class-name">Boolean</span><span class="token punctuation">&gt;</span></span> stockMap <span class="token operator">=</span> <span class="token keyword">null</span><span class="token punctuation">;</span>
<span class="token keyword">try</span> <span class="token punctuation">{</span>
    <span class="token class-name">R</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">List</span><span class="token punctuation">&lt;</span><span class="token class-name">SkuHasStockVo</span><span class="token punctuation">&gt;</span><span class="token punctuation">&gt;</span></span> skusHasStock <span class="token operator">=</span> wareFeignService<span class="token punctuation">.</span><span class="token function">getSkusHasStock</span><span class="token punctuation">(</span>collect<span class="token punctuation">)</span><span class="token punctuation">;</span>
    stockMap <span class="token operator">=</span> skusHasStock<span class="token punctuation">.</span><span class="token function">getData</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">stream</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">collect</span><span class="token punctuation">(</span><span class="token class-name">Collectors</span><span class="token punctuation">.</span><span class="token function">toMap</span><span class="token punctuation">(</span><span class="token class-name">SkuHasStockVo</span><span class="token operator">::</span><span class="token function">getSkuld</span><span class="token punctuation">,</span> item <span class="token operator">-&gt;</span> item<span class="token punctuation">.</span><span class="token function">getHasStock</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">Exception</span> e<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    log<span class="token punctuation">.</span><span class="token function">error</span><span class="token punctuation">(</span><span class="token string">&quot;库存服务查询异常:原因{}&quot;</span><span class="token punctuation">,</span> e<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

		<span class="token class-name">Map</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Long</span><span class="token punctuation">,</span> <span class="token class-name">Boolean</span><span class="token punctuation">&gt;</span></span> finalStockMap <span class="token operator">=</span> stockMap<span class="token punctuation">;</span>
			<span class="token keyword">if</span> <span class="token punctuation">(</span>finalStockMap <span class="token operator">==</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                esModel<span class="token punctuation">.</span><span class="token function">setHasStock</span><span class="token punctuation">(</span><span class="token boolean">true</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
                esModel<span class="token punctuation">.</span><span class="token function">setHasStock</span><span class="token punctuation">(</span>finalStockMap<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span>sku<span class="token punctuation">.</span><span class="token function">getSkuId</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="将数据发送给es进行保存-yumall-search" tabindex="-1"><a class="header-anchor" href="#将数据发送给es进行保存-yumall-search" aria-hidden="true">#</a> -- 将数据发送给es进行保存;yumall-search</h2><p>/ElasticSavaController::productStatusUp</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token comment">//保存到es，</span>
<span class="token comment">//1、给es中建立索引。product,建立好映射关系。</span>
<span class="token comment">//2、给es中保存这些数据</span>
productStatusUp<span class="token operator">-&gt;</span><span class="token class-name">BulkRequest</span><span class="token operator">-&gt;</span><span class="token keyword">for</span><span class="token operator">-&gt;</span><span class="token class-name">IndexRequest</span><span class="token operator">-&gt;</span>restHighLevelClient<span class="token punctuation">.</span>bulk
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><img src="`+r+`" alt="image-20210912091935588"></p><p>//BizCodeEnume :: PRODUCT_UP_EXCEPTION(11000, &quot;商品上架异常&quot;);</p><p>商品服务调用Search</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code>yumall<span class="token operator">-</span>product：feign：<span class="token class-name">SearchFeignService</span>
<span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">-</span>
<span class="token annotation punctuation">@FeignClient</span><span class="token punctuation">(</span><span class="token string">&quot;yumall-search&quot;</span><span class="token punctuation">)</span>
<span class="token keyword">public</span> <span class="token keyword">interface</span> <span class="token class-name">SearchFeignService</span> <span class="token punctuation">{</span>
    <span class="token annotation punctuation">@PostMapping</span><span class="token punctuation">(</span><span class="token string">&quot;/search/save/product&quot;</span><span class="token punctuation">)</span>
    <span class="token class-name">R</span> <span class="token function">productStatusUp</span><span class="token punctuation">(</span><span class="token annotation punctuation">@RequestBody</span> <span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">SkuEsModel</span><span class="token punctuation">&gt;</span></span> skuEsModels<span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>//SpuInfoServiceImpl</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token comment">//TODO 5、将数据发送给es进行保存;yumall-search</span>
<span class="token class-name">R</span> r <span class="token operator">=</span> searchFeignService<span class="token punctuation">.</span><span class="token function">productStatusUp</span><span class="token punctuation">(</span>upProducts<span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><p>成功：修改spu状态</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token comment">//枚举类：yumall.common.constant.ProductConstant.StatusEnum</span>
<span class="token function">NEW_SPU</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token string">&quot;新建&quot;</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
        <span class="token function">SPU_UP</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token string">&quot;上架&quot;</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
        <span class="token function">SPU_DOWN</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">,</span> <span class="token string">&quot;下架&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">////////////////</span>
baseMapper<span class="token punctuation">.</span><span class="token function">updateStatusBySPUId</span><span class="token punctuation">(</span>spuId<span class="token punctuation">,</span> <span class="token class-name">ProductConstant<span class="token punctuation">.</span>StatusEnum</span><span class="token punctuation">.</span><span class="token constant">SPU_UP</span><span class="token punctuation">.</span><span class="token function">getCode</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token constant">UPDATE</span> pms_spu_info <span class="token class-name">SET</span> publish_status<span class="token operator">=</span>#<span class="token punctuation">{</span>code<span class="token punctuation">}</span><span class="token punctuation">,</span> update_time<span class="token operator">=</span><span class="token function">NOW</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token class-name">WHERE</span> id<span class="token operator">=</span>#<span class="token punctuation">{</span>spuId<span class="token punctuation">}</span>        
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>失败：重复操作？</p><h2 id="优化库存" tabindex="-1"><a class="header-anchor" href="#优化库存" aria-hidden="true">#</a> -- 优化库存：</h2><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token class-name">R</span><span class="token operator">::</span><span class="token operator">::</span>
<span class="token keyword">public</span> <span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">T</span><span class="token punctuation">&gt;</span></span> <span class="token class-name">T</span> <span class="token function">getData</span><span class="token punctuation">(</span><span class="token class-name">TypeReference</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">T</span><span class="token punctuation">&gt;</span></span> typeReference<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token class-name">Object</span> data <span class="token operator">=</span> <span class="token function">get</span><span class="token punctuation">(</span><span class="token string">&quot;data&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//默认是map</span>
    <span class="token class-name">String</span> s <span class="token operator">=</span> <span class="token constant">JSON</span><span class="token punctuation">.</span><span class="token function">toJSONString</span><span class="token punctuation">(</span>data<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token class-name">T</span> t <span class="token operator">=</span> <span class="token constant">JSON</span><span class="token punctuation">.</span><span class="token function">parseObject</span><span class="token punctuation">(</span>s<span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token class-name">Type</span><span class="token punctuation">)</span> typeReference<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">return</span> t<span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token keyword">public</span> <span class="token class-name">R</span> <span class="token function">setData</span><span class="token punctuation">(</span><span class="token class-name">Object</span> data<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token function">put</span><span class="token punctuation">(</span><span class="token string">&quot;data&quot;</span><span class="token punctuation">,</span> data<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">return</span> <span class="token keyword">this</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
<span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span>
<span class="token comment">//查询sku是否有库存</span>
    <span class="token annotation punctuation">@PostMapping</span><span class="token punctuation">(</span><span class="token string">&quot;/hasstock&quot;</span><span class="token punctuation">)</span>
    <span class="token keyword">public</span> <span class="token class-name">R</span> <span class="token function">getSkusHasStock</span><span class="token punctuation">(</span><span class="token annotation punctuation">@RequestBody</span> <span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Long</span><span class="token punctuation">&gt;</span></span> skuIds<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">SkuHasStockVo</span><span class="token punctuation">&gt;</span></span> skuHasStockVos <span class="token operator">=</span> wareSkuService<span class="token punctuation">.</span><span class="token function">getSkusHasStock</span><span class="token punctuation">(</span>skuIds<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">return</span> <span class="token class-name">R</span><span class="token punctuation">.</span><span class="token function">ok</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">setData</span><span class="token punctuation">(</span>skuHasStockVos<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">-</span>    
 <span class="token class-name">R</span> skusHasStock <span class="token operator">=</span> wareFeignService<span class="token punctuation">.</span><span class="token function">getSkusHasStock</span><span class="token punctuation">(</span>collect<span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token class-name">TypeReference</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">List</span><span class="token punctuation">&lt;</span><span class="token class-name">SkuHasStockVo</span><span class="token punctuation">&gt;</span><span class="token punctuation">&gt;</span></span> listTypeReference <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">TypeReference</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">List</span><span class="token punctuation">&lt;</span><span class="token class-name">SkuHasStockVo</span><span class="token punctuation">&gt;</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token punctuation">}</span><span class="token punctuation">;</span>
            stockMap <span class="token operator">=</span> skusHasStock<span class="token punctuation">.</span><span class="token function">getData</span><span class="token punctuation">(</span>listTypeReference<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">stream</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">collect</span><span class="token punctuation">(</span><span class="token class-name">Collectors</span><span class="token punctuation">.</span><span class="token function">toMap</span><span class="token punctuation">(</span><span class="token class-name">SkuHasStockVo</span><span class="token operator">::</span><span class="token function">getSkuld</span><span class="token punctuation">,</span> item <span class="token operator">-&gt;</span> item<span class="token punctuation">.</span><span class="token function">getHasStock</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h1>八、首页&amp;nginx</h1><h2 id="商品-product" tabindex="-1"><a class="header-anchor" href="#商品-product" aria-hidden="true">#</a> -- 商品：product</h2><h3 id="导入thymeleaf" tabindex="-1"><a class="header-anchor" href="#导入thymeleaf" aria-hidden="true">#</a> --- 导入thymeleaf</h3><div class="language-xml line-numbers-mode" data-ext="xml"><pre class="language-xml"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">&gt;</span></span>org.springframework.boot<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">&gt;</span></span>spring-boot-starter-thymeleaf<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="导入首页" tabindex="-1"><a class="header-anchor" href="#导入首页" aria-hidden="true">#</a> --- 导入首页</h3><p><img src="`+d+`" alt="image-20210912115033523"></p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>spring.thymeleaf.cache=false
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p><img src="`+m+`" alt="image-20210912115114599"></p><p>创建：app、web文件夹</p><p>热插件：</p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>&lt;dependency&gt;
    &lt;groupId&gt;org.springframework.boot&lt;/groupId&gt;
    &lt;artifactId&gt;spring-boot-devtools&lt;/artifactId&gt;
    &lt;optional&gt;true&lt;/optional&gt;
&lt;/dependency&gt;
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="查出所有的1级分类" tabindex="-1"><a class="header-anchor" href="#查出所有的1级分类" aria-hidden="true">#</a> --- 查出所有的1级分类</h3><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>getLevel1Categorys:-&gt; List&lt;CategoryEntity&gt; categoryEntities = baseMapper.selectList(new QueryWrapper&lt;CategoryEntity&gt;().eq(&quot;parent_ .cid&quot;, 0));
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div>`,41),W={href:"http://www.thymeleaf.org",target:"_blank",rel:"noopener noreferrer"},Q=p('<p><img src="'+v+'" alt="image-20210912125255950"></p><p><img src="'+b+`" alt="image-20210912125306914"></p><h3 id="显示二级-三级分类" tabindex="-1"><a class="header-anchor" href="#显示二级-三级分类" aria-hidden="true">#</a> --- 显示二级&amp;三级分类</h3><p>json数据</p><div class="language-json line-numbers-mode" data-ext="json"><pre class="language-json"><code><span class="token punctuation">{</span>
 <span class="token property">&quot;21&quot;</span><span class="token operator">:</span> <span class="token punctuation">[</span>
    <span class="token punctuation">{</span>
      <span class="token property">&quot;catalog1Id&quot;</span><span class="token operator">:</span> <span class="token string">&quot;21&quot;</span><span class="token punctuation">,</span>
      <span class="token property">&quot;catalog3List&quot;</span><span class="token operator">:</span> <span class="token punctuation">[</span>
        <span class="token punctuation">{</span>
          <span class="token property">&quot;catalog2Id&quot;</span><span class="token operator">:</span> <span class="token string">&quot;143&quot;</span><span class="token punctuation">,</span>
          <span class="token property">&quot;id&quot;</span><span class="token operator">:</span> <span class="token string">&quot;1259&quot;</span><span class="token punctuation">,</span>
          <span class="token property">&quot;name&quot;</span><span class="token operator">:</span> <span class="token string">&quot;面包车（二手）&quot;</span>
        <span class="token punctuation">}</span>
      <span class="token punctuation">]</span><span class="token punctuation">,</span>
      <span class="token property">&quot;id&quot;</span><span class="token operator">:</span> <span class="token string">&quot;143&quot;</span><span class="token punctuation">,</span>
      <span class="token property">&quot;name&quot;</span><span class="token operator">:</span> <span class="token string">&quot;二手车&quot;</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">]</span>
<span class="token punctuation">}</span>        
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token annotation punctuation">@NoArgsConstructor</span>
<span class="token annotation punctuation">@AllArgsConstructor</span>
<span class="token annotation punctuation">@Data</span>
<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">Catalog2Vo</span> <span class="token punctuation">{</span>
    <span class="token doc-comment comment">/**
     * 一级父分类ID
     */</span>
    <span class="token keyword">private</span> <span class="token class-name">String</span> catalog1Id<span class="token punctuation">;</span>
    <span class="token doc-comment comment">/**
     * 三级子分类
     */</span>
    <span class="token keyword">private</span> <span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Catalog3Vo</span><span class="token punctuation">&gt;</span></span> catalog3List<span class="token punctuation">;</span>
    <span class="token keyword">private</span> <span class="token class-name">String</span> id<span class="token punctuation">;</span>
    <span class="token keyword">private</span> <span class="token class-name">String</span> name<span class="token punctuation">;</span>

    <span class="token doc-comment comment">/**
     * 三级子分类
     */</span>
    <span class="token annotation punctuation">@NoArgsConstructor</span>
    <span class="token annotation punctuation">@AllArgsConstructor</span>
    <span class="token annotation punctuation">@Data</span>
    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">class</span> <span class="token class-name">Catalog3Vo</span> <span class="token punctuation">{</span>
        <span class="token doc-comment comment">/**
         * 二级父分类id
         */</span>
        <span class="token keyword">private</span> <span class="token class-name">String</span> catalog2Id<span class="token punctuation">;</span>
        <span class="token keyword">private</span> <span class="token class-name">String</span> id<span class="token punctuation">;</span>
        <span class="token keyword">private</span> <span class="token class-name">String</span> name<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>@RequestMapping(&quot;index/catalog.json&quot;)
getCataLogJson：：categoryService.getCataLogJson();
1、查出所有1级分类：：2、封装数据：：
	2.1 每一个的一级分类，查到这个一级分类的二级分类
	2.2 封装上面的结果
	2.2.1 查到这个二级分类的三级分类
return 2、；	
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><img src="`+g+'" alt="image-20210912155154018"></p><p><img src="'+f+`" alt="image-20210912155207647"></p><h2 id="nginx" tabindex="-1"><a class="header-anchor" href="#nginx" aria-hidden="true">#</a> -- nginx</h2><h3 id="静态配置" tabindex="-1"><a class="header-anchor" href="#静态配置" aria-hidden="true">#</a> --- 静态配置</h3><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>server <span class="token punctuation">{</span>
    listen       <span class="token number">80</span><span class="token punctuation">;</span>
    server_name yumall.com<span class="token punctuation">;</span>
    charset utf-8<span class="token punctuation">;</span>
 	root html<span class="token punctuation">;</span>
  	index index.html index.htm<span class="token punctuation">;</span>
    access_log  logs/yumall.com.log  main<span class="token punctuation">;</span>

   	location / <span class="token punctuation">{</span>
		proxy_pass http://192.168.101.6:8100<span class="token punctuation">;</span>
  	<span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="分布式网关配置" tabindex="-1"><a class="header-anchor" href="#分布式网关配置" aria-hidden="true">#</a> --- 分布式网关配置</h3><p><strong>nginx代理到网关50000,网关代理到其他服务</strong></p><p>nginx.conf</p><div class="language-xml line-numbers-mode" data-ext="xml"><pre class="language-xml"><code>##负载均衡
upstream yumall{
  server 192.168.101.6:50000; #网关port：50000
}
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>yumall.conf</p><div class="language-xml line-numbers-mode" data-ext="xml"><pre class="language-xml"><code>location / {
	proxy_pass http://yumall;
    proxy_set_header Host $host;
}
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>网关服务配置</p><div class="language-xml line-numbers-mode" data-ext="xml"><pre class="language-xml"><code>##########################uri: lb：负载均衡，到哪个服务#####################
        - id: product_route
          uri: lb://yumall-product
          predicates:
            - Path=/api/product/**
          filters:
            - RewritePath=/api/(?<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>segment</span><span class="token punctuation">&gt;</span></span>.*),/$\\{segment}
##########################网关配置放在最后面#################################
        - id: yumall_nginx_host
          uri: lb://yumall-product
          predicates:
            - Host=**.yumall.com,yumall.com
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,20),G={href:"http://yumall.com/api/product/category/list/tree",target:"_blank",rel:"noopener noreferrer"},K=p('<p><img src="'+h+`" alt="image-20210912164205853"></p><h1>十一、检索服务</h1><h2 id="模型分析" tabindex="-1"><a class="header-anchor" href="#模型分析" aria-hidden="true">#</a> - - 模型分析</h2><p>1、前端设置 list.html</p><p>2、后端es检索接口</p><p>3、创建vo，SearchParamVo、SearchResultVo</p><h2 id="es检索简单测试" tabindex="-1"><a class="header-anchor" href="#es检索简单测试" aria-hidden="true">#</a> - - es检索简单测试</h2><p>结构：</p><p>must：模糊关键字查询</p><p>filter过滤：属性、分类、品牌、价格、库存...</p><p>sort：排序</p><p>分页，高亮，聚合</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>GET /product/_search
<span class="token punctuation">{</span>
  <span class="token string">&quot;query&quot;</span><span class="token builtin class-name">:</span> <span class="token punctuation">{</span>
    <span class="token string">&quot;bool&quot;</span><span class="token builtin class-name">:</span> <span class="token punctuation">{</span>
      <span class="token string">&quot;must&quot;</span><span class="token builtin class-name">:</span> <span class="token punctuation">[</span>
        <span class="token punctuation">{</span>
          <span class="token string">&quot;match&quot;</span><span class="token builtin class-name">:</span> <span class="token punctuation">{</span>
            <span class="token string">&quot;skuTitle&quot;</span><span class="token builtin class-name">:</span> <span class="token string">&quot;华为&quot;</span>
          <span class="token punctuation">}</span>
        <span class="token punctuation">}</span>
      <span class="token punctuation">]</span>,
      <span class="token string">&quot;filter&quot;</span><span class="token builtin class-name">:</span> <span class="token punctuation">[</span>
        <span class="token punctuation">{</span>
          <span class="token string">&quot;term&quot;</span><span class="token builtin class-name">:</span> <span class="token punctuation">{</span>
            <span class="token string">&quot;catalogId&quot;</span><span class="token builtin class-name">:</span> <span class="token string">&quot;225&quot;</span>
          <span class="token punctuation">}</span>
        <span class="token punctuation">}</span>,
        <span class="token punctuation">{</span>
          <span class="token string">&quot;terms&quot;</span><span class="token builtin class-name">:</span> <span class="token punctuation">{</span>
            <span class="token string">&quot;brandId&quot;</span><span class="token builtin class-name">:</span> <span class="token punctuation">[</span>
              <span class="token string">&quot;1&quot;</span>,
              <span class="token string">&quot;2&quot;</span>,
              <span class="token string">&quot;9&quot;</span>
            <span class="token punctuation">]</span>
          <span class="token punctuation">}</span>
        <span class="token punctuation">}</span>,
        <span class="token punctuation">{</span>
          <span class="token string">&quot;nested&quot;</span><span class="token builtin class-name">:</span> <span class="token punctuation">{</span>
            <span class="token string">&quot;path&quot;</span><span class="token builtin class-name">:</span> <span class="token string">&quot;attrs&quot;</span>,
            <span class="token string">&quot;query&quot;</span><span class="token builtin class-name">:</span> <span class="token punctuation">{</span>
              <span class="token string">&quot;bool&quot;</span><span class="token builtin class-name">:</span> <span class="token punctuation">{</span>
                <span class="token string">&quot;must&quot;</span><span class="token builtin class-name">:</span> <span class="token punctuation">[</span>
                  <span class="token punctuation">{</span>
                    <span class="token string">&quot;term&quot;</span><span class="token builtin class-name">:</span> <span class="token punctuation">{</span>
                      <span class="token string">&quot;attrs.attrId&quot;</span><span class="token builtin class-name">:</span> <span class="token punctuation">{</span>
                        <span class="token string">&quot;value&quot;</span><span class="token builtin class-name">:</span> <span class="token string">&quot;15&quot;</span>
                      <span class="token punctuation">}</span>
                    <span class="token punctuation">}</span>
                  <span class="token punctuation">}</span>,
                  <span class="token punctuation">{</span>
                    <span class="token string">&quot;terms&quot;</span><span class="token builtin class-name">:</span> <span class="token punctuation">{</span>
                      <span class="token string">&quot;attrs.attrValue&quot;</span><span class="token builtin class-name">:</span> <span class="token punctuation">[</span>
                        <span class="token string">&quot;华为&quot;</span>,
                        <span class="token string">&quot;navo 7 5G&quot;</span>
                      <span class="token punctuation">]</span>
                    <span class="token punctuation">}</span>
                  <span class="token punctuation">}</span>
                <span class="token punctuation">]</span>
              <span class="token punctuation">}</span>
            <span class="token punctuation">}</span>
          <span class="token punctuation">}</span>
        <span class="token punctuation">}</span>,
        <span class="token punctuation">{</span>
          <span class="token string">&quot;term&quot;</span><span class="token builtin class-name">:</span> <span class="token punctuation">{</span>
            <span class="token string">&quot;hasStock&quot;</span><span class="token builtin class-name">:</span> <span class="token punctuation">{</span>
              <span class="token string">&quot;value&quot;</span><span class="token builtin class-name">:</span> <span class="token string">&quot;true&quot;</span>
            <span class="token punctuation">}</span>
          <span class="token punctuation">}</span>
        <span class="token punctuation">}</span>,
        <span class="token punctuation">{</span>
          <span class="token string">&quot;range&quot;</span><span class="token builtin class-name">:</span> <span class="token punctuation">{</span>
            <span class="token string">&quot;skuPrice&quot;</span><span class="token builtin class-name">:</span> <span class="token punctuation">{</span>
              <span class="token string">&quot;gte&quot;</span><span class="token builtin class-name">:</span> <span class="token number">100</span>,
              <span class="token string">&quot;lte&quot;</span><span class="token builtin class-name">:</span> <span class="token number">70000</span>
            <span class="token punctuation">}</span>
          <span class="token punctuation">}</span>
        <span class="token punctuation">}</span>
      <span class="token punctuation">]</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span>,
  <span class="token string">&quot;sort&quot;</span><span class="token builtin class-name">:</span> <span class="token punctuation">[</span>
    <span class="token punctuation">{</span>
      <span class="token string">&quot;skuPrice&quot;</span><span class="token builtin class-name">:</span> <span class="token punctuation">{</span>
        <span class="token string">&quot;order&quot;</span><span class="token builtin class-name">:</span> <span class="token string">&quot;desc&quot;</span>
      <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">]</span>,
  <span class="token string">&quot;from&quot;</span><span class="token builtin class-name">:</span> <span class="token number">0</span>,
  <span class="token string">&quot;size&quot;</span><span class="token builtin class-name">:</span> <span class="token number">20</span>,
  <span class="token string">&quot;highlight&quot;</span><span class="token builtin class-name">:</span> <span class="token punctuation">{</span>
    <span class="token string">&quot;fields&quot;</span><span class="token builtin class-name">:</span> <span class="token punctuation">{</span><span class="token string">&quot;skuTitle&quot;</span>:<span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">}</span>,
    <span class="token string">&quot;pre_tags&quot;</span><span class="token builtin class-name">:</span> <span class="token string">&quot;&lt;b style=&#39;color:red&#39;&gt;&quot;</span>,
    <span class="token string">&quot;post_tags&quot;</span><span class="token builtin class-name">:</span> <span class="token string">&quot;&lt;/b&gt;&quot;</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="聚合查询" tabindex="-1"><a class="header-anchor" href="#聚合查询" aria-hidden="true">#</a> - - 聚合查询</h2><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>//1、构建请求；2、构建查询条件
SearchRequest searchRequest = buildSearchRequest();
//3、执行查询
   SearchResponse response = client.search(searchRequest, ElasticSearchConfig.COMMON_OPTIONS);
//4、数据分析封装
   result = buildSearchResult(response);
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="构建请求" tabindex="-1"><a class="header-anchor" href="#构建请求" aria-hidden="true">#</a> --- 构建请求</h3><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token class-name">SearchSourceBuilder</span> sourceBuilder <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">SearchSourceBuilder</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token class-name">BoolQueryBuilder</span> boolQueryBuilder <span class="token operator">=</span> <span class="token class-name">QueryBuilders</span><span class="token punctuation">.</span><span class="token function">boolQuery</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="must-模糊关键字查询" tabindex="-1"><a class="header-anchor" href="#must-模糊关键字查询" aria-hidden="true">#</a> - - must：模糊关键字查询</h4><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token keyword">if</span><span class="token punctuation">(</span><span class="token operator">!</span><span class="token class-name">StringUtils</span><span class="token punctuation">.</span><span class="token function">isEmpty</span><span class="token punctuation">(</span>paramVo<span class="token punctuation">.</span><span class="token function">getKeyword</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
   boolQueryBuilder<span class="token punctuation">.</span><span class="token function">must</span><span class="token punctuation">(</span><span class="token class-name">QueryBuilders</span><span class="token punctuation">.</span><span class="token function">matchQuery</span><span class="token punctuation">(</span><span class="token string">&quot;skuTitle&quot;</span><span class="token punctuation">,</span> paramVo<span class="token punctuation">.</span><span class="token function">getKeyword</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="filter-分类" tabindex="-1"><a class="header-anchor" href="#filter-分类" aria-hidden="true">#</a> - - filter：分类</h4><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token keyword">if</span><span class="token punctuation">(</span><span class="token keyword">null</span> <span class="token operator">!=</span> paramVo<span class="token punctuation">.</span><span class="token function">getCatalog3Id</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
			boolQueryBuilder<span class="token punctuation">.</span><span class="token function">filter</span><span class="token punctuation">(</span><span class="token class-name">QueryBuilders</span><span class="token punctuation">.</span><span class="token function">termQuery</span><span class="token punctuation">(</span><span class="token string">&quot;catalogId&quot;</span><span class="token punctuation">,</span> paramVo<span class="token punctuation">.</span><span class="token function">getCatalog3Id</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
		<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="filter-品牌id" tabindex="-1"><a class="header-anchor" href="#filter-品牌id" aria-hidden="true">#</a> - - filter：品牌id</h4><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token keyword">if</span><span class="token punctuation">(</span><span class="token keyword">null</span> <span class="token operator">!=</span> paramVo<span class="token punctuation">.</span><span class="token function">getBrandId</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">&amp;&amp;</span> <span class="token number">0</span> <span class="token operator">&lt;</span> paramVo<span class="token punctuation">.</span><span class="token function">getBrandId</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">size</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
			boolQueryBuilder<span class="token punctuation">.</span><span class="token function">filter</span><span class="token punctuation">(</span><span class="token class-name">QueryBuilders</span><span class="token punctuation">.</span><span class="token function">termQuery</span><span class="token punctuation">(</span><span class="token string">&quot;brandId&quot;</span><span class="token punctuation">,</span> paramVo<span class="token punctuation">.</span><span class="token function">getBrandId</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
		<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="filter-属性" tabindex="-1"><a class="header-anchor" href="#filter-属性" aria-hidden="true">#</a> - - filter：<em>属性</em></h4><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token keyword">if</span><span class="token punctuation">(</span><span class="token keyword">null</span> <span class="token operator">!=</span> paramVo<span class="token punctuation">.</span><span class="token function">getAttrs</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">&amp;&amp;</span> <span class="token number">0</span> <span class="token operator">&lt;</span> paramVo<span class="token punctuation">.</span><span class="token function">getAttrs</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">size</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
			<span class="token comment">//1.2、bool - filter -按照所有指定的属性进行查询</span>
			<span class="token keyword">for</span><span class="token punctuation">(</span><span class="token class-name">String</span> attrStr <span class="token operator">:</span> paramVo<span class="token punctuation">.</span><span class="token function">getAttrs</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
				<span class="token comment">//attrs=1_ .5寸 :8寸&amp;attrs=2_ 166:8G</span>
				<span class="token class-name">BoolQueryBuilder</span> nestedboolQuery <span class="token operator">=</span> <span class="token class-name">QueryBuilders</span><span class="token punctuation">.</span><span class="token function">boolQuery</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
				<span class="token comment">//attr = 1_ .5寸:8寸</span>
				<span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> s <span class="token operator">=</span> attrStr<span class="token punctuation">.</span><span class="token function">split</span><span class="token punctuation">(</span><span class="token string">&quot;_&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
				<span class="token comment">//检索的属性id</span>
				<span class="token class-name">String</span> attrId <span class="token operator">=</span> s<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
				<span class="token comment">//这个属性的检索用的值</span>
				<span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> attrValues <span class="token operator">=</span> s<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token function">split</span><span class="token punctuation">(</span><span class="token string">&quot;:&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
				nestedboolQuery<span class="token punctuation">.</span><span class="token function">must</span><span class="token punctuation">(</span><span class="token class-name">QueryBuilders</span><span class="token punctuation">.</span><span class="token function">termQuery</span><span class="token punctuation">(</span><span class="token string">&quot;attrs . attrId&quot;</span><span class="token punctuation">,</span> attrId<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
				nestedboolQuery<span class="token punctuation">.</span><span class="token function">must</span><span class="token punctuation">(</span><span class="token class-name">QueryBuilders</span><span class="token punctuation">.</span><span class="token function">termsQuery</span><span class="token punctuation">(</span><span class="token string">&quot;attrs . attrValue&quot;</span><span class="token punctuation">,</span> attrValues<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
				<span class="token comment">//每一个必须都得生成1个nested查询</span>
				boolQueryBuilder<span class="token punctuation">.</span><span class="token function">filter</span><span class="token punctuation">(</span><span class="token class-name">QueryBuilders</span><span class="token punctuation">.</span><span class="token function">nestedQuery</span><span class="token punctuation">(</span><span class="token string">&quot;attrs&quot;</span><span class="token punctuation">,</span> nestedboolQuery<span class="token punctuation">,</span> <span class="token class-name">ScoreMode<span class="token punctuation">.</span>None</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
			<span class="token punctuation">}</span>
		<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="filter-库存" tabindex="-1"><a class="header-anchor" href="#filter-库存" aria-hidden="true">#</a> - - filter：库存</h4><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token keyword">if</span><span class="token punctuation">(</span><span class="token keyword">null</span> <span class="token operator">!=</span> paramVo<span class="token punctuation">.</span><span class="token function">getHasStock</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
			boolQueryBuilder<span class="token punctuation">.</span><span class="token function">filter</span><span class="token punctuation">(</span><span class="token class-name">QueryBuilders</span><span class="token punctuation">.</span><span class="token function">termQuery</span><span class="token punctuation">(</span><span class="token string">&quot;hasStock&quot;</span><span class="token punctuation">,</span> paramVo<span class="token punctuation">.</span><span class="token function">getHasStock</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">==</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
		<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="filter-价格" tabindex="-1"><a class="header-anchor" href="#filter-价格" aria-hidden="true">#</a> - - filter：价格</h4><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token keyword">if</span><span class="token punctuation">(</span><span class="token operator">!</span><span class="token class-name">StringUtils</span><span class="token punctuation">.</span><span class="token function">isEmpty</span><span class="token punctuation">(</span>paramVo<span class="token punctuation">.</span><span class="token function">getSkuPrice</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
			<span class="token class-name">RangeQueryBuilder</span> rangeQuery <span class="token operator">=</span> <span class="token class-name">QueryBuilders</span><span class="token punctuation">.</span><span class="token function">rangeQuery</span><span class="token punctuation">(</span><span class="token string">&quot;skuPrice&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
			<span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> strings <span class="token operator">=</span> paramVo<span class="token punctuation">.</span><span class="token function">getSkuPrice</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">split</span><span class="token punctuation">(</span><span class="token string">&quot;_&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
			<span class="token keyword">if</span><span class="token punctuation">(</span>strings<span class="token punctuation">.</span>length <span class="token operator">==</span> <span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
				rangeQuery<span class="token punctuation">.</span><span class="token function">gte</span><span class="token punctuation">(</span>strings<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">lte</span><span class="token punctuation">(</span>strings<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
			<span class="token punctuation">}</span><span class="token keyword">else</span> <span class="token keyword">if</span><span class="token punctuation">(</span>strings<span class="token punctuation">.</span>length <span class="token operator">==</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
				<span class="token keyword">if</span><span class="token punctuation">(</span>paramVo<span class="token punctuation">.</span><span class="token function">getSkuPrice</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">startsWith</span><span class="token punctuation">(</span><span class="token string">&quot;_&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
					rangeQuery<span class="token punctuation">.</span><span class="token function">lte</span><span class="token punctuation">(</span>strings<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
				<span class="token punctuation">}</span>
				<span class="token keyword">if</span><span class="token punctuation">(</span>paramVo<span class="token punctuation">.</span><span class="token function">getSkuPrice</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">endsWith</span><span class="token punctuation">(</span><span class="token string">&quot;_&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
					rangeQuery<span class="token punctuation">.</span><span class="token function">gte</span><span class="token punctuation">(</span>strings<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
				<span class="token punctuation">}</span>
			<span class="token punctuation">}</span>
			boolQueryBuilder<span class="token punctuation">.</span><span class="token function">filter</span><span class="token punctuation">(</span>rangeQuery<span class="token punctuation">)</span><span class="token punctuation">;</span>
		<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="from-分页" tabindex="-1"><a class="header-anchor" href="#from-分页" aria-hidden="true">#</a> - - from 分页</h4><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token comment">// 分页，from（开始位置），size（每次几条）</span>
		sourceBuilder<span class="token punctuation">.</span><span class="token function">from</span><span class="token punctuation">(</span><span class="token punctuation">(</span>paramVo<span class="token punctuation">.</span><span class="token function">getPageNum</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token operator">*</span><span class="token class-name">EsConstant</span><span class="token punctuation">.</span><span class="token constant">PRODUCT_PAGESIZE</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
		sourceBuilder<span class="token punctuation">.</span><span class="token function">size</span><span class="token punctuation">(</span><span class="token class-name">EsConstant</span><span class="token punctuation">.</span><span class="token constant">PRODUCT_PAGESIZE</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="highlighter-高亮" tabindex="-1"><a class="header-anchor" href="#highlighter-高亮" aria-hidden="true">#</a> - - highlighter 高亮</h4><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token keyword">if</span><span class="token punctuation">(</span><span class="token operator">!</span><span class="token class-name">StringUtils</span><span class="token punctuation">.</span><span class="token function">isEmpty</span><span class="token punctuation">(</span>paramVo<span class="token punctuation">.</span><span class="token function">getKeyword</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
			<span class="token class-name">HighlightBuilder</span> builder <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">HighlightBuilder</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
			builder<span class="token punctuation">.</span><span class="token function">field</span><span class="token punctuation">(</span><span class="token string">&quot;skuTit1e&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
			builder<span class="token punctuation">.</span><span class="token function">preTags</span><span class="token punctuation">(</span><span class="token string">&quot;&lt;b sty1e=&#39;color:red&#39;&gt;&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
			builder<span class="token punctuation">.</span><span class="token function">postTags</span><span class="token punctuation">(</span><span class="token string">&quot;&lt;/b&gt;&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
			sourceBuilder<span class="token punctuation">.</span><span class="token function">highlighter</span><span class="token punctuation">(</span>builder<span class="token punctuation">)</span><span class="token punctuation">;</span>
		<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="聚合分析" tabindex="-1"><a class="header-anchor" href="#聚合分析" aria-hidden="true">#</a> - - 聚合分析</h4><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token comment">//1、品牌聚合 brand_agg</span>
<span class="token class-name">TermsAggregationBuilder</span> brand_agg <span class="token operator">=</span> <span class="token class-name">AggregationBuilders</span><span class="token punctuation">.</span><span class="token function">terms</span><span class="token punctuation">(</span><span class="token string">&quot;brand_agg&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
brand_agg<span class="token punctuation">.</span><span class="token function">field</span><span class="token punctuation">(</span><span class="token string">&quot;brandId&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">size</span><span class="token punctuation">(</span><span class="token number">50</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">//品牌聚合的子聚合</span>
brand_agg<span class="token punctuation">.</span><span class="token function">subAggregation</span><span class="token punctuation">(</span><span class="token class-name">AggregationBuilders</span><span class="token punctuation">.</span><span class="token function">terms</span><span class="token punctuation">(</span><span class="token string">&quot;brand_name_agg&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">field</span><span class="token punctuation">(</span><span class="token string">&quot;brandName.keyword&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">size</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
brand_agg<span class="token punctuation">.</span><span class="token function">subAggregation</span><span class="token punctuation">(</span><span class="token class-name">AggregationBuilders</span><span class="token punctuation">.</span><span class="token function">terms</span><span class="token punctuation">(</span><span class="token string">&quot;brand_img_agg&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">field</span><span class="token punctuation">(</span><span class="token string">&quot;brandImg.keyword&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">size</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
sourceBuilder<span class="token punctuation">.</span><span class="token function">aggregation</span><span class="token punctuation">(</span>brand_agg<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">//2、分类聚合 catalog_agg</span>
<span class="token class-name">TermsAggregationBuilder</span> catalog_agg <span class="token operator">=</span> <span class="token class-name">AggregationBuilders</span><span class="token punctuation">.</span><span class="token function">terms</span><span class="token punctuation">(</span><span class="token string">&quot;catalog_agg&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">field</span><span class="token punctuation">(</span><span class="token string">&quot;catalogId&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">size</span><span class="token punctuation">(</span><span class="token number">20</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
catalog_agg<span class="token punctuation">.</span><span class="token function">subAggregation</span><span class="token punctuation">(</span><span class="token class-name">AggregationBuilders</span><span class="token punctuation">.</span><span class="token function">terms</span><span class="token punctuation">(</span><span class="token string">&quot;catalog_name_agg&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">field</span><span class="token punctuation">(</span><span class="token string">&quot;catalogName.keyword&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">size</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
sourceBuilder<span class="token punctuation">.</span><span class="token function">aggregation</span><span class="token punctuation">(</span>catalog_agg<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">//3、属性聚合 attr_agg</span>
<span class="token class-name">NestedAggregationBuilder</span> attr_agg <span class="token operator">=</span> <span class="token class-name">AggregationBuilders</span><span class="token punctuation">.</span><span class="token function">nested</span><span class="token punctuation">(</span><span class="token string">&quot;attr_agg&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;attrs&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token class-name">TermsAggregationBuilder</span> attr_id_agg <span class="token operator">=</span> <span class="token class-name">AggregationBuilders</span><span class="token punctuation">.</span><span class="token function">terms</span><span class="token punctuation">(</span><span class="token string">&quot;attr_id_agg&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">field</span><span class="token punctuation">(</span><span class="token string">&quot;attrs.attrId&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
attr_id_agg<span class="token punctuation">.</span><span class="token function">subAggregation</span><span class="token punctuation">(</span><span class="token class-name">AggregationBuilders</span><span class="token punctuation">.</span><span class="token function">terms</span><span class="token punctuation">(</span><span class="token string">&quot;attr_name_agg&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">field</span><span class="token punctuation">(</span><span class="token string">&quot;attrs.attrName.keyword&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">size</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
attr_id_agg<span class="token punctuation">.</span><span class="token function">subAggregation</span><span class="token punctuation">(</span><span class="token class-name">AggregationBuilders</span><span class="token punctuation">.</span><span class="token function">terms</span><span class="token punctuation">(</span><span class="token string">&quot;attr_value_agg&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">field</span><span class="token punctuation">(</span><span class="token string">&quot;attrs.attrValue.keyword&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">size</span><span class="token punctuation">(</span><span class="token number">50</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
attr_agg<span class="token punctuation">.</span><span class="token function">subAggregation</span><span class="token punctuation">(</span>attr_id_agg<span class="token punctuation">)</span><span class="token punctuation">;</span>
sourceBuilder<span class="token punctuation">.</span><span class="token function">aggregation</span><span class="token punctuation">(</span>attr_agg<span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="数据响应封装" tabindex="-1"><a class="header-anchor" href="#数据响应封装" aria-hidden="true">#</a> --- 数据响应封装</h3><h4 id="封装searchresultvo主要参数" tabindex="-1"><a class="header-anchor" href="#封装searchresultvo主要参数" aria-hidden="true">#</a> - - 封装SearchResultVo主要参数：</h4><p>List&lt;SkuEsModel&gt; products; List&lt;BrandVo&gt; brands; List&lt;CatalogVo&gt; catalogs; List&lt;AttrVo&gt; attrs;</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token annotation punctuation">@Data</span>
<span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">class</span> <span class="token class-name">BrandVo</span><span class="token punctuation">{</span>
   <span class="token keyword">private</span> <span class="token class-name">Long</span> brandId<span class="token punctuation">;</span>
   <span class="token keyword">private</span> <span class="token class-name">String</span> brandName<span class="token punctuation">;</span>
   <span class="token keyword">private</span> <span class="token class-name">String</span> brandImg<span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token annotation punctuation">@Data</span>
<span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">class</span> <span class="token class-name">CatalogVo</span><span class="token punctuation">{</span>
   <span class="token keyword">private</span> <span class="token class-name">Long</span> catalogId<span class="token punctuation">;</span>
   <span class="token keyword">private</span> <span class="token class-name">String</span> catalogName<span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token annotation punctuation">@Data</span>
<span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">class</span> <span class="token class-name">AttrVo</span><span class="token punctuation">{</span>
   <span class="token keyword">private</span> <span class="token class-name">Long</span> attrId<span class="token punctuation">;</span>
   <span class="token keyword">private</span> <span class="token class-name">String</span> attrName<span class="token punctuation">;</span>
   <span class="token keyword">private</span> <span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">&gt;</span></span> attrValue<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>SearchResultVo result = new SearchResultVo();</p><h4 id="_1、返回的所有查询到的商品" tabindex="-1"><a class="header-anchor" href="#_1、返回的所有查询到的商品" aria-hidden="true">#</a> - - 1、返回的所有查询到的商品</h4><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token class-name">SearchHits</span> hits <span class="token operator">=</span> response<span class="token punctuation">.</span><span class="token function">getHits</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">SkuEsModel</span><span class="token punctuation">&gt;</span></span> esModels <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ArrayList</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">for</span><span class="token punctuation">(</span><span class="token class-name">SearchHit</span> hit <span class="token operator">:</span> hits<span class="token punctuation">.</span><span class="token function">getHits</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
    hit<span class="token punctuation">.</span><span class="token function">getSourceAsString</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token class-name">SkuEsModel</span> esModel <span class="token operator">=</span> <span class="token constant">JSON</span><span class="token punctuation">.</span><span class="token function">parseObject</span><span class="token punctuation">(</span>sourceAsString<span class="token punctuation">,</span> <span class="token class-name">SkuEsModel</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token comment">//是检索时，获取高亮信息</span>
    <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token operator">!</span><span class="token class-name">StringUtils</span><span class="token punctuation">.</span><span class="token function">isEmpty</span><span class="token punctuation">(</span>paramVo<span class="token punctuation">.</span><span class="token function">getKeyword</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
					<span class="token class-name">String</span> string <span class="token operator">=</span> hit<span class="token punctuation">.</span><span class="token function">getHighlightFields</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token string">&quot;skuTitle&quot;</span><span class="token punctuation">)</span>
							<span class="token punctuation">.</span><span class="token function">getFragments</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token function">string</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
					esModel<span class="token punctuation">.</span><span class="token function">setSkuTitle</span><span class="token punctuation">(</span>string<span class="token punctuation">)</span><span class="token punctuation">;</span>
				<span class="token punctuation">}</span>
    esModels<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span>esModel<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>    
result<span class="token punctuation">.</span><span class="token function">setProducts</span><span class="token punctuation">(</span>esModels<span class="token punctuation">)</span><span class="token punctuation">;</span>    
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="_2、当前所有商品涉及到的所有属性信息" tabindex="-1"><a class="header-anchor" href="#_2、当前所有商品涉及到的所有属性信息" aria-hidden="true">#</a> - - 2、当前所有商品涉及到的所有属性信息</h4><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">SearchResultVo<span class="token punctuation">.</span>AttrVo</span><span class="token punctuation">&gt;</span></span> attrVos <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ArrayList</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token class-name">ParsedNested</span> attrAgg <span class="token operator">=</span> response<span class="token punctuation">.</span><span class="token function">getAggregations</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token string">&quot;attr_agg&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token class-name">ParsedLongTerms</span> attrIdAgg <span class="token operator">=</span> attrAgg<span class="token punctuation">.</span><span class="token function">getAggregations</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token string">&quot;attr_id_agg&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">for</span><span class="token punctuation">(</span><span class="token class-name">Terms<span class="token punctuation">.</span>Bucket</span> bucket <span class="token operator">:</span> attrIdAgg<span class="token punctuation">.</span><span class="token function">getBuckets</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
    <span class="token class-name">SearchResultVo<span class="token punctuation">.</span>AttrVo</span> attrVo <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">SearchResultVo<span class="token punctuation">.</span>AttrVo</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
			<span class="token comment">//1、得到属性的id</span>
			<span class="token keyword">long</span> attrId <span class="token operator">=</span> bucket<span class="token punctuation">.</span><span class="token function">getKeyAsNumber</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">longValue</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
			<span class="token comment">//2、得到属性的名字</span>
			<span class="token class-name">String</span> attrName <span class="token operator">=</span> <span class="token constant">JSON</span><span class="token punctuation">.</span><span class="token function">toJSONString</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token class-name">ParsedStringTerms</span><span class="token punctuation">)</span> bucket<span class="token punctuation">.</span><span class="token function">getAggregations</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token string">&quot;attr_name_agg&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getBuckets</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
			<span class="token comment">//3、得到属性的所有值.</span>
			<span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">&gt;</span></span> attrValues <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token class-name">ParsedStringTerms</span><span class="token punctuation">)</span> bucket<span class="token punctuation">.</span><span class="token function">getAggregations</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token string">&quot;attr_value_agg&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
					<span class="token punctuation">.</span><span class="token function">getBuckets</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">stream</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">map</span><span class="token punctuation">(</span>item <span class="token operator">-&gt;</span> <span class="token punctuation">{</span>
						<span class="token keyword">return</span> <span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token class-name">Terms<span class="token punctuation">.</span>Bucket</span><span class="token punctuation">)</span> item<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getKeyAsString</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
					<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">collect</span><span class="token punctuation">(</span><span class="token class-name">Collectors</span><span class="token punctuation">.</span><span class="token function">toList</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    attrVo<span class="token punctuation">.</span>set<span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span>
    attrVos<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span>attrVo<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
result<span class="token punctuation">.</span><span class="token function">setAttrs</span><span class="token punctuation">(</span>attrVos<span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="_3、当前所有商品涉及到的所有品牌信息" tabindex="-1"><a class="header-anchor" href="#_3、当前所有商品涉及到的所有品牌信息" aria-hidden="true">#</a> - - 3、当前所有商品涉及到的所有品牌信息</h4><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">SearchResultVo<span class="token punctuation">.</span>BrandVo</span><span class="token punctuation">&gt;</span></span> brandVos <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ArrayList</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token class-name">ParsedLongTerms</span> brandAgg <span class="token operator">=</span> response<span class="token punctuation">.</span><span class="token function">getAggregations</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token string">&quot;brand_agg&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token keyword">for</span><span class="token punctuation">(</span><span class="token class-name">Terms<span class="token punctuation">.</span>Bucket</span> bucket <span class="token operator">:</span> brandAgg<span class="token punctuation">.</span><span class="token function">getBuckets</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
			<span class="token class-name">SearchResultVo<span class="token punctuation">.</span>BrandVo</span> brandVo <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">SearchResultVo<span class="token punctuation">.</span>BrandVo</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
			<span class="token comment">//1、得到品牌的id</span>
			<span class="token keyword">long</span> brandId <span class="token operator">=</span> bucket<span class="token punctuation">.</span><span class="token function">getKeyAsNumber</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">longValue</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
			<span class="token comment">//2、得到品牌的名</span>
			<span class="token class-name">String</span> brandName <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token class-name">ParsedStringTerms</span><span class="token punctuation">)</span> bucket<span class="token punctuation">.</span><span class="token function">getAggregations</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token string">&quot;brand_name_agg&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getBuckets</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getKeyAsString</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
			<span class="token comment">//3、得到品牌的图片</span>
			<span class="token class-name">String</span> brandImg <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token class-name">ParsedStringTerms</span><span class="token punctuation">)</span> bucket<span class="token punctuation">.</span><span class="token function">getAggregations</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token string">&quot;brand_img_agg&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getBuckets</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getKeyAsString</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
			brandVo<span class="token punctuation">.</span>set<span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span>
			brandVos<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span>brandVo<span class="token punctuation">)</span><span class="token punctuation">;</span>
		<span class="token punctuation">}</span>
result<span class="token punctuation">.</span><span class="token function">setBrands</span><span class="token punctuation">(</span>brandVos<span class="token punctuation">)</span><span class="token punctuation">;</span>

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="_4、当前所有商品涉及到的所有分类信息" tabindex="-1"><a class="header-anchor" href="#_4、当前所有商品涉及到的所有分类信息" aria-hidden="true">#</a> - - 4、当前所有商品涉及到的所有分类信息</h4><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">SearchResultVo<span class="token punctuation">.</span>CatalogVo</span><span class="token punctuation">&gt;</span></span> catalogVos <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ArrayList</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
		<span class="token class-name">ParsedLongTerms</span> cataLogAgg <span class="token operator">=</span> response<span class="token punctuation">.</span><span class="token function">getAggregations</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token string">&quot;catalog_agg&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
		<span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token operator">?</span> <span class="token keyword">extends</span> <span class="token class-name">Terms<span class="token punctuation">.</span>Bucket</span><span class="token punctuation">&gt;</span></span> buckets <span class="token operator">=</span> cataLogAgg<span class="token punctuation">.</span><span class="token function">getBuckets</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
		<span class="token keyword">for</span><span class="token punctuation">(</span><span class="token class-name">Terms<span class="token punctuation">.</span>Bucket</span> bucket <span class="token operator">:</span> buckets<span class="token punctuation">)</span><span class="token punctuation">{</span>
			<span class="token class-name">SearchResultVo<span class="token punctuation">.</span>CatalogVo</span> catalogVo <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">SearchResultVo<span class="token punctuation">.</span>CatalogVo</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
			<span class="token comment">//得到分类id</span>
			catalogVo<span class="token punctuation">.</span><span class="token function">setCatalogId</span><span class="token punctuation">(</span><span class="token class-name">Long</span><span class="token punctuation">.</span><span class="token function">parseLong</span><span class="token punctuation">(</span>bucket<span class="token punctuation">.</span><span class="token function">getKeyAsString</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
			<span class="token comment">//得到分类名</span>
			<span class="token class-name">String</span> catalogNameAgg <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token class-name">ParsedStringTerms</span><span class="token punctuation">)</span> bucket<span class="token punctuation">.</span><span class="token function">getAggregations</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token string">&quot;catalog_name_agg&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getBuckets</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getKeyAsString</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
			catalogVo<span class="token punctuation">.</span><span class="token function">setCatalogName</span><span class="token punctuation">(</span>catalogNameAgg<span class="token punctuation">)</span><span class="token punctuation">;</span>
			catalogVos<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span>catalogVo<span class="token punctuation">)</span><span class="token punctuation">;</span>
		<span class="token punctuation">}</span>
		result<span class="token punctuation">.</span><span class="token function">setCatalogs</span><span class="token punctuation">(</span>catalogVos<span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="_5、分页信息-pagenum-total-totalpages-pagenavs" tabindex="-1"><a class="header-anchor" href="#_5、分页信息-pagenum-total-totalpages-pagenavs" aria-hidden="true">#</a> - - 5、分页信息 pageNum total totalPages pageNavs</h4><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token comment">//5、分页信息-页码</span>
		result<span class="token punctuation">.</span><span class="token function">setPageNum</span><span class="token punctuation">(</span>paramVo<span class="token punctuation">.</span><span class="token function">getPageNum</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
		<span class="token comment">//5、分页信息-总记录树</span>
		<span class="token keyword">long</span> total <span class="token operator">=</span> hits<span class="token punctuation">.</span><span class="token function">getTotalHits</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span>value<span class="token punctuation">;</span>
		result<span class="token punctuation">.</span><span class="token function">setTotal</span><span class="token punctuation">(</span>total<span class="token punctuation">)</span><span class="token punctuation">;</span>
		<span class="token comment">//5、分页信息总页码-计算11/2 = 5.. 1</span>
		<span class="token comment">//5、2分页信息-总页码-计算</span>
		<span class="token keyword">int</span> totalPages <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token keyword">int</span><span class="token punctuation">)</span> total<span class="token operator">%</span><span class="token class-name">EsConstant</span><span class="token punctuation">.</span><span class="token constant">PRODUCT_PAGESIZE</span> <span class="token operator">==</span> <span class="token number">0</span> <span class="token operator">?</span> <span class="token punctuation">(</span><span class="token keyword">int</span><span class="token punctuation">)</span> total<span class="token operator">/</span><span class="token class-name">EsConstant</span><span class="token punctuation">.</span><span class="token constant">PRODUCT_PAGESIZE</span>
				<span class="token operator">:</span> <span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token keyword">int</span><span class="token punctuation">)</span> total<span class="token operator">/</span><span class="token class-name">EsConstant</span><span class="token punctuation">.</span><span class="token constant">PRODUCT_PAGESIZE</span><span class="token operator">+</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
		result<span class="token punctuation">.</span><span class="token function">setTotalPages</span><span class="token punctuation">(</span>totalPages<span class="token punctuation">)</span><span class="token punctuation">;</span>

		<span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Integer</span><span class="token punctuation">&gt;</span></span> pageNavs <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ArrayList</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
		<span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span> i <span class="token operator">&lt;=</span> totalPages<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
			pageNavs<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span>i<span class="token punctuation">)</span><span class="token punctuation">;</span>
		<span class="token punctuation">}</span>
		result<span class="token punctuation">.</span><span class="token function">setPageNavs</span><span class="token punctuation">(</span>pageNavs<span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="_6、构建面包屑导航" tabindex="-1"><a class="header-anchor" href="#_6、构建面包屑导航" aria-hidden="true">#</a> - - 6、构建面包屑导航</h4><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token comment">//6、构建面包屑导航</span>
		<span class="token keyword">if</span><span class="token punctuation">(</span>param<span class="token punctuation">.</span><span class="token function">getAttrs</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">!=</span> <span class="token keyword">null</span> <span class="token operator">&amp;&amp;</span> param<span class="token punctuation">.</span><span class="token function">getAttrs</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">size</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">&gt;</span> <span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
			<span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">SearchResult<span class="token punctuation">.</span>NavVo</span><span class="token punctuation">&gt;</span></span> collect <span class="token operator">=</span> param<span class="token punctuation">.</span><span class="token function">getAttrs</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">stream</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">map</span><span class="token punctuation">(</span>attr <span class="token operator">-&gt;</span> <span class="token punctuation">{</span>
				<span class="token comment">//1、分析每一个attrs传过来的参数值</span>
				<span class="token class-name">SearchResult<span class="token punctuation">.</span>NavVo</span> navVo <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">SearchResult<span class="token punctuation">.</span>NavVo</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
				<span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> s <span class="token operator">=</span> attr<span class="token punctuation">.</span><span class="token function">split</span><span class="token punctuation">(</span><span class="token string">&quot;_&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
				navVo<span class="token punctuation">.</span><span class="token function">setNavValue</span><span class="token punctuation">(</span>s<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
				<span class="token class-name">R</span> r <span class="token operator">=</span> productFeignService<span class="token punctuation">.</span><span class="token function">attrInfo</span><span class="token punctuation">(</span><span class="token class-name">Long</span><span class="token punctuation">.</span><span class="token function">parseLong</span><span class="token punctuation">(</span>s<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
				<span class="token keyword">if</span><span class="token punctuation">(</span>r<span class="token punctuation">.</span><span class="token function">getCode</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">==</span> <span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
					<span class="token class-name">AttrResponseVo</span> data <span class="token operator">=</span> r<span class="token punctuation">.</span><span class="token function">getData</span><span class="token punctuation">(</span><span class="token string">&quot;attr&quot;</span><span class="token punctuation">,</span> <span class="token keyword">new</span> <span class="token class-name">TypeReference</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">AttrResponseVo</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
					<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
					navVo<span class="token punctuation">.</span><span class="token function">setNavName</span><span class="token punctuation">(</span>data<span class="token punctuation">.</span><span class="token function">getAttrName</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
				<span class="token punctuation">}</span><span class="token keyword">else</span><span class="token punctuation">{</span>
					navVo<span class="token punctuation">.</span><span class="token function">setNavName</span><span class="token punctuation">(</span>s<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
				<span class="token punctuation">}</span>

				<span class="token comment">//2、取消了这个面包屑以后，我们要跳转到哪个地方，将请求的地址url里面的当前置空</span>
				<span class="token comment">//拿到所有的查询条件，去掉当前</span>
				<span class="token class-name">String</span> encode <span class="token operator">=</span> <span class="token keyword">null</span><span class="token punctuation">;</span>
				<span class="token keyword">try</span><span class="token punctuation">{</span>
					encode <span class="token operator">=</span> <span class="token class-name">URLEncoder</span><span class="token punctuation">.</span><span class="token function">encode</span><span class="token punctuation">(</span>attr<span class="token punctuation">,</span> <span class="token string">&quot;UTF-8&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
					<span class="token comment">//浏览器对空格的编码和Java不一样，差异化处理</span>
					encode<span class="token punctuation">.</span><span class="token function">replace</span><span class="token punctuation">(</span><span class="token string">&quot;+&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;%20&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
				<span class="token punctuation">}</span><span class="token keyword">catch</span><span class="token punctuation">(</span><span class="token class-name">UnsupportedEncodingException</span> e<span class="token punctuation">)</span><span class="token punctuation">{</span>
					e<span class="token punctuation">.</span><span class="token function">printStackTrace</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
				<span class="token punctuation">}</span>
				<span class="token class-name">String</span> replace <span class="token operator">=</span> param<span class="token punctuation">.</span><span class="token function">get_queryString</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">replace</span><span class="token punctuation">(</span><span class="token string">&quot;&amp;attrs=&quot;</span><span class="token operator">+</span>attr<span class="token punctuation">,</span> <span class="token string">&quot;&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
				navVo<span class="token punctuation">.</span><span class="token function">setLink</span><span class="token punctuation">(</span><span class="token string">&quot;http://search.yumall.com/list.html?&quot;</span><span class="token operator">+</span>replace<span class="token punctuation">)</span><span class="token punctuation">;</span>

				<span class="token keyword">return</span> navVo<span class="token punctuation">;</span>
			<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">collect</span><span class="token punctuation">(</span><span class="token class-name">Collectors</span><span class="token punctuation">.</span><span class="token function">toList</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

			result<span class="token punctuation">.</span><span class="token function">setNavs</span><span class="token punctuation">(</span>collect<span class="token punctuation">)</span><span class="token punctuation">;</span>
		<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="页面处理" tabindex="-1"><a class="header-anchor" href="#页面处理" aria-hidden="true">#</a> - - 页面处理</h2><h3 id="点击跳转" tabindex="-1"><a class="header-anchor" href="#点击跳转" aria-hidden="true">#</a> --- 点击跳转</h3><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>th:href=&quot;\${&#39;javascript:searchProducts(&amp;quot;brandId&amp;quot;,&#39;+brand.brandId+&#39;)&#39;}&quot;

function searchProducts(name, value) {
        //原來的页面
        location.href = replaceParamVal(location.href,name,value,true)
    }
    
function replaceParamVal(url, paramName, replaceVal,forceAdd) {
    var oUrl = url.toString();
    var nUrl;
    if (oUrl.indexOf(paramName) != -1) {
        if( forceAdd ) {
            if (oUrl.indexOf(&quot;?&quot;) != -1) {
                nUrl = oUrl + &quot;&amp;&quot; + paramName + &quot;=&quot; + replaceVal;
            } else {
                nUrl = oUrl + &quot;?&quot; + paramName + &quot;=&quot; + replaceVal;
            }
        } else {
            var re = eval(&#39;/(&#39; + paramName + &#39;=)([^&amp;]*)/gi&#39;);
            nUrl = oUrl.replace(re, paramName + &#39;=&#39; + replaceVal);
        }
    } else {
        if (oUrl.indexOf(&quot;?&quot;) != -1) {
            nUrl = oUrl + &quot;&amp;&quot; + paramName + &quot;=&quot; + replaceVal;
        } else {
            nUrl = oUrl + &quot;?&quot; + paramName + &quot;=&quot; + replaceVal;
        }
    }
    return nUrl;
};
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="综合排序、销量、价格、评分、上架时间、分页、排序内容、仅显示有货" tabindex="-1"><a class="header-anchor" href="#综合排序、销量、价格、评分、上架时间、分页、排序内容、仅显示有货" aria-hidden="true">#</a> --- 综合排序、销量、价格、评分、上架时间、分页、排序内容、仅显示有货...</h3><h3 id="面包屑导航" tabindex="-1"><a class="header-anchor" href="#面包屑导航" aria-hidden="true">#</a> --- 面包屑导航</h3><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>&lt;div class=&quot;JD_ipone_one c&quot;&gt;
    &lt;!-- 遍历面包屑功能 --&gt;
    &lt;a th:href=&quot;\${nav.link}&quot; th:each=&quot;nav:\${result.navs}&quot;&gt;&lt;span th:text=&quot;\${nav.navName}&quot;&gt;&lt;/span&gt;：&lt;span
            th:text=&quot;\${nav.navValue}&quot;&gt;&lt;/span&gt; x&lt;/a&gt;
&lt;/div&gt;
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h1>十三、商品详情</h1><h2 id="_0、线程池配置" tabindex="-1"><a class="header-anchor" href="#_0、线程池配置" aria-hidden="true">#</a> 0、线程池配置</h2><h3 id="mythreadconfig" tabindex="-1"><a class="header-anchor" href="#mythreadconfig" aria-hidden="true">#</a> --- MyThreadConfig</h3><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token annotation punctuation">@EnableConfigurationProperties</span><span class="token punctuation">(</span><span class="token class-name">ThreadPoolConfigProperties</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span>
<span class="token annotation punctuation">@Configuration</span>
<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">MyThreadConfig</span><span class="token punctuation">{</span>

   <span class="token annotation punctuation">@Bean</span>
   <span class="token keyword">public</span> <span class="token class-name">ThreadPoolExecutor</span> <span class="token function">threadPoolExecutor</span><span class="token punctuation">(</span><span class="token class-name">ThreadPoolConfigProperties</span> pool<span class="token punctuation">)</span><span class="token punctuation">{</span>
      <span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token class-name">ThreadPoolExecutor</span><span class="token punctuation">(</span>
            pool<span class="token punctuation">.</span><span class="token function">getCoreSize</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
            pool<span class="token punctuation">.</span><span class="token function">getMaxSize</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
            pool<span class="token punctuation">.</span><span class="token function">getKeepAliveTime</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
            <span class="token class-name">TimeUnit</span><span class="token punctuation">.</span><span class="token constant">SECONDS</span><span class="token punctuation">,</span>
            <span class="token keyword">new</span> <span class="token class-name">LinkedBlockingDeque</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token number">100000</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
            <span class="token class-name">Executors</span><span class="token punctuation">.</span><span class="token function">defaultThreadFactory</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
            <span class="token keyword">new</span> <span class="token class-name">ThreadPoolExecutor<span class="token punctuation">.</span>AbortPolicy</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
      <span class="token punctuation">)</span><span class="token punctuation">;</span>
   <span class="token punctuation">}</span>

<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="threadpoolconfigproperties" tabindex="-1"><a class="header-anchor" href="#threadpoolconfigproperties" aria-hidden="true">#</a> --- ThreadPoolConfigProperties</h3><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token annotation punctuation">@ConfigurationProperties</span><span class="token punctuation">(</span>prefix <span class="token operator">=</span> <span class="token string">&quot;yumall.thread&quot;</span><span class="token punctuation">)</span>
<span class="token annotation punctuation">@Data</span>
<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">ThreadPoolConfigProperties</span><span class="token punctuation">{</span>
    <span class="token keyword">private</span> <span class="token class-name">Integer</span> coreSize<span class="token punctuation">;</span>
    <span class="token keyword">private</span> <span class="token class-name">Integer</span> maxSize<span class="token punctuation">;</span>
    <span class="token keyword">private</span> <span class="token class-name">Integer</span> keepAliveTime<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="properties" tabindex="-1"><a class="header-anchor" href="#properties" aria-hidden="true">#</a> --- Properties</h3><div class="language-xml line-numbers-mode" data-ext="xml"><pre class="language-xml"><code>#配置线程池
yumall.thread.coreSize=20
yumall.thread.maxSize=200
yumall.thread.keepAliveTime=10
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>ThreadPoolExecutor executor;</p><h2 id="_1、sku基本信息的获取-pms-sku-info" tabindex="-1"><a class="header-anchor" href="#_1、sku基本信息的获取-pms-sku-info" aria-hidden="true">#</a> 1、sku基本信息的获取 pms_sku_info</h2><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token class-name">CompletableFuture</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">SkuInfoEntity</span><span class="token punctuation">&gt;</span></span> infoFuture <span class="token operator">=</span> <span class="token class-name">CompletableFuture</span><span class="token punctuation">.</span><span class="token function">supplyAsync</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">-&gt;</span> <span class="token punctuation">{</span>
   <span class="token class-name">SkuInfoEntity</span> info <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">getById</span><span class="token punctuation">(</span>skuId<span class="token punctuation">)</span><span class="token punctuation">;</span>
   skuItemVo<span class="token punctuation">.</span><span class="token function">setInfo</span><span class="token punctuation">(</span>info<span class="token punctuation">)</span><span class="token punctuation">;</span>
   <span class="token keyword">return</span> info<span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">,</span> executor<span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="_2、sku的图片信息" tabindex="-1"><a class="header-anchor" href="#_2、sku的图片信息" aria-hidden="true">#</a> 2、sku的图片信息</h2><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token class-name">CompletableFuture</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Void</span><span class="token punctuation">&gt;</span></span> imageFuture <span class="token operator">=</span> <span class="token class-name">CompletableFuture</span><span class="token punctuation">.</span><span class="token function">runAsync</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">-&gt;</span> <span class="token punctuation">{</span>
   <span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">SkuImagesEntity</span><span class="token punctuation">&gt;</span></span> imagesEntities <span class="token operator">=</span> skuImagesService<span class="token punctuation">.</span><span class="token function">getImagesBySkuId</span><span class="token punctuation">(</span>skuId<span class="token punctuation">)</span><span class="token punctuation">;</span>
   skuItemVo<span class="token punctuation">.</span><span class="token function">setImages</span><span class="token punctuation">(</span>imagesEntities<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">,</span> executor<span class="token punctuation">)</span><span class="token punctuation">;</span>

getImagesBySkuId<span class="token operator">::</span><span class="token keyword">this</span><span class="token punctuation">.</span>baseMapper<span class="token punctuation">.</span><span class="token function">selectList</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">QueryWrapper</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">SkuImagesEntity</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">eq</span><span class="token punctuation">(</span><span class="token string">&quot;sku_id&quot;</span><span class="token punctuation">,</span> skuId<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="_3、获取spu的销售属性组合" tabindex="-1"><a class="header-anchor" href="#_3、获取spu的销售属性组合" aria-hidden="true">#</a> 3、获取spu的销售属性组合</h2><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token class-name">CompletableFuture</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Void</span><span class="token punctuation">&gt;</span></span> saleAttrFuture <span class="token operator">=</span> infoFuture<span class="token punctuation">.</span><span class="token function">thenAcceptAsync</span><span class="token punctuation">(</span><span class="token punctuation">(</span>res<span class="token punctuation">)</span> <span class="token operator">-&gt;</span> <span class="token punctuation">{</span>
   <span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">SkuItemSaleAttrVo</span><span class="token punctuation">&gt;</span></span> saleAttrVos <span class="token operator">=</span> skuSaleAttrValueService<span class="token punctuation">.</span><span class="token function">getSaleAttrBySpuId</span><span class="token punctuation">(</span>res<span class="token punctuation">.</span><span class="token function">getSpuId</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
   skuItemVo<span class="token punctuation">.</span><span class="token function">setSaleAttr</span><span class="token punctuation">(</span>saleAttrVos<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">,</span> executor<span class="token punctuation">)</span><span class="token punctuation">;</span>

getSaleAttrBySpuId<span class="token operator">::</span>
	<span class="token class-name">SkuSaleAttrValueDao</span> baseMapper <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">getBaseMapper</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
	<span class="token keyword">return</span> baseMapper<span class="token punctuation">.</span><span class="token function">getSaleAttrBySpuId</span><span class="token punctuation">(</span>spuId<span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="_4、获取spu的介绍" tabindex="-1"><a class="header-anchor" href="#_4、获取spu的介绍" aria-hidden="true">#</a> 4、获取spu的介绍</h2><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token class-name">CompletableFuture</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Void</span><span class="token punctuation">&gt;</span></span> descFuture <span class="token operator">=</span> infoFuture<span class="token punctuation">.</span><span class="token function">thenAcceptAsync</span><span class="token punctuation">(</span><span class="token punctuation">(</span>res<span class="token punctuation">)</span> <span class="token operator">-&gt;</span> <span class="token punctuation">{</span>
   <span class="token class-name">SpuInfoDescEntity</span> spuInfoDescEntity <span class="token operator">=</span> spuInfoDescService<span class="token punctuation">.</span><span class="token function">getById</span><span class="token punctuation">(</span>res<span class="token punctuation">.</span><span class="token function">getSpuId</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
   skuItemVo<span class="token punctuation">.</span><span class="token function">setDesc</span><span class="token punctuation">(</span>spuInfoDescEntity<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">,</span> executor<span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="_5、获取spu的规格参数信息" tabindex="-1"><a class="header-anchor" href="#_5、获取spu的规格参数信息" aria-hidden="true">#</a> 5、获取spu的规格参数信息</h2><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token class-name">CompletableFuture</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Void</span><span class="token punctuation">&gt;</span></span> baseAttrFuture <span class="token operator">=</span> infoFuture<span class="token punctuation">.</span><span class="token function">thenAcceptAsync</span><span class="token punctuation">(</span><span class="token punctuation">(</span>res<span class="token punctuation">)</span> <span class="token operator">-&gt;</span> <span class="token punctuation">{</span>
   <span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">SpuItemAttrGroupVo</span><span class="token punctuation">&gt;</span></span> attrGroupVos <span class="token operator">=</span> attrGroupService<span class="token punctuation">.</span><span class="token function">getAttrGroupWithAttrsBySpuId</span><span class="token punctuation">(</span>res<span class="token punctuation">.</span><span class="token function">getSpuId</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> res<span class="token punctuation">.</span><span class="token function">getCatalogId</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
   skuItemVo<span class="token punctuation">.</span><span class="token function">setGroupAttrs</span><span class="token punctuation">(</span>attrGroupVos<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">,</span> executor<span class="token punctuation">)</span><span class="token punctuation">;</span>

getAttrGroupWithAttrsBySpuId<span class="token operator">::</span>
	<span class="token comment">//1、查出当前spu对应的所有属性的分组信息以及当前分组下的所有属性对应的值</span>
        <span class="token class-name">AttrGroupDao</span> baseMapper <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">getBaseMapper</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">return</span> baseMapper<span class="token punctuation">.</span><span class="token function">getAttrGroupWithAttrsBySpuId</span><span class="token punctuation">(</span>spuId<span class="token punctuation">,</span>catalogId<span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="todo-6、远程调用查询当前sku是否参与秒杀优惠活动" tabindex="-1"><a class="header-anchor" href="#todo-6、远程调用查询当前sku是否参与秒杀优惠活动" aria-hidden="true">#</a> //TODO 6、远程调用查询当前sku是否参与秒杀优惠活动</h2><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token class-name">CompletableFuture</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Void</span><span class="token punctuation">&gt;</span></span> seckillFuture <span class="token operator">=</span> <span class="token class-name">CompletableFuture</span><span class="token punctuation">.</span><span class="token function">runAsync</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">-&gt;</span> <span class="token punctuation">{</span>
   <span class="token class-name">R</span> skuSeckilInfo <span class="token operator">=</span> seckillFeignService<span class="token punctuation">.</span><span class="token function">getSkuSeckilInfo</span><span class="token punctuation">(</span>skuId<span class="token punctuation">)</span><span class="token punctuation">;</span>
   <span class="token keyword">if</span><span class="token punctuation">(</span>skuSeckilInfo<span class="token punctuation">.</span><span class="token function">getCode</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">==</span> <span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
      <span class="token comment">//查询成功</span>
      <span class="token class-name">SeckillSkuVo</span> seckilInfoData <span class="token operator">=</span> skuSeckilInfo<span class="token punctuation">.</span><span class="token function">getData</span><span class="token punctuation">(</span><span class="token string">&quot;data&quot;</span><span class="token punctuation">,</span> <span class="token keyword">new</span> <span class="token class-name">TypeReference</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">SeckillSkuVo</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
      <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
      skuItemVo<span class="token punctuation">.</span><span class="token function">setSeckillSkuVo</span><span class="token punctuation">(</span>seckilInfoData<span class="token punctuation">)</span><span class="token punctuation">;</span>

      <span class="token keyword">if</span><span class="token punctuation">(</span>seckilInfoData <span class="token operator">!=</span> <span class="token keyword">null</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
         <span class="token keyword">long</span> currentTime <span class="token operator">=</span> <span class="token class-name">System</span><span class="token punctuation">.</span><span class="token function">currentTimeMillis</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
         <span class="token keyword">if</span><span class="token punctuation">(</span>currentTime <span class="token operator">&gt;</span> seckilInfoData<span class="token punctuation">.</span><span class="token function">getEndTime</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
            skuItemVo<span class="token punctuation">.</span><span class="token function">setSeckillSkuVo</span><span class="token punctuation">(</span><span class="token keyword">null</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
         <span class="token punctuation">}</span>
      <span class="token punctuation">}</span>
   <span class="token punctuation">}</span>
<span class="token punctuation">}</span><span class="token punctuation">,</span> executor<span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>CompletableFuture.allOf(saleAttrFuture, descFuture, baseAttrFuture, imageFuture).get();</p><p>return skuItemVo;</p><h1>十四、认证服务</h1><h2 id="_1、初始化" tabindex="-1"><a class="header-anchor" href="#_1、初始化" aria-hidden="true">#</a> 1、初始化</h2><p>创建yumall-auth-server服务，port：20000，pom排除SQL依赖</p><p>nacos：other.yml，redis.yml</p>`,85),z={href:"http://auth.yumall.com",target:"_blank",rel:"noopener noreferrer"},X=p(`<h2 id="_2、网关" tabindex="-1"><a class="header-anchor" href="#_2、网关" aria-hidden="true">#</a> 2、网关:</h2><div class="language-xml line-numbers-mode" data-ext="xml"><pre class="language-xml"><code>- id: yumall_auth_route
  uri: lb://yumall-auth-server
  predicates:
    - Host=auth.yumall.com
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="_3、首页" tabindex="-1"><a class="header-anchor" href="#_3、首页" aria-hidden="true">#</a> 3、首页</h2><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token annotation punctuation">@GetMapping</span><span class="token punctuation">(</span>value <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token string">&quot;/&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;/login.html&quot;</span><span class="token punctuation">}</span><span class="token punctuation">)</span>
<span class="token keyword">public</span> <span class="token class-name">String</span> <span class="token function">loginPage</span><span class="token punctuation">(</span><span class="token class-name">HttpSession</span> session<span class="token punctuation">)</span><span class="token punctuation">{</span>

   <span class="token comment">//从session先取出来用户的信息，判断用户是否已经登录过了</span>
   <span class="token class-name">Object</span> attribute <span class="token operator">=</span> session<span class="token punctuation">.</span><span class="token function">getAttribute</span><span class="token punctuation">(</span><span class="token constant">LOGIN_USER</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
   <span class="token comment">//如果用户没登录那就跳转到登录页面</span>
   <span class="token keyword">if</span><span class="token punctuation">(</span>attribute <span class="token operator">==</span> <span class="token keyword">null</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
      <span class="token keyword">return</span> <span class="token string">&quot;login&quot;</span><span class="token punctuation">;</span>
   <span class="token punctuation">}</span><span class="token keyword">else</span><span class="token punctuation">{</span>
      <span class="token keyword">return</span> <span class="token string">&quot;redirect:http://yumall.com&quot;</span><span class="token punctuation">;</span>
   <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="_4、注册-获取手机验证码-倒计时" tabindex="-1"><a class="header-anchor" href="#_4、注册-获取手机验证码-倒计时" aria-hidden="true">#</a> 4、注册-获取手机验证码，倒计时</h2><h3 id="_4-1-html" tabindex="-1"><a class="header-anchor" href="#_4-1-html" aria-hidden="true">#</a> 4.1 html</h3><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token operator">&lt;</span>div <span class="token keyword">class</span><span class="token operator">=</span><span class="token string">&quot;register-box&quot;</span><span class="token operator">&gt;</span>
            <span class="token operator">&lt;</span>label <span class="token keyword">class</span><span class="token operator">=</span><span class="token string">&quot;other_label&quot;</span><span class="token operator">&gt;</span>验 证 码
                <span class="token operator">&lt;</span>input name<span class="token operator">=</span><span class="token string">&quot;code&quot;</span> maxlength<span class="token operator">=</span><span class="token string">&quot;20&quot;</span> type<span class="token operator">=</span><span class="token string">&quot;text&quot;</span> placeholder<span class="token operator">=</span><span class="token string">&quot;请输入验证码&quot;</span> <span class="token keyword">class</span><span class="token operator">=</span><span class="token string">&quot;caa&quot;</span><span class="token operator">&gt;</span>
            <span class="token operator">&lt;</span><span class="token operator">/</span>label<span class="token operator">&gt;</span>
            <span class="token operator">&lt;</span>a id<span class="token operator">=</span><span class="token string">&quot;sendCode&quot;</span> <span class="token keyword">class</span><span class="token operator">=</span><span class="token string">&quot;&quot;</span><span class="token operator">&gt;</span> 发送验证码 <span class="token operator">&lt;</span><span class="token operator">/</span>a<span class="token operator">&gt;</span>
        <span class="token operator">&lt;</span><span class="token operator">/</span>div<span class="token operator">&gt;</span>


<span class="token function">$</span><span class="token punctuation">(</span><span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token function">$</span><span class="token punctuation">(</span><span class="token string">&quot;#sendCode&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">click</span><span class="token punctuation">(</span><span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token comment">//2、倒计时</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">$</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">hasClass</span><span class="token punctuation">(</span><span class="token string">&quot;disabled&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token comment">//正在倒计时中</span>
        <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
            <span class="token comment">//1、给指定手机号发送验证码</span>
            $<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token string">&quot;/sms/sendCode?phone=&quot;</span> <span class="token operator">+</span> <span class="token function">$</span><span class="token punctuation">(</span><span class="token string">&quot;#phoneNum&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">val</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">data</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                <span class="token keyword">if</span> <span class="token punctuation">(</span>data<span class="token punctuation">.</span>code <span class="token operator">!=</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                    <span class="token function">alert</span><span class="token punctuation">(</span>data<span class="token punctuation">.</span>msg<span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token punctuation">}</span>
            <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token function">timeoutChangeStyle</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">var</span> num <span class="token operator">=</span> <span class="token number">60</span><span class="token punctuation">;</span>

    <span class="token keyword">function</span> <span class="token function">timeoutChangeStyle</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token function">$</span><span class="token punctuation">(</span><span class="token string">&quot;#sendCode&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">attr</span><span class="token punctuation">(</span><span class="token string">&quot;class&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;disabled&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>num <span class="token operator">==</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token function">$</span><span class="token punctuation">(</span><span class="token string">&quot;#sendCode&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">text</span><span class="token punctuation">(</span><span class="token string">&quot;发送验证码&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            num <span class="token operator">=</span> <span class="token number">60</span><span class="token punctuation">;</span>
            <span class="token function">$</span><span class="token punctuation">(</span><span class="token string">&quot;#sendCode&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">attr</span><span class="token punctuation">(</span><span class="token string">&quot;class&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
            <span class="token keyword">var</span> str <span class="token operator">=</span> num <span class="token operator">+</span> <span class="token string">&quot;s 后再次发送&quot;</span><span class="token punctuation">;</span>
            <span class="token function">$</span><span class="token punctuation">(</span><span class="token string">&quot;#sendCode&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">text</span><span class="token punctuation">(</span>str<span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token function">setTimeout</span><span class="token punctuation">(</span><span class="token string">&quot;timeoutChangeStyle()&quot;</span><span class="token punctuation">,</span> <span class="token number">1000</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
        num<span class="token operator">--</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_4-2-后端" tabindex="-1"><a class="header-anchor" href="#_4-2-后端" aria-hidden="true">#</a> 4.2 后端：</h3><h4 id="_4-2-1-a、接口防刷-b、验证码的再次效验-c、存入redis-防止同一个手机号在60秒内再次发送验证码" tabindex="-1"><a class="header-anchor" href="#_4-2-1-a、接口防刷-b、验证码的再次效验-c、存入redis-防止同一个手机号在60秒内再次发送验证码" aria-hidden="true">#</a> 4.2.1 a、接口防刷，b、验证码的再次效验，c、存入redis，防止同一个手机号在60秒内再次发送验证码</h4><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token annotation punctuation">@ResponseBody</span>
<span class="token annotation punctuation">@GetMapping</span><span class="token punctuation">(</span>value <span class="token operator">=</span> <span class="token string">&quot;/sms/sendCode&quot;</span><span class="token punctuation">)</span>
<span class="token keyword">public</span> <span class="token class-name">R</span> <span class="token function">sendCode</span><span class="token punctuation">(</span><span class="token annotation punctuation">@RequestParam</span><span class="token punctuation">(</span><span class="token string">&quot;phone&quot;</span><span class="token punctuation">)</span> <span class="token class-name">String</span> phone<span class="token punctuation">)</span><span class="token punctuation">{</span>

   <span class="token comment">//1、接口防刷</span>
   <span class="token class-name">String</span> redisCode <span class="token operator">=</span> stringRedisTemplate<span class="token punctuation">.</span><span class="token function">opsForValue</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token class-name">AuthServerConstant</span><span class="token punctuation">.</span><span class="token constant">SMS_CODE_CACHE_PREFIX</span><span class="token operator">+</span>phone<span class="token punctuation">)</span><span class="token punctuation">;</span>
   <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token operator">!</span><span class="token class-name">StringUtils</span><span class="token punctuation">.</span><span class="token function">isEmpty</span><span class="token punctuation">(</span>redisCode<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
      <span class="token comment">//活动存入redis的时间，用当前时间减去存入redis的时间，判断用户手机号是否在60s内发送验证码</span>
      <span class="token keyword">long</span> currentTime <span class="token operator">=</span> <span class="token class-name">Long</span><span class="token punctuation">.</span><span class="token function">parseLong</span><span class="token punctuation">(</span>redisCode<span class="token punctuation">.</span><span class="token function">split</span><span class="token punctuation">(</span><span class="token string">&quot;_&quot;</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token class-name">System</span><span class="token punctuation">.</span><span class="token function">currentTimeMillis</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">-</span>currentTime<span class="token punctuation">)</span> <span class="token operator">&lt;</span> <span class="token number">60000</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
         <span class="token comment">//60s内不能再发</span>
         <span class="token keyword">return</span> <span class="token class-name">R</span><span class="token punctuation">.</span><span class="token function">error</span><span class="token punctuation">(</span><span class="token class-name">BizCodeEnum</span><span class="token punctuation">.</span><span class="token constant">SMS_CODE_EXCEPTION</span><span class="token punctuation">.</span><span class="token function">getCode</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token class-name">BizCodeEnum</span><span class="token punctuation">.</span><span class="token constant">SMS_CODE_EXCEPTION</span><span class="token punctuation">.</span><span class="token function">getMsg</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token punctuation">}</span>
   <span class="token punctuation">}</span>

   <span class="token comment">//2、验证码的再次效验 redis.存key-phone,value-code</span>
   <span class="token keyword">int</span> code <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token keyword">int</span><span class="token punctuation">)</span> <span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token class-name">Math</span><span class="token punctuation">.</span><span class="token function">random</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">*</span><span class="token number">9</span><span class="token operator">+</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token operator">*</span><span class="token number">100000</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
   <span class="token class-name">String</span> codeNum <span class="token operator">=</span> <span class="token class-name">String</span><span class="token punctuation">.</span><span class="token function">valueOf</span><span class="token punctuation">(</span>code<span class="token punctuation">)</span><span class="token punctuation">;</span>
   <span class="token class-name">String</span> redisStorage <span class="token operator">=</span> codeNum<span class="token operator">+</span><span class="token string">&quot;_&quot;</span><span class="token operator">+</span><span class="token class-name">System</span><span class="token punctuation">.</span><span class="token function">currentTimeMillis</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

   <span class="token comment">//存入redis，防止同一个手机号在60秒内再次发送验证码，10分钟</span>
   stringRedisTemplate<span class="token punctuation">.</span><span class="token function">opsForValue</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">set</span><span class="token punctuation">(</span><span class="token class-name">AuthServerConstant</span><span class="token punctuation">.</span><span class="token constant">SMS_CODE_CACHE_PREFIX</span><span class="token operator">+</span>phone<span class="token punctuation">,</span>
         redisStorage<span class="token punctuation">,</span> <span class="token number">10</span><span class="token punctuation">,</span> <span class="token class-name">TimeUnit</span><span class="token punctuation">.</span><span class="token constant">MINUTES</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
	<span class="token comment">//进入第三方服务+使用阿里发送验证码</span>
   thirdPartFeignService<span class="token punctuation">.</span><span class="token function">sendCode</span><span class="token punctuation">(</span>phone<span class="token punctuation">,</span> codeNum<span class="token punctuation">)</span><span class="token punctuation">;</span>

   <span class="token keyword">return</span> <span class="token class-name">R</span><span class="token punctuation">.</span><span class="token function">ok</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="_4-2-2-进入第三方服务-使用阿里发送验证码" tabindex="-1"><a class="header-anchor" href="#_4-2-2-进入第三方服务-使用阿里发送验证码" aria-hidden="true">#</a> 4.2.2 进入第三方服务+使用阿里发送验证码</h4><p>package com.kong.yumall.authserver.feign;</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token annotation punctuation">@FeignClient</span><span class="token punctuation">(</span><span class="token string">&quot;yumall-third-party&quot;</span><span class="token punctuation">)</span>
<span class="token keyword">public</span> <span class="token keyword">interface</span> <span class="token class-name">ThirdPartFeignService</span><span class="token punctuation">{</span>
   <span class="token annotation punctuation">@GetMapping</span><span class="token punctuation">(</span>value <span class="token operator">=</span> <span class="token string">&quot;/sms/sendCode&quot;</span><span class="token punctuation">)</span>
   <span class="token class-name">R</span> <span class="token function">sendCode</span><span class="token punctuation">(</span><span class="token annotation punctuation">@RequestParam</span><span class="token punctuation">(</span><span class="token string">&quot;phone&quot;</span><span class="token punctuation">)</span> <span class="token class-name">String</span> phone<span class="token punctuation">,</span> <span class="token annotation punctuation">@RequestParam</span><span class="token punctuation">(</span><span class="token string">&quot;code&quot;</span><span class="token punctuation">)</span> <span class="token class-name">String</span> code<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token annotation punctuation">@GetMapping</span><span class="token punctuation">(</span>value <span class="token operator">=</span> <span class="token string">&quot;/sendCode&quot;</span><span class="token punctuation">)</span>
<span class="token keyword">public</span> <span class="token class-name">R</span> <span class="token function">sendCode</span><span class="token punctuation">(</span><span class="token annotation punctuation">@RequestParam</span><span class="token punctuation">(</span><span class="token string">&quot;phone&quot;</span><span class="token punctuation">)</span> <span class="token class-name">String</span> phone<span class="token punctuation">,</span> <span class="token annotation punctuation">@RequestParam</span><span class="token punctuation">(</span><span class="token string">&quot;code&quot;</span><span class="token punctuation">)</span> <span class="token class-name">String</span> code<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token comment">//发送验证码</span>
    smsComponent<span class="token punctuation">.</span><span class="token function">sendCode</span><span class="token punctuation">(</span>phone<span class="token punctuation">,</span>code<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">return</span> <span class="token class-name">R</span><span class="token punctuation">.</span><span class="token function">ok</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>阿里云</p>`,15),J={href:"https://market.console.aliyun.com/imageconsole/index.htm?#/bizlist?_k=fxmn6k",target:"_blank",rel:"noopener noreferrer"},$=p(`<div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>&lt;dependency&gt;
    &lt;groupId&gt;org.springframework.boot&lt;/groupId&gt;
    &lt;artifactId&gt;spring-boot-configuration-processor&lt;/artifactId&gt;
    &lt;optional&gt;true&lt;/optional&gt;
&lt;/dependency&gt;
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>spring.cloud.nacos.config.ext-config[0].data-id=oss.yml
spring.cloud.nacos.config.ext-config[0].group=DEFAULT_GROUP
spring.cloud.nacos.config.ext-config[0].refresh=true
spring.cloud.nacos.config.ext-config[1].data-id=sms.yml
spring.cloud.nacos.config.ext-config[1].group=DEFAULT_GROUP
spring.cloud.nacos.config.ext-config[1].refresh=true
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-xml line-numbers-mode" data-ext="xml"><pre class="language-xml"><code>spring:
  cloud:
    alicloud:
      sms:
        host: https://dfsns.market.alicloudapi.com
        path: /data/send_sms
        appcode: 2805a9d8f3644286a74525e800288d18
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token annotation punctuation">@ConfigurationProperties</span><span class="token punctuation">(</span>prefix <span class="token operator">=</span> <span class="token string">&quot;spring.cloud.alicloud.sms&quot;</span><span class="token punctuation">)</span>
<span class="token annotation punctuation">@Data</span>
<span class="token annotation punctuation">@Component</span>
<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">SmsComponent</span><span class="token punctuation">{</span>

	<span class="token keyword">private</span> <span class="token class-name">String</span> host<span class="token punctuation">;</span>
	<span class="token keyword">private</span> <span class="token class-name">String</span> path<span class="token punctuation">;</span>
	<span class="token keyword">private</span> <span class="token class-name">String</span> appcode<span class="token punctuation">;</span>
	<span class="token keyword">private</span> <span class="token class-name">String</span> skin<span class="token punctuation">;</span>
	<span class="token keyword">private</span> <span class="token class-name">String</span> sign<span class="token punctuation">;</span>

	<span class="token doc-comment comment">/**
	 * <span class="token keyword">@param</span> <span class="token parameter">phone</span>
	 * <span class="token keyword">@param</span> <span class="token parameter">code</span>
	 */</span>
	<span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">sendCode</span><span class="token punctuation">(</span><span class="token class-name">String</span> phone<span class="token punctuation">,</span> <span class="token class-name">String</span> code<span class="token punctuation">)</span><span class="token punctuation">{</span>
		<span class="token class-name">String</span> method <span class="token operator">=</span> <span class="token string">&quot;POST&quot;</span><span class="token punctuation">;</span>
		<span class="token class-name">Map</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">,</span> <span class="token class-name">String</span><span class="token punctuation">&gt;</span></span> headers <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">HashMap</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">,</span> <span class="token class-name">String</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
		headers<span class="token punctuation">.</span><span class="token function">put</span><span class="token punctuation">(</span><span class="token string">&quot;Authorization&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;APPCODE &quot;</span><span class="token operator">+</span>appcode<span class="token punctuation">)</span><span class="token punctuation">;</span>
		headers<span class="token punctuation">.</span><span class="token function">put</span><span class="token punctuation">(</span><span class="token string">&quot;Content-Type&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;application/x-www-form-urlencoded; charset=UTF-8&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
		<span class="token class-name">Map</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">,</span> <span class="token class-name">String</span><span class="token punctuation">&gt;</span></span> query <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">HashMap</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">,</span> <span class="token class-name">String</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
		<span class="token class-name">Map</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">,</span> <span class="token class-name">String</span><span class="token punctuation">&gt;</span></span> bodys <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">HashMap</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">,</span> <span class="token class-name">String</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
		bodys<span class="token punctuation">.</span><span class="token function">put</span><span class="token punctuation">(</span><span class="token string">&quot;content&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;code:&quot;</span><span class="token operator">+</span>code<span class="token operator">+</span><span class="token string">&quot;,expire_at:5&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
		bodys<span class="token punctuation">.</span><span class="token function">put</span><span class="token punctuation">(</span><span class="token string">&quot;phone_number&quot;</span><span class="token punctuation">,</span> phone<span class="token punctuation">)</span><span class="token punctuation">;</span>
		bodys<span class="token punctuation">.</span><span class="token function">put</span><span class="token punctuation">(</span><span class="token string">&quot;template_id&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;TPL_0001&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
		<span class="token keyword">try</span><span class="token punctuation">{</span>
			<span class="token class-name">HttpResponse</span> response <span class="token operator">=</span> <span class="token class-name">HttpUtils</span><span class="token punctuation">.</span><span class="token function">doPost</span><span class="token punctuation">(</span>host<span class="token punctuation">,</span> path<span class="token punctuation">,</span> method<span class="token punctuation">,</span> headers<span class="token punctuation">,</span> query<span class="token punctuation">,</span> bodys<span class="token punctuation">)</span><span class="token punctuation">;</span>
			<span class="token class-name">System</span><span class="token punctuation">.</span>err<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>response<span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
		<span class="token punctuation">}</span><span class="token keyword">catch</span><span class="token punctuation">(</span><span class="token class-name">Exception</span> e<span class="token punctuation">)</span><span class="token punctuation">{</span>
			e<span class="token punctuation">.</span><span class="token function">printStackTrace</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
		<span class="token punctuation">}</span>
	<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="_5、用户注册" tabindex="-1"><a class="header-anchor" href="#_5、用户注册" aria-hidden="true">#</a> 5、用户注册</h2><h3 id="_5-1、用户实体类" tabindex="-1"><a class="header-anchor" href="#_5-1、用户实体类" aria-hidden="true">#</a> 5.1、用户实体类</h3><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token class-name">UserRegisterVo</span> <span class="token punctuation">{</span>

    <span class="token annotation punctuation">@NotEmpty</span><span class="token punctuation">(</span>message <span class="token operator">=</span> <span class="token string">&quot;用户名不能为空&quot;</span><span class="token punctuation">)</span>
    <span class="token annotation punctuation">@Length</span><span class="token punctuation">(</span>min <span class="token operator">=</span> <span class="token number">6</span><span class="token punctuation">,</span> max <span class="token operator">=</span> <span class="token number">19</span><span class="token punctuation">,</span> message<span class="token operator">=</span><span class="token string">&quot;用户名长度在6-18字符&quot;</span><span class="token punctuation">)</span>
    <span class="token keyword">private</span> <span class="token class-name">String</span> userName<span class="token punctuation">;</span>

    <span class="token annotation punctuation">@NotEmpty</span><span class="token punctuation">(</span>message <span class="token operator">=</span> <span class="token string">&quot;密码必须填写&quot;</span><span class="token punctuation">)</span>
    <span class="token annotation punctuation">@Length</span><span class="token punctuation">(</span>min <span class="token operator">=</span> <span class="token number">6</span><span class="token punctuation">,</span>max <span class="token operator">=</span> <span class="token number">18</span><span class="token punctuation">,</span>message <span class="token operator">=</span> <span class="token string">&quot;密码必须是6—18位字符&quot;</span><span class="token punctuation">)</span>
    <span class="token keyword">private</span> <span class="token class-name">String</span> password<span class="token punctuation">;</span>

    <span class="token annotation punctuation">@NotEmpty</span><span class="token punctuation">(</span>message <span class="token operator">=</span> <span class="token string">&quot;手机号不能为空&quot;</span><span class="token punctuation">)</span>
    <span class="token annotation punctuation">@Pattern</span><span class="token punctuation">(</span>regexp <span class="token operator">=</span> <span class="token string">&quot;^[1]([3-9])[0-9]{9}$&quot;</span><span class="token punctuation">,</span> message <span class="token operator">=</span> <span class="token string">&quot;手机号格式不正确&quot;</span><span class="token punctuation">)</span>
    <span class="token keyword">private</span> <span class="token class-name">String</span> phone<span class="token punctuation">;</span>

    <span class="token annotation punctuation">@NotEmpty</span><span class="token punctuation">(</span>message <span class="token operator">=</span> <span class="token string">&quot;验证码不能为空&quot;</span><span class="token punctuation">)</span>
    <span class="token keyword">private</span> <span class="token class-name">String</span> code<span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_5-2、注册流程" tabindex="-1"><a class="header-anchor" href="#_5-2、注册流程" aria-hidden="true">#</a> 5.2、注册流程</h3><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token annotation punctuation">@PostMapping</span><span class="token punctuation">(</span>value <span class="token operator">=</span> <span class="token string">&quot;/register&quot;</span><span class="token punctuation">)</span>
<span class="token keyword">public</span> <span class="token class-name">String</span> <span class="token function">register</span><span class="token punctuation">(</span><span class="token annotation punctuation">@Valid</span> <span class="token class-name">UserRegisterVo</span> vos<span class="token punctuation">,</span> <span class="token class-name">BindingResult</span> result<span class="token punctuation">,</span>
                  <span class="token class-name">RedirectAttributes</span> attributes<span class="token punctuation">)</span><span class="token punctuation">{</span>

   <span class="token comment">//如果有错误回到注册页面</span>
   <span class="token keyword">if</span><span class="token punctuation">(</span>result<span class="token punctuation">.</span><span class="token function">hasErrors</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
      <span class="token class-name">Map</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">,</span> <span class="token class-name">String</span><span class="token punctuation">&gt;</span></span> errors <span class="token operator">=</span> result<span class="token punctuation">.</span><span class="token function">getFieldErrors</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">stream</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">collect</span><span class="token punctuation">(</span><span class="token class-name">Collectors</span><span class="token punctuation">.</span><span class="token function">toMap</span><span class="token punctuation">(</span><span class="token class-name">FieldError</span><span class="token operator">::</span><span class="token function">getField</span><span class="token punctuation">,</span> <span class="token class-name">FieldError</span><span class="token operator">::</span><span class="token function">getDefaultMessage</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
      attributes<span class="token punctuation">.</span><span class="token function">addFlashAttribute</span><span class="token punctuation">(</span><span class="token string">&quot;errors&quot;</span><span class="token punctuation">,</span> errors<span class="token punctuation">)</span><span class="token punctuation">;</span>

      <span class="token comment">//效验出错回到注册页面</span>
      <span class="token keyword">return</span> <span class="token string">&quot;redirect:http://auth.yumall.com/reg.html&quot;</span><span class="token punctuation">;</span>
   <span class="token punctuation">}</span>

   <span class="token comment">//1、效验验证码</span>
   <span class="token class-name">String</span> code <span class="token operator">=</span> vos<span class="token punctuation">.</span><span class="token function">getCode</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

   <span class="token comment">//获取存入Redis里的验证码</span>
   <span class="token class-name">String</span> redisCode <span class="token operator">=</span> stringRedisTemplate<span class="token punctuation">.</span><span class="token function">opsForValue</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token class-name">AuthServerConstant</span><span class="token punctuation">.</span><span class="token constant">SMS_CODE_CACHE_PREFIX</span><span class="token operator">+</span>vos<span class="token punctuation">.</span><span class="token function">getPhone</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
   <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token operator">!</span><span class="token class-name">StringUtils</span><span class="token punctuation">.</span><span class="token function">isEmpty</span><span class="token punctuation">(</span>redisCode<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
      <span class="token comment">//截取字符串</span>
      <span class="token keyword">if</span><span class="token punctuation">(</span>code<span class="token punctuation">.</span><span class="token function">equals</span><span class="token punctuation">(</span>redisCode<span class="token punctuation">.</span><span class="token function">split</span><span class="token punctuation">(</span><span class="token string">&quot;_&quot;</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
         <span class="token comment">//删除验证码;令牌机制</span>
         stringRedisTemplate<span class="token punctuation">.</span><span class="token function">delete</span><span class="token punctuation">(</span><span class="token class-name">AuthServerConstant</span><span class="token punctuation">.</span><span class="token constant">SMS_CODE_CACHE_PREFIX</span><span class="token operator">+</span>vos<span class="token punctuation">.</span><span class="token function">getPhone</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
         <span class="token comment">//验证码通过，真正注册，调用远程服务进行注册</span>
         <span class="token class-name">R</span> register <span class="token operator">=</span> memberFeignService<span class="token punctuation">.</span><span class="token function">register</span><span class="token punctuation">(</span>vos<span class="token punctuation">)</span><span class="token punctuation">;</span>
         <span class="token keyword">if</span><span class="token punctuation">(</span>register<span class="token punctuation">.</span><span class="token function">getCode</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">==</span> <span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
            <span class="token comment">//成功</span>
            <span class="token keyword">return</span> <span class="token string">&quot;redirect:http://auth.yumall.com/login.html&quot;</span><span class="token punctuation">;</span>
         <span class="token punctuation">}</span><span class="token keyword">else</span><span class="token punctuation">{</span>
            <span class="token comment">//失败</span>
            <span class="token class-name">Map</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">,</span> <span class="token class-name">String</span><span class="token punctuation">&gt;</span></span> errors <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">HashMap</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            errors<span class="token punctuation">.</span><span class="token function">put</span><span class="token punctuation">(</span><span class="token string">&quot;msg&quot;</span><span class="token punctuation">,</span> register<span class="token punctuation">.</span><span class="token function">getData</span><span class="token punctuation">(</span><span class="token string">&quot;msg&quot;</span><span class="token punctuation">,</span> <span class="token keyword">new</span> <span class="token class-name">TypeReference</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            attributes<span class="token punctuation">.</span><span class="token function">addFlashAttribute</span><span class="token punctuation">(</span><span class="token string">&quot;errors&quot;</span><span class="token punctuation">,</span> errors<span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token keyword">return</span> <span class="token string">&quot;redirect:http://auth.yumall.com/reg.html&quot;</span><span class="token punctuation">;</span>
         <span class="token punctuation">}</span>


      <span class="token punctuation">}</span><span class="token keyword">else</span><span class="token punctuation">{</span>
         <span class="token comment">//效验出错回到注册页面</span>
         <span class="token class-name">Map</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">,</span> <span class="token class-name">String</span><span class="token punctuation">&gt;</span></span> errors <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">HashMap</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
         errors<span class="token punctuation">.</span><span class="token function">put</span><span class="token punctuation">(</span><span class="token string">&quot;code&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;验证码错误&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
         attributes<span class="token punctuation">.</span><span class="token function">addFlashAttribute</span><span class="token punctuation">(</span><span class="token string">&quot;errors&quot;</span><span class="token punctuation">,</span> errors<span class="token punctuation">)</span><span class="token punctuation">;</span>
         <span class="token keyword">return</span> <span class="token string">&quot;redirect:http://auth.yumall.com/reg.html&quot;</span><span class="token punctuation">;</span>
      <span class="token punctuation">}</span>
   <span class="token punctuation">}</span><span class="token keyword">else</span><span class="token punctuation">{</span>
      <span class="token comment">//效验出错回到注册页面</span>
      <span class="token class-name">Map</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">,</span> <span class="token class-name">String</span><span class="token punctuation">&gt;</span></span> errors <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">HashMap</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
      errors<span class="token punctuation">.</span><span class="token function">put</span><span class="token punctuation">(</span><span class="token string">&quot;code&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;验证码错误&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
      attributes<span class="token punctuation">.</span><span class="token function">addFlashAttribute</span><span class="token punctuation">(</span><span class="token string">&quot;errors&quot;</span><span class="token punctuation">,</span> errors<span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token keyword">return</span> <span class="token string">&quot;redirect:http://auth.yumall.com/reg.html&quot;</span><span class="token punctuation">;</span>
   <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_5-3、远程调用会员服务实现注册" tabindex="-1"><a class="header-anchor" href="#_5-3、远程调用会员服务实现注册" aria-hidden="true">#</a> 5.3、远程调用会员服务实现注册</h3><p>/memberFeignService.register(vos);</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token annotation punctuation">@FeignClient</span><span class="token punctuation">(</span><span class="token string">&quot;yumall-member&quot;</span><span class="token punctuation">)</span>
<span class="token keyword">public</span> <span class="token keyword">interface</span> <span class="token class-name">MemberFeignService</span> <span class="token punctuation">{</span>

    <span class="token annotation punctuation">@PostMapping</span><span class="token punctuation">(</span>value <span class="token operator">=</span> <span class="token string">&quot;/member/member/register&quot;</span><span class="token punctuation">)</span>
    <span class="token class-name">R</span> <span class="token function">register</span><span class="token punctuation">(</span><span class="token annotation punctuation">@RequestBody</span> <span class="token class-name">UserRegisterVo</span> vo<span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token annotation punctuation">@PostMapping</span><span class="token punctuation">(</span>value <span class="token operator">=</span> <span class="token string">&quot;/register&quot;</span><span class="token punctuation">)</span>
<span class="token keyword">public</span> <span class="token class-name">R</span> <span class="token function">register</span><span class="token punctuation">(</span><span class="token annotation punctuation">@RequestBody</span> <span class="token class-name">MemberUserRegisterVo</span> vo<span class="token punctuation">)</span><span class="token punctuation">{</span>

   <span class="token keyword">try</span><span class="token punctuation">{</span>
      memberService<span class="token punctuation">.</span><span class="token function">register</span><span class="token punctuation">(</span>vo<span class="token punctuation">)</span><span class="token punctuation">;</span>
   <span class="token punctuation">}</span><span class="token keyword">catch</span><span class="token punctuation">(</span><span class="token class-name">PhoneException</span> e<span class="token punctuation">)</span><span class="token punctuation">{</span>
      <span class="token keyword">return</span> <span class="token class-name">R</span><span class="token punctuation">.</span><span class="token function">error</span><span class="token punctuation">(</span><span class="token class-name">BizCodeEnum</span><span class="token punctuation">.</span><span class="token constant">PHONE_EXIST_EXCEPTION</span><span class="token punctuation">.</span><span class="token function">getCode</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token class-name">BizCodeEnum</span><span class="token punctuation">.</span><span class="token constant">PHONE_EXIST_EXCEPTION</span><span class="token punctuation">.</span><span class="token function">getMsg</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
   <span class="token punctuation">}</span><span class="token keyword">catch</span><span class="token punctuation">(</span><span class="token class-name">UsernameException</span> e<span class="token punctuation">)</span><span class="token punctuation">{</span>
      <span class="token keyword">return</span> <span class="token class-name">R</span><span class="token punctuation">.</span><span class="token function">error</span><span class="token punctuation">(</span><span class="token class-name">BizCodeEnum</span><span class="token punctuation">.</span><span class="token constant">USER_EXIST_EXCEPTION</span><span class="token punctuation">.</span><span class="token function">getCode</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token class-name">BizCodeEnum</span><span class="token punctuation">.</span><span class="token constant">USER_EXIST_EXCEPTION</span><span class="token punctuation">.</span><span class="token function">getMsg</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
   <span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">register</span><span class="token punctuation">(</span><span class="token class-name">MemberUserRegisterVo</span> vo<span class="token punctuation">)</span><span class="token punctuation">{</span>

   <span class="token class-name">MemberEntity</span> memberEntity <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">MemberEntity</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

   <span class="token comment">//设置默认等级</span>
   <span class="token class-name">MemberLevelEntity</span> levelEntity <span class="token operator">=</span> memberLevelDao<span class="token punctuation">.</span><span class="token function">getDefaultLevel</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
   memberEntity<span class="token punctuation">.</span><span class="token function">setLevelId</span><span class="token punctuation">(</span>levelEntity<span class="token punctuation">.</span><span class="token function">getId</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

   <span class="token comment">//设置其它的默认信息</span>
   <span class="token comment">//检查用户名和手机号是否唯一。感知异常，异常机制</span>
   <span class="token function">checkPhoneUnique</span><span class="token punctuation">(</span>vo<span class="token punctuation">.</span><span class="token function">getPhone</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
   <span class="token function">checkUserNameUnique</span><span class="token punctuation">(</span>vo<span class="token punctuation">.</span><span class="token function">getUserName</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

   memberEntity<span class="token punctuation">.</span><span class="token function">setNickname</span><span class="token punctuation">(</span>vo<span class="token punctuation">.</span><span class="token function">getUserName</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
   memberEntity<span class="token punctuation">.</span><span class="token function">setUsername</span><span class="token punctuation">(</span>vo<span class="token punctuation">.</span><span class="token function">getUserName</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
   <span class="token comment">//密码进行MD5加密</span>
   <span class="token class-name">BCryptPasswordEncoder</span> bCryptPasswordEncoder <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">BCryptPasswordEncoder</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
   <span class="token class-name">String</span> encode <span class="token operator">=</span> bCryptPasswordEncoder<span class="token punctuation">.</span><span class="token function">encode</span><span class="token punctuation">(</span>vo<span class="token punctuation">.</span><span class="token function">getPassword</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
   memberEntity<span class="token punctuation">.</span><span class="token function">setPassword</span><span class="token punctuation">(</span>encode<span class="token punctuation">)</span><span class="token punctuation">;</span>
   memberEntity<span class="token punctuation">.</span><span class="token function">setMobile</span><span class="token punctuation">(</span>vo<span class="token punctuation">.</span><span class="token function">getPhone</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
   memberEntity<span class="token punctuation">.</span><span class="token function">setGender</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
   memberEntity<span class="token punctuation">.</span><span class="token function">setCreateTime</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">Date</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

   <span class="token comment">//保存数据</span>
   <span class="token keyword">this</span><span class="token punctuation">.</span>baseMapper<span class="token punctuation">.</span><span class="token function">insert</span><span class="token punctuation">(</span>memberEntity<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>public void checkPhoneUnique(String phone) throws PhoneException{
   Integer phoneCount = this.baseMapper.selectCount(new QueryWrapper&lt;MemberEntity&gt;().eq(&quot;mobile&quot;, phone));
   if(phoneCount &gt; 0){
      throw new PhoneException();
   }
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>public void checkUserNameUnique(String userName) throws UsernameException{
   Integer usernameCount = this.baseMapper.selectCount(new QueryWrapper&lt;MemberEntity&gt;().eq(&quot;username&quot;, userName));
   if(usernameCount &gt; 0){
      throw new UsernameException();
   }
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="_6、登录" tabindex="-1"><a class="header-anchor" href="#_6、登录" aria-hidden="true">#</a> 6、登录</h2><p>/package com.kong.yumall.authserver.feign;</p><h3 id="_6-1、远程-用户登录" tabindex="-1"><a class="header-anchor" href="#_6-1、远程-用户登录" aria-hidden="true">#</a> 6.1、远程-用户登录</h3><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token annotation punctuation">@PostMapping</span><span class="token punctuation">(</span>value <span class="token operator">=</span> <span class="token string">&quot;/login&quot;</span><span class="token punctuation">)</span>
<span class="token keyword">public</span> <span class="token class-name">String</span> <span class="token function">login</span><span class="token punctuation">(</span><span class="token class-name">UserLoginVo</span> vo<span class="token punctuation">,</span> <span class="token class-name">RedirectAttributes</span> attributes<span class="token punctuation">,</span> <span class="token class-name">HttpSession</span> session<span class="token punctuation">)</span><span class="token punctuation">{</span>
   <span class="token comment">//远程登录</span>
   <span class="token class-name">R</span> login <span class="token operator">=</span> memberFeignService<span class="token punctuation">.</span><span class="token function">login</span><span class="token punctuation">(</span>vo<span class="token punctuation">)</span><span class="token punctuation">;</span>
   <span class="token keyword">if</span><span class="token punctuation">(</span>login<span class="token punctuation">.</span><span class="token function">getCode</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">==</span> <span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
      <span class="token class-name">MemberResponseVo</span> data <span class="token operator">=</span> login<span class="token punctuation">.</span><span class="token function">getData</span><span class="token punctuation">(</span><span class="token string">&quot;data&quot;</span><span class="token punctuation">,</span> <span class="token keyword">new</span> <span class="token class-name">TypeReference</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">MemberResponseVo</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
      session<span class="token punctuation">.</span><span class="token function">setAttribute</span><span class="token punctuation">(</span><span class="token constant">LOGIN_USER</span><span class="token punctuation">,</span> data<span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token keyword">return</span> <span class="token string">&quot;redirect:http://yumall.com&quot;</span><span class="token punctuation">;</span>
   <span class="token punctuation">}</span><span class="token keyword">else</span><span class="token punctuation">{</span>
      <span class="token class-name">Map</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">,</span> <span class="token class-name">String</span><span class="token punctuation">&gt;</span></span> errors <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">HashMap</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
      errors<span class="token punctuation">.</span><span class="token function">put</span><span class="token punctuation">(</span><span class="token string">&quot;msg&quot;</span><span class="token punctuation">,</span> login<span class="token punctuation">.</span><span class="token function">getData</span><span class="token punctuation">(</span><span class="token string">&quot;msg&quot;</span><span class="token punctuation">,</span> <span class="token keyword">new</span> <span class="token class-name">TypeReference</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
      attributes<span class="token punctuation">.</span><span class="token function">addFlashAttribute</span><span class="token punctuation">(</span><span class="token string">&quot;errors&quot;</span><span class="token punctuation">,</span> errors<span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token keyword">return</span> <span class="token string">&quot;redirect:http://auth.yumall.com/login.html&quot;</span><span class="token punctuation">;</span>
   <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="调用会员服务" tabindex="-1"><a class="header-anchor" href="#调用会员服务" aria-hidden="true">#</a> 调用会员服务</h4><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token annotation punctuation">@FeignClient</span><span class="token punctuation">(</span><span class="token string">&quot;yumall-member&quot;</span><span class="token punctuation">)</span>
<span class="token keyword">public</span> <span class="token keyword">interface</span> <span class="token class-name">MemberFeignService</span> <span class="token punctuation">{</span>

<span class="token annotation punctuation">@PostMapping</span><span class="token punctuation">(</span>value <span class="token operator">=</span> <span class="token string">&quot;/member/member/login&quot;</span><span class="token punctuation">)</span>
<span class="token class-name">R</span> <span class="token function">login</span><span class="token punctuation">(</span><span class="token annotation punctuation">@RequestBody</span> <span class="token class-name">UserLoginVo</span> vo<span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="会员服务实现登录" tabindex="-1"><a class="header-anchor" href="#会员服务实现登录" aria-hidden="true">#</a> 会员服务实现登录</h4><p>/controller</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token annotation punctuation">@PostMapping</span><span class="token punctuation">(</span>value <span class="token operator">=</span> <span class="token string">&quot;/login&quot;</span><span class="token punctuation">)</span>
<span class="token keyword">public</span> <span class="token class-name">R</span> <span class="token function">login</span><span class="token punctuation">(</span><span class="token annotation punctuation">@RequestBody</span> <span class="token class-name">MemberUserLoginVo</span> vo<span class="token punctuation">)</span><span class="token punctuation">{</span>

   <span class="token class-name">MemberEntity</span> memberEntity <span class="token operator">=</span> memberService<span class="token punctuation">.</span><span class="token function">login</span><span class="token punctuation">(</span>vo<span class="token punctuation">)</span><span class="token punctuation">;</span>

   <span class="token keyword">if</span><span class="token punctuation">(</span>memberEntity <span class="token operator">!=</span> <span class="token keyword">null</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
      <span class="token keyword">return</span> <span class="token class-name">R</span><span class="token punctuation">.</span><span class="token function">ok</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">setData</span><span class="token punctuation">(</span>memberEntity<span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>MemberService</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token class-name">MemberEntity</span> <span class="token function">login</span><span class="token punctuation">(</span><span class="token class-name">MemberUserLoginVo</span> vo<span class="token punctuation">)</span><span class="token punctuation">{</span>
   <span class="token class-name">String</span> loginacct <span class="token operator">=</span> vo<span class="token punctuation">.</span><span class="token function">getLoginacct</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
   <span class="token class-name">String</span> password <span class="token operator">=</span> vo<span class="token punctuation">.</span><span class="token function">getPassword</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

   <span class="token comment">//1、去数据库查询 SELECT * FROM ums_member WHERE username = ? OR mobile = ?</span>
   <span class="token class-name">MemberEntity</span> memberEntity <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>baseMapper<span class="token punctuation">.</span><span class="token function">selectOne</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">QueryWrapper</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">MemberEntity</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token punctuation">)</span>
         <span class="token punctuation">.</span><span class="token function">eq</span><span class="token punctuation">(</span><span class="token string">&quot;username&quot;</span><span class="token punctuation">,</span> loginacct<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">or</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">eq</span><span class="token punctuation">(</span><span class="token string">&quot;mobile&quot;</span><span class="token punctuation">,</span> loginacct<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

   <span class="token keyword">if</span><span class="token punctuation">(</span>memberEntity <span class="token operator">==</span> <span class="token keyword">null</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
      <span class="token comment">//登录失败</span>
      <span class="token keyword">return</span> <span class="token keyword">null</span><span class="token punctuation">;</span>
   <span class="token punctuation">}</span><span class="token keyword">else</span><span class="token punctuation">{</span>
      <span class="token comment">//获取到数据库里的password</span>
      <span class="token class-name">String</span> password1 <span class="token operator">=</span> memberEntity<span class="token punctuation">.</span><span class="token function">getPassword</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token class-name">BCryptPasswordEncoder</span> passwordEncoder <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">BCryptPasswordEncoder</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token comment">//进行密码匹配</span>
      <span class="token keyword">boolean</span> matches <span class="token operator">=</span> passwordEncoder<span class="token punctuation">.</span><span class="token function">matches</span><span class="token punctuation">(</span>password<span class="token punctuation">,</span> password1<span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token keyword">if</span><span class="token punctuation">(</span>matches<span class="token punctuation">)</span><span class="token punctuation">{</span>
         <span class="token comment">//登录成功</span>
         <span class="token keyword">return</span> memberEntity<span class="token punctuation">;</span>
      <span class="token punctuation">}</span>
   <span class="token punctuation">}</span>
   <span class="token keyword">return</span> <span class="token keyword">null</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_6-2、远程-社交用户的登录-微信" tabindex="-1"><a class="header-anchor" href="#_6-2、远程-社交用户的登录-微信" aria-hidden="true">#</a> 6.2、远程-社交用户的登录（微信）</h3><h4 id="controller" tabindex="-1"><a class="header-anchor" href="#controller" aria-hidden="true">#</a> controller</h4><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token doc-comment comment">/**
 * 获取扫码人的信息，添加数据
 *
 * <span class="token keyword">@return</span>
 */</span>
<span class="token annotation punctuation">@GetMapping</span><span class="token punctuation">(</span>value <span class="token operator">=</span> <span class="token string">&quot;/callback&quot;</span><span class="token punctuation">)</span>
<span class="token keyword">public</span> <span class="token class-name">String</span> <span class="token function">callback</span><span class="token punctuation">(</span><span class="token class-name">String</span> code<span class="token punctuation">,</span> <span class="token class-name">String</span> state<span class="token punctuation">,</span> <span class="token class-name">HttpSession</span> session<span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">Exception</span><span class="token punctuation">{</span>
   <span class="token keyword">try</span><span class="token punctuation">{</span>
      <span class="token comment">//得到授权临时票据code</span>
      <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>code<span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>state<span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token comment">//从redis中将state获取出来，和当前传入的state作比较</span>
      <span class="token comment">//如果一致则放行，如果不一致则抛出异常：非法访问</span>

      <span class="token comment">//向认证服务器发送请求换取access_token</span>
      <span class="token comment">//2、拿着code请求 微信固定的地址，得到两个 access_token 和 openid</span>
      <span class="token class-name">String</span> baseAccessTokenUrl <span class="token operator">=</span> <span class="token string">&quot;https://api.weixin.qq.com/sns/oauth2/access_token&quot;</span><span class="token operator">+</span>
            <span class="token string">&quot;?appid=%s&quot;</span><span class="token operator">+</span>
            <span class="token string">&quot;&amp;secret=%s&quot;</span><span class="token operator">+</span>
            <span class="token string">&quot;&amp;code=%s&quot;</span><span class="token operator">+</span>
            <span class="token string">&quot;&amp;grant_type=authorization_code&quot;</span><span class="token punctuation">;</span>

      <span class="token comment">//拼接三个参数：id 秘钥 和 code 值</span>
      <span class="token class-name">String</span> accessTokenUrl <span class="token operator">=</span> <span class="token class-name">String</span><span class="token punctuation">.</span><span class="token function">format</span><span class="token punctuation">(</span>
            baseAccessTokenUrl<span class="token punctuation">,</span>
            <span class="token class-name">ConstantWxUtils</span><span class="token punctuation">.</span><span class="token constant">WX_OPEN_APP_ID</span><span class="token punctuation">,</span>
            <span class="token class-name">ConstantWxUtils</span><span class="token punctuation">.</span><span class="token constant">WX_OPEN_APP_SECRET</span><span class="token punctuation">,</span>
            code
      <span class="token punctuation">)</span><span class="token punctuation">;</span>

      <span class="token class-name">String</span> accessTokenInfo <span class="token operator">=</span> <span class="token class-name">HttpClientUtils</span><span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span>accessTokenUrl<span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token class-name">R</span> r <span class="token operator">=</span> memberFeignService<span class="token punctuation">.</span><span class="token function">weixinLogin</span><span class="token punctuation">(</span>accessTokenInfo<span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token keyword">if</span><span class="token punctuation">(</span>r<span class="token punctuation">.</span><span class="token function">getCode</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">==</span> <span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
         <span class="token class-name">MemberResponseVo</span> data <span class="token operator">=</span> r<span class="token punctuation">.</span><span class="token function">getData</span><span class="token punctuation">(</span><span class="token string">&quot;data&quot;</span><span class="token punctuation">,</span> <span class="token keyword">new</span> <span class="token class-name">TypeReference</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">MemberResponseVo</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
         log<span class="token punctuation">.</span><span class="token function">info</span><span class="token punctuation">(</span><span class="token string">&quot;登录成功：用户信息：{}&quot;</span><span class="token punctuation">,</span> data<span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

         <span class="token comment">//1、第一次使用session，命令浏览器保存卡号，JSESSIONID这个cookie</span>
         <span class="token comment">//以后浏览器访问哪个网站就会带上这个网站的cookie</span>
         <span class="token comment">//TODO 1、默认发的令牌。当前域（解决子域session共享问题）</span>
         <span class="token comment">//TODO 2、使用JSON的序列化方式来序列化对象到Redis中</span>
         session<span class="token punctuation">.</span><span class="token function">setAttribute</span><span class="token punctuation">(</span><span class="token constant">LOGIN_USER</span><span class="token punctuation">,</span> data<span class="token punctuation">)</span><span class="token punctuation">;</span>

         <span class="token comment">//2、登录成功跳回首页</span>
         <span class="token keyword">return</span> <span class="token string">&quot;redirect:http://yumall.com&quot;</span><span class="token punctuation">;</span>
      <span class="token punctuation">}</span><span class="token keyword">else</span><span class="token punctuation">{</span>

         <span class="token keyword">return</span> <span class="token string">&quot;redirect:http://auth.yumall.com/login.html&quot;</span><span class="token punctuation">;</span>
      <span class="token punctuation">}</span>

   <span class="token punctuation">}</span><span class="token keyword">catch</span><span class="token punctuation">(</span><span class="token class-name">Exception</span> e<span class="token punctuation">)</span><span class="token punctuation">{</span>
      e<span class="token punctuation">.</span><span class="token function">printStackTrace</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
   <span class="token punctuation">}</span>
   <span class="token keyword">return</span> <span class="token string">&quot;redirect:http://auth.yumall.com/login.html&quot;</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token doc-comment comment">/**
 * 生成微信扫描二维码
 *
 * <span class="token keyword">@return</span>
 * <span class="token keyword">@throws</span> <span class="token reference"><span class="token class-name">UnsupportedEncodingException</span></span>
 */</span>
<span class="token annotation punctuation">@GetMapping</span><span class="token punctuation">(</span>value <span class="token operator">=</span> <span class="token string">&quot;/login&quot;</span><span class="token punctuation">)</span>
<span class="token keyword">public</span> <span class="token class-name">String</span> <span class="token function">getWxCode</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">UnsupportedEncodingException</span><span class="token punctuation">{</span>

   <span class="token comment">//微信开发平台授权baseUrl   %s相当于？表示占位符</span>
   <span class="token class-name">String</span> baseUrl <span class="token operator">=</span> <span class="token string">&quot;https://open.weixin.qq.com/connect/qrconnect&quot;</span><span class="token operator">+</span>
         <span class="token string">&quot;?appid=%s&quot;</span><span class="token operator">+</span>
         <span class="token string">&quot;&amp;redirect_uri=%s&quot;</span><span class="token operator">+</span>
         <span class="token string">&quot;&amp;response_type=code&quot;</span><span class="token operator">+</span>
         <span class="token string">&quot;&amp;scope=snsapi_login&quot;</span><span class="token operator">+</span>
         <span class="token string">&quot;&amp;state=%s&quot;</span><span class="token operator">+</span>
         <span class="token string">&quot;#wechat_redirect&quot;</span><span class="token punctuation">;</span>

   <span class="token comment">//对redirect_url进行URLEncoder编码</span>
   <span class="token class-name">String</span> redirect_url <span class="token operator">=</span> <span class="token class-name">ConstantWxUtils</span><span class="token punctuation">.</span><span class="token constant">WX_OPEN_REDIRECT_URL</span><span class="token punctuation">;</span>
   redirect_url <span class="token operator">=</span> <span class="token class-name">URLEncoder</span><span class="token punctuation">.</span><span class="token function">encode</span><span class="token punctuation">(</span>redirect_url<span class="token punctuation">,</span> <span class="token string">&quot;UTF-8&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

   <span class="token comment">// 防止csrf攻击（跨站请求伪造攻击）</span>
   <span class="token comment">// 一般情况下会使用一个随机数</span>
   <span class="token comment">//String state = UUID.randomUUID().toString().replaceAll(&quot;-&quot;, &quot;&quot;);</span>

   <span class="token comment">//为了让大家能够使用我搭建的外网的微信回调跳转服务器，这里填写你在 ngrok 的前置域名</span>
   <span class="token class-name">String</span> state <span class="token operator">=</span> <span class="token string">&quot;hjl.mynatapp.cc&quot;</span><span class="token punctuation">;</span>
   <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;state = &quot;</span><span class="token operator">+</span>state<span class="token punctuation">)</span><span class="token punctuation">;</span>
   <span class="token comment">// 采用redis等进行缓存state 使用sessionId为key 30分钟后过期，可配置</span>
   <span class="token comment">//键： &quot;wechar-open-state-&quot; + httpServletRequest.getSession().getId()</span>
   <span class="token comment">//值： satte</span>
   <span class="token comment">//过期时间： 30分钟</span>
   <span class="token comment">//生成qrcodeUrl</span>

   <span class="token comment">//设置%s中的值</span>
   <span class="token class-name">String</span> url <span class="token operator">=</span> <span class="token class-name">String</span><span class="token punctuation">.</span><span class="token function">format</span><span class="token punctuation">(</span>
         baseUrl<span class="token punctuation">,</span>
         <span class="token class-name">ConstantWxUtils</span><span class="token punctuation">.</span><span class="token constant">WX_OPEN_APP_ID</span><span class="token punctuation">,</span>
         redirect_url<span class="token punctuation">,</span>
         <span class="token string">&quot;kong&quot;</span>
   <span class="token punctuation">)</span><span class="token punctuation">;</span>

   <span class="token comment">//重定向到请求微信地址</span>
   <span class="token keyword">return</span> <span class="token string">&quot;redirect:&quot;</span><span class="token operator">+</span>url<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="远程调用" tabindex="-1"><a class="header-anchor" href="#远程调用" aria-hidden="true">#</a> 远程调用</h4><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token annotation punctuation">@PostMapping</span><span class="token punctuation">(</span>value <span class="token operator">=</span> <span class="token string">&quot;/member/member/weixin/login&quot;</span><span class="token punctuation">)</span>
<span class="token class-name">R</span> <span class="token function">weixinLogin</span><span class="token punctuation">(</span><span class="token annotation punctuation">@RequestParam</span><span class="token punctuation">(</span><span class="token string">&quot;accessTokenInfo&quot;</span><span class="token punctuation">)</span> <span class="token class-name">String</span> accessTokenInfo<span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="会员服务实现微信登录" tabindex="-1"><a class="header-anchor" href="#会员服务实现微信登录" aria-hidden="true">#</a> 会员服务实现微信登录</h4><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token doc-comment comment">/**
 * 微信登录
 *
 * <span class="token keyword">@param</span> <span class="token parameter">accessTokenInfo</span>
 * <span class="token keyword">@return</span>
 */</span>
<span class="token annotation punctuation">@PostMapping</span><span class="token punctuation">(</span>value <span class="token operator">=</span> <span class="token string">&quot;/weixin/login&quot;</span><span class="token punctuation">)</span>
<span class="token keyword">public</span> <span class="token class-name">R</span> <span class="token function">weixinLogin</span><span class="token punctuation">(</span><span class="token annotation punctuation">@RequestParam</span><span class="token punctuation">(</span><span class="token string">&quot;accessTokenInfo&quot;</span><span class="token punctuation">)</span> <span class="token class-name">String</span> accessTokenInfo<span class="token punctuation">)</span><span class="token punctuation">{</span>

   <span class="token class-name">MemberEntity</span> memberEntity <span class="token operator">=</span> memberService<span class="token punctuation">.</span><span class="token function">login</span><span class="token punctuation">(</span>accessTokenInfo<span class="token punctuation">)</span><span class="token punctuation">;</span>
   <span class="token keyword">if</span><span class="token punctuation">(</span>memberEntity <span class="token operator">!=</span> <span class="token keyword">null</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
      <span class="token keyword">return</span> <span class="token class-name">R</span><span class="token punctuation">.</span><span class="token function">ok</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">setData</span><span class="token punctuation">(</span>memberEntity<span class="token punctuation">)</span><span class="token punctuation">;</span>
   <span class="token punctuation">}</span><span class="token keyword">else</span><span class="token punctuation">{</span>
      <span class="token keyword">return</span> <span class="token class-name">R</span><span class="token punctuation">.</span><span class="token function">error</span><span class="token punctuation">(</span><span class="token class-name">BizCodeEnum</span><span class="token punctuation">.</span><span class="token constant">LOGINACCT_PASSWORD_EXCEPTION</span><span class="token punctuation">.</span><span class="token function">getCode</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token class-name">BizCodeEnum</span><span class="token punctuation">.</span><span class="token constant">LOGINACCT_PASSWORD_EXCEPTION</span><span class="token punctuation">.</span><span class="token function">getMsg</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
   <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token doc-comment comment">/**
 * 微信登录
 *
 * <span class="token keyword">@param</span> <span class="token parameter">accessTokenInfo</span>
 * <span class="token keyword">@return</span>
 */</span>
<span class="token annotation punctuation">@Override</span> <span class="token keyword">public</span> <span class="token class-name">MemberEntity</span> <span class="token function">login</span><span class="token punctuation">(</span><span class="token class-name">String</span> accessTokenInfo<span class="token punctuation">)</span><span class="token punctuation">{</span>

   <span class="token comment">//从accessTokenInfo中获取出来两个值 access_token 和 oppenid</span>
   <span class="token comment">//把accessTokenInfo字符串转换成map集合，根据map里面中的key取出相对应的value</span>
   <span class="token class-name">Gson</span> gson <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Gson</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
   <span class="token class-name">HashMap</span> accessMap <span class="token operator">=</span> gson<span class="token punctuation">.</span><span class="token function">fromJson</span><span class="token punctuation">(</span>accessTokenInfo<span class="token punctuation">,</span> <span class="token class-name">HashMap</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
   <span class="token class-name">String</span> accessToken <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">)</span> accessMap<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token string">&quot;access_token&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
   <span class="token class-name">String</span> openid <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">)</span> accessMap<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token string">&quot;openid&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

   <span class="token comment">//3、拿到access_token 和 oppenid，再去请求微信提供固定的API，获取到扫码人的信息</span>
   <span class="token comment">//TODO 查询数据库当前用用户是否曾经使用过微信登录</span>

   <span class="token class-name">MemberEntity</span> memberEntity <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>baseMapper<span class="token punctuation">.</span><span class="token function">selectOne</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">QueryWrapper</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">MemberEntity</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">eq</span><span class="token punctuation">(</span><span class="token string">&quot;social_uid&quot;</span><span class="token punctuation">,</span> openid<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

   <span class="token keyword">if</span><span class="token punctuation">(</span>memberEntity <span class="token operator">==</span> <span class="token keyword">null</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
      <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;新用户注册&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token comment">//访问微信的资源服务器，获取用户信息</span>
      <span class="token class-name">String</span> baseUserInfoUrl <span class="token operator">=</span> <span class="token string">&quot;https://api.weixin.qq.com/sns/userinfo&quot;</span><span class="token operator">+</span>
            <span class="token string">&quot;?access_token=%s&quot;</span><span class="token operator">+</span>
            <span class="token string">&quot;&amp;openid=%s&quot;</span><span class="token punctuation">;</span>
      <span class="token class-name">String</span> userInfoUrl <span class="token operator">=</span> <span class="token class-name">String</span><span class="token punctuation">.</span><span class="token function">format</span><span class="token punctuation">(</span>baseUserInfoUrl<span class="token punctuation">,</span> accessToken<span class="token punctuation">,</span> openid<span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token comment">//发送请求</span>
      <span class="token class-name">String</span> resultUserInfo <span class="token operator">=</span> <span class="token keyword">null</span><span class="token punctuation">;</span>
      <span class="token keyword">try</span><span class="token punctuation">{</span>
         resultUserInfo <span class="token operator">=</span> <span class="token class-name">HttpClientUtils</span><span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span>userInfoUrl<span class="token punctuation">)</span><span class="token punctuation">;</span>
         <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;resultUserInfo==========&quot;</span><span class="token operator">+</span>resultUserInfo<span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token punctuation">}</span><span class="token keyword">catch</span><span class="token punctuation">(</span><span class="token class-name">Exception</span> e<span class="token punctuation">)</span><span class="token punctuation">{</span>
         e<span class="token punctuation">.</span><span class="token function">printStackTrace</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token punctuation">}</span>

      <span class="token comment">//解析json</span>
      <span class="token class-name">HashMap</span> userInfoMap <span class="token operator">=</span> gson<span class="token punctuation">.</span><span class="token function">fromJson</span><span class="token punctuation">(</span>resultUserInfo<span class="token punctuation">,</span> <span class="token class-name">HashMap</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token comment">//昵称</span>
      <span class="token class-name">String</span> nickName <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">)</span> userInfoMap<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token string">&quot;nickname&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token comment">//性别</span>
      <span class="token class-name">Double</span> sex <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token class-name">Double</span><span class="token punctuation">)</span> userInfoMap<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token string">&quot;sex&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token comment">//微信头像</span>
      <span class="token class-name">String</span> headimgurl <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">)</span> userInfoMap<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token string">&quot;headimgurl&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

      <span class="token comment">//把扫码人的信息添加到数据库中</span>
      memberEntity <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">MemberEntity</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
      memberEntity<span class="token punctuation">.</span><span class="token function">setNickname</span><span class="token punctuation">(</span>nickName<span class="token punctuation">)</span><span class="token punctuation">;</span>
      memberEntity<span class="token punctuation">.</span><span class="token function">setGender</span><span class="token punctuation">(</span><span class="token class-name">Integer</span><span class="token punctuation">.</span><span class="token function">valueOf</span><span class="token punctuation">(</span><span class="token class-name">Double</span><span class="token punctuation">.</span><span class="token function">valueOf</span><span class="token punctuation">(</span>sex<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">intValue</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
      memberEntity<span class="token punctuation">.</span><span class="token function">setHeader</span><span class="token punctuation">(</span>headimgurl<span class="token punctuation">)</span><span class="token punctuation">;</span>
      memberEntity<span class="token punctuation">.</span><span class="token function">setCreateTime</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">Date</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
      memberEntity<span class="token punctuation">.</span><span class="token function">setSocialUid</span><span class="token punctuation">(</span>openid<span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token comment">// register.setExpiresIn(socialUser.getExpires_in());</span>
      <span class="token keyword">this</span><span class="token punctuation">.</span>baseMapper<span class="token punctuation">.</span><span class="token function">insert</span><span class="token punctuation">(</span>memberEntity<span class="token punctuation">)</span><span class="token punctuation">;</span>
   <span class="token punctuation">}</span>
   <span class="token keyword">return</span> memberEntity<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_6-3、远程-社交用户的登录-微博" tabindex="-1"><a class="header-anchor" href="#_6-3、远程-社交用户的登录-微博" aria-hidden="true">#</a> 6.3、远程-社交用户的登录（微博）</h3><h4 id="准备" tabindex="-1"><a class="header-anchor" href="#准备" aria-hidden="true">#</a> 准备</h4>`,37),Z={href:"https://open.weibo.com/connect",target:"_blank",rel:"noopener noreferrer"},Y=p(`<h4 id="流程-跳转微博登录-成功获取code-拿code换取access-token-code只能用一次-使用获得的access-token调用api" tabindex="-1"><a class="header-anchor" href="#流程-跳转微博登录-成功获取code-拿code换取access-token-code只能用一次-使用获得的access-token调用api" aria-hidden="true">#</a> 流程：跳转微博登录-&gt;成功获取code-&gt;拿code换取Access token(code只能用一次) -&gt;使用获得的Access Token调用API</h4><p>web</p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>&lt;a href=&quot;https://api.weibo.com/oauth2/authorize?client_id=2077705774&amp;response_type=code&amp;redirect_uri=http://auth.yumall.com/oauth2.0/weibo/success&quot;&gt;
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h4 id="controller-1" tabindex="-1"><a class="header-anchor" href="#controller-1" aria-hidden="true">#</a> controller</h4><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token annotation punctuation">@GetMapping</span><span class="token punctuation">(</span>value <span class="token operator">=</span> <span class="token string">&quot;/oauth2.0/weibo/success&quot;</span><span class="token punctuation">)</span>
<span class="token keyword">public</span> <span class="token class-name">String</span> <span class="token function">weibo</span><span class="token punctuation">(</span><span class="token annotation punctuation">@RequestParam</span><span class="token punctuation">(</span><span class="token string">&quot;code&quot;</span><span class="token punctuation">)</span> <span class="token class-name">String</span> code<span class="token punctuation">,</span> <span class="token class-name">HttpSession</span> session<span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">Exception</span><span class="token punctuation">{</span>

   <span class="token class-name">Map</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">,</span> <span class="token class-name">String</span><span class="token punctuation">&gt;</span></span> map <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">HashMap</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token constant">SD</span>
   map<span class="token punctuation">.</span><span class="token function">put</span><span class="token punctuation">(</span><span class="token string">&quot;client_id&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;2077705774&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
   map<span class="token punctuation">.</span><span class="token function">put</span><span class="token punctuation">(</span><span class="token string">&quot;client_secret&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;40af02bd1c7e435ba6a6e9cd3bf799fd&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
   map<span class="token punctuation">.</span><span class="token function">put</span><span class="token punctuation">(</span><span class="token string">&quot;grant_type&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;authorization_code&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
   map<span class="token punctuation">.</span><span class="token function">put</span><span class="token punctuation">(</span><span class="token string">&quot;redirect_uri&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;http://auth.yumall.com/oauth2.0/weibo/success&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
   map<span class="token punctuation">.</span><span class="token function">put</span><span class="token punctuation">(</span><span class="token string">&quot;code&quot;</span><span class="token punctuation">,</span> code<span class="token punctuation">)</span><span class="token punctuation">;</span>

   <span class="token comment">//1、根据用户授权返回的code换取access_token</span>
   <span class="token class-name">HttpResponse</span> response <span class="token operator">=</span> <span class="token class-name">HttpUtils</span><span class="token punctuation">.</span><span class="token function">doPost</span><span class="token punctuation">(</span><span class="token string">&quot;https://api.weibo.com&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;/oauth2/access_token&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;post&quot;</span><span class="token punctuation">,</span> <span class="token keyword">new</span> <span class="token class-name">HashMap</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> map<span class="token punctuation">,</span> <span class="token keyword">new</span> <span class="token class-name">HashMap</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

   <span class="token comment">//2、处理</span>
   <span class="token keyword">if</span><span class="token punctuation">(</span>response<span class="token punctuation">.</span><span class="token function">getStatusLine</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getStatusCode</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">==</span> <span class="token number">200</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
      <span class="token comment">//获取到了access_token,转为通用社交登录对象</span>
      <span class="token class-name">String</span> json <span class="token operator">=</span> <span class="token class-name">EntityUtils</span><span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span>response<span class="token punctuation">.</span><span class="token function">getEntity</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token class-name">SocialUser</span> socialUser <span class="token operator">=</span> <span class="token constant">JSON</span><span class="token punctuation">.</span><span class="token function">parseObject</span><span class="token punctuation">(</span>json<span class="token punctuation">,</span> <span class="token class-name">SocialUser</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

      <span class="token comment">//知道了哪个社交用户</span>
      <span class="token comment">//1）、当前用户如果是第一次进网站，自动注册进来（为当前社交用户生成一个会员信息，以后这个社交账号就对应指定的会员）</span>
      <span class="token comment">//登录或者注册这个社交用户</span>
      <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>socialUser<span class="token punctuation">.</span><span class="token function">getAccess_token</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token comment">//调用远程服务</span>
      <span class="token class-name">R</span> oauthLogin <span class="token operator">=</span> memberFeignService<span class="token punctuation">.</span><span class="token function">oauthLogin</span><span class="token punctuation">(</span>socialUser<span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token keyword">if</span><span class="token punctuation">(</span>oauthLogin<span class="token punctuation">.</span><span class="token function">getCode</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">==</span> <span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
         <span class="token class-name">MemberResponseVo</span> data <span class="token operator">=</span> oauthLogin<span class="token punctuation">.</span><span class="token function">getData</span><span class="token punctuation">(</span><span class="token string">&quot;data&quot;</span><span class="token punctuation">,</span> <span class="token keyword">new</span> <span class="token class-name">TypeReference</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">MemberResponseVo</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
         log<span class="token punctuation">.</span><span class="token function">info</span><span class="token punctuation">(</span><span class="token string">&quot;登录成功：用户信息：{}&quot;</span><span class="token punctuation">,</span> data<span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

         <span class="token comment">//1、第一次使用session，命令浏览器保存卡号，JSESSIONID这个cookie</span>
         <span class="token comment">//以后浏览器访问哪个网站就会带上这个网站的cookie</span>
         <span class="token comment">//TODO 1、默认发的令牌。当前域（解决子域session共享问题）</span>
         <span class="token comment">//TODO 2、使用JSON的序列化方式来序列化对象到Redis中</span>
         session<span class="token punctuation">.</span><span class="token function">setAttribute</span><span class="token punctuation">(</span><span class="token constant">LOGIN_USER</span><span class="token punctuation">,</span> data<span class="token punctuation">)</span><span class="token punctuation">;</span>

         <span class="token comment">//2、登录成功跳回首页</span>
         <span class="token keyword">return</span> <span class="token string">&quot;redirect:http://yumall.com&quot;</span><span class="token punctuation">;</span>
      <span class="token punctuation">}</span><span class="token keyword">else</span><span class="token punctuation">{</span>

         <span class="token keyword">return</span> <span class="token string">&quot;redirect:http://auth.yumall.com/login.html&quot;</span><span class="token punctuation">;</span>
      <span class="token punctuation">}</span>

   <span class="token punctuation">}</span><span class="token keyword">else</span><span class="token punctuation">{</span>
      <span class="token keyword">return</span> <span class="token string">&quot;redirect:http://auth.yumall.com/login.html&quot;</span><span class="token punctuation">;</span>
   <span class="token punctuation">}</span>

<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="远程调用-1" tabindex="-1"><a class="header-anchor" href="#远程调用-1" aria-hidden="true">#</a> 远程调用</h4><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token annotation punctuation">@PostMapping</span><span class="token punctuation">(</span>value <span class="token operator">=</span> <span class="token string">&quot;/member/member/oauth2/login&quot;</span><span class="token punctuation">)</span>
<span class="token class-name">R</span> <span class="token function">oauthLogin</span><span class="token punctuation">(</span><span class="token annotation punctuation">@RequestBody</span> <span class="token class-name">SocialUser</span> socialUser<span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">Exception</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="会员服务实现微博登录" tabindex="-1"><a class="header-anchor" href="#会员服务实现微博登录" aria-hidden="true">#</a> 会员服务实现微博登录</h4><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token doc-comment comment">/**
 * 微博认证
 *
 * <span class="token keyword">@param</span> <span class="token parameter">socialUser</span>
 * <span class="token keyword">@return</span>
 * <span class="token keyword">@throws</span> <span class="token reference"><span class="token class-name">Exception</span></span>
 */</span>
<span class="token annotation punctuation">@PostMapping</span><span class="token punctuation">(</span>value <span class="token operator">=</span> <span class="token string">&quot;/oauth2/login&quot;</span><span class="token punctuation">)</span>
<span class="token keyword">public</span> <span class="token class-name">R</span> <span class="token function">oauthLogin</span><span class="token punctuation">(</span><span class="token annotation punctuation">@RequestBody</span> <span class="token class-name">SocialUser</span> socialUser<span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">Exception</span><span class="token punctuation">{</span>
   <span class="token class-name">MemberEntity</span> memberEntity <span class="token operator">=</span> memberService<span class="token punctuation">.</span><span class="token function">login</span><span class="token punctuation">(</span>socialUser<span class="token punctuation">)</span><span class="token punctuation">;</span>
   <span class="token keyword">if</span><span class="token punctuation">(</span>memberEntity <span class="token operator">!=</span> <span class="token keyword">null</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
      <span class="token keyword">return</span> <span class="token class-name">R</span><span class="token punctuation">.</span><span class="token function">ok</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">setData</span><span class="token punctuation">(</span>memberEntity<span class="token punctuation">)</span><span class="token punctuation">;</span>
   <span class="token punctuation">}</span><span class="token keyword">else</span><span class="token punctuation">{</span>
      <span class="token keyword">return</span> <span class="token class-name">R</span><span class="token punctuation">.</span><span class="token function">error</span><span class="token punctuation">(</span><span class="token class-name">BizCodeEnum</span><span class="token punctuation">.</span><span class="token constant">LOGINACCT_PASSWORD_EXCEPTION</span><span class="token punctuation">.</span><span class="token function">getCode</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token class-name">BizCodeEnum</span><span class="token punctuation">.</span><span class="token constant">LOGINACCT_PASSWORD_EXCEPTION</span><span class="token punctuation">.</span><span class="token function">getMsg</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
   <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>这个用户已经注册过,更新用户的访问令牌的时间和access_token。</p><p>没有查到当前社交用户对应的记录我们就需要注册一个,查询当前社交用户的社交账号信息（昵称、性别等）。</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token doc-comment comment">/**
 * 社交用户的登录 微博
 *
 * <span class="token keyword">@param</span> <span class="token parameter">socialUser</span>
 * <span class="token keyword">@return</span>
 */</span>
<span class="token annotation punctuation">@Override</span> <span class="token keyword">public</span> <span class="token class-name">MemberEntity</span> <span class="token function">login</span><span class="token punctuation">(</span><span class="token class-name">SocialUser</span> socialUser<span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">Exception</span><span class="token punctuation">{</span>
   <span class="token comment">//具有登录和注册逻辑</span>
   <span class="token class-name">String</span> uid <span class="token operator">=</span> socialUser<span class="token punctuation">.</span><span class="token function">getUid</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

   <span class="token comment">//1、判断当前社交用户是否已经登录过系统</span>
   <span class="token class-name">MemberEntity</span> memberEntity <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>baseMapper<span class="token punctuation">.</span><span class="token function">selectOne</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">QueryWrapper</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">MemberEntity</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">eq</span><span class="token punctuation">(</span><span class="token string">&quot;social_uid&quot;</span><span class="token punctuation">,</span> uid<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

   <span class="token keyword">if</span><span class="token punctuation">(</span>memberEntity <span class="token operator">!=</span> <span class="token keyword">null</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
      <span class="token comment">//这个用户已经注册过</span>
      <span class="token comment">//更新用户的访问令牌的时间和access_token</span>
      <span class="token class-name">MemberEntity</span> update <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">MemberEntity</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
      update<span class="token punctuation">.</span><span class="token function">setId</span><span class="token punctuation">(</span>memberEntity<span class="token punctuation">.</span><span class="token function">getId</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
      update<span class="token punctuation">.</span><span class="token function">setAccessToken</span><span class="token punctuation">(</span>socialUser<span class="token punctuation">.</span><span class="token function">getAccess_token</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
      update<span class="token punctuation">.</span><span class="token function">setExpiresIn</span><span class="token punctuation">(</span>socialUser<span class="token punctuation">.</span><span class="token function">getExpires_in</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token keyword">this</span><span class="token punctuation">.</span>baseMapper<span class="token punctuation">.</span><span class="token function">updateById</span><span class="token punctuation">(</span>update<span class="token punctuation">)</span><span class="token punctuation">;</span>

      memberEntity<span class="token punctuation">.</span><span class="token function">setAccessToken</span><span class="token punctuation">(</span>socialUser<span class="token punctuation">.</span><span class="token function">getAccess_token</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
      memberEntity<span class="token punctuation">.</span><span class="token function">setExpiresIn</span><span class="token punctuation">(</span>socialUser<span class="token punctuation">.</span><span class="token function">getExpires_in</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token keyword">return</span> memberEntity<span class="token punctuation">;</span>
   <span class="token punctuation">}</span><span class="token keyword">else</span><span class="token punctuation">{</span>
      <span class="token comment">//2、没有查到当前社交用户对应的记录我们就需要注册一个</span>
      <span class="token class-name">MemberEntity</span> register <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">MemberEntity</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token comment">//3、查询当前社交用户的社交账号信息（昵称、性别等）</span>
      <span class="token class-name">Map</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">,</span> <span class="token class-name">String</span><span class="token punctuation">&gt;</span></span> query <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">HashMap</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
      query<span class="token punctuation">.</span><span class="token function">put</span><span class="token punctuation">(</span><span class="token string">&quot;access_token&quot;</span><span class="token punctuation">,</span> socialUser<span class="token punctuation">.</span><span class="token function">getAccess_token</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
      query<span class="token punctuation">.</span><span class="token function">put</span><span class="token punctuation">(</span><span class="token string">&quot;uid&quot;</span><span class="token punctuation">,</span> socialUser<span class="token punctuation">.</span><span class="token function">getUid</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token class-name">HttpResponse</span> response <span class="token operator">=</span> <span class="token class-name">HttpUtils</span><span class="token punctuation">.</span><span class="token function">doGet</span><span class="token punctuation">(</span><span class="token string">&quot;https://api.weibo.com&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;/2/users/show.json&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;get&quot;</span><span class="token punctuation">,</span> <span class="token keyword">new</span> <span class="token class-name">HashMap</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">,</span> <span class="token class-name">String</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> query<span class="token punctuation">)</span><span class="token punctuation">;</span>

      <span class="token keyword">if</span><span class="token punctuation">(</span>response<span class="token punctuation">.</span><span class="token function">getStatusLine</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getStatusCode</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">==</span> <span class="token number">200</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
         <span class="token comment">//查询成功</span>
         <span class="token class-name">String</span> json <span class="token operator">=</span> <span class="token class-name">EntityUtils</span><span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span>response<span class="token punctuation">.</span><span class="token function">getEntity</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
         <span class="token class-name">JSONObject</span> jsonObject <span class="token operator">=</span> <span class="token constant">JSON</span><span class="token punctuation">.</span><span class="token function">parseObject</span><span class="token punctuation">(</span>json<span class="token punctuation">)</span><span class="token punctuation">;</span>
         <span class="token class-name">String</span> name <span class="token operator">=</span> jsonObject<span class="token punctuation">.</span><span class="token function">getString</span><span class="token punctuation">(</span><span class="token string">&quot;name&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
         <span class="token class-name">String</span> gender <span class="token operator">=</span> jsonObject<span class="token punctuation">.</span><span class="token function">getString</span><span class="token punctuation">(</span><span class="token string">&quot;gender&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
         <span class="token class-name">String</span> profileImageUrl <span class="token operator">=</span> jsonObject<span class="token punctuation">.</span><span class="token function">getString</span><span class="token punctuation">(</span><span class="token string">&quot;profile_image_url&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

         register<span class="token punctuation">.</span><span class="token function">setNickname</span><span class="token punctuation">(</span>name<span class="token punctuation">)</span><span class="token punctuation">;</span>
         register<span class="token punctuation">.</span><span class="token function">setGender</span><span class="token punctuation">(</span><span class="token string">&quot;m&quot;</span><span class="token punctuation">.</span><span class="token function">equals</span><span class="token punctuation">(</span>gender<span class="token punctuation">)</span> <span class="token operator">?</span> <span class="token number">1</span> <span class="token operator">:</span> <span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
         register<span class="token punctuation">.</span><span class="token function">setHeader</span><span class="token punctuation">(</span>profileImageUrl<span class="token punctuation">)</span><span class="token punctuation">;</span>
         register<span class="token punctuation">.</span><span class="token function">setCreateTime</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">Date</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
         register<span class="token punctuation">.</span><span class="token function">setSocialUid</span><span class="token punctuation">(</span>socialUser<span class="token punctuation">.</span><span class="token function">getUid</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
         register<span class="token punctuation">.</span><span class="token function">setAccessToken</span><span class="token punctuation">(</span>socialUser<span class="token punctuation">.</span><span class="token function">getAccess_token</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
         register<span class="token punctuation">.</span><span class="token function">setExpiresIn</span><span class="token punctuation">(</span>socialUser<span class="token punctuation">.</span><span class="token function">getExpires_in</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

         <span class="token comment">//把用户信息插入到数据库中</span>
         <span class="token keyword">this</span><span class="token punctuation">.</span>baseMapper<span class="token punctuation">.</span><span class="token function">insert</span><span class="token punctuation">(</span>register<span class="token punctuation">)</span><span class="token punctuation">;</span>

      <span class="token punctuation">}</span>
      <span class="token keyword">return</span> register<span class="token punctuation">;</span>
   <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="_7、分布式-session" tabindex="-1"><a class="header-anchor" href="#_7、分布式-session" aria-hidden="true">#</a> 7、分布式 session</h2><h2 id="_8、单点登录-多系统" tabindex="-1"><a class="header-anchor" href="#_8、单点登录-多系统" aria-hidden="true">#</a> 8、单点登录：多系统</h2><h3 id="_8-1、分析" tabindex="-1"><a class="header-anchor" href="#_8-1、分析" aria-hidden="true">#</a> 8.1、分析</h3><p><img src="`+y+`" alt="image-20210926173348217"></p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>127.0.0.1 ssoserver.com
127.0.0.1 client1.com
127.0.0.1 client2.com

http://ssoserver:45001/employees 

	- &gt; 未登录,跳转到登录服务：&quot;redirect:http://ssoserver.com:45000/login.html?redirect_url=http://client1.com:45001/employees&quot;;
	
	- &gt; 登录成功后跳转到：http://client1.com:45001/employees?token=c2360a53-8a42-4896-b642-659a817c7903
	http://ssoserver.com:45000/login.html?redirect_url=http://client2.com:45002/boos
	
	- &gt; 查看登录信息：http://ssoserver.com:45000/userinfo?token=c2360a53-8a42-4896-b642-659a817c7903

登录client1，访问client2（不用登录了），

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h1>十五、购物车 cart</h1><h2 id="_1、购物车项目-cart-准备config-web、nginx、nacos、redis" tabindex="-1"><a class="header-anchor" href="#_1、购物车项目-cart-准备config-web、nginx、nacos、redis" aria-hidden="true">#</a> 1、购物车项目 cart 准备config，web、nginx、nacos、redis</h2><p>不需要SQL数据源、开启Feign、nacos、redis-session、Thread</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code>config<span class="token operator">:</span>
    <span class="token class-name">CartSentinelConfig</span>
    <span class="token class-name">MyThreadConfig</span>
    <span class="token class-name">SessionConfig</span>
    <span class="token class-name">ThreadPoolConfigProperties</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="_2、分析、vo模型" tabindex="-1"><a class="header-anchor" href="#_2、分析、vo模型" aria-hidden="true">#</a> 2、分析、Vo模型</h2><p>CartItemVo CartVo SkuInfoVo</p><h2 id="_3、去购物车页面" tabindex="-1"><a class="header-anchor" href="#_3、去购物车页面" aria-hidden="true">#</a> 3、去购物车页面</h2><h3 id="web拦截器-在执行目标方法之前-判断用户的登录状态-并封装传递给controller目标请求-业务执行之后-分配临时用户来浏览器保存" tabindex="-1"><a class="header-anchor" href="#web拦截器-在执行目标方法之前-判断用户的登录状态-并封装传递给controller目标请求-业务执行之后-分配临时用户来浏览器保存" aria-hidden="true">#</a> web拦截器,在执行目标方法之前，判断用户的登录状态.并封装传递给controller目标请求，业务执行之后，分配临时用户来浏览器保存</h3><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token annotation punctuation">@Configuration</span>
<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">WebConfig</span> <span class="token keyword">implements</span> <span class="token class-name">WebMvcConfigurer</span> <span class="token punctuation">{</span>
    <span class="token annotation punctuation">@Override</span>
    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">addInterceptors</span><span class="token punctuation">(</span><span class="token class-name">InterceptorRegistry</span> registry<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token comment">//注册拦截器</span>
        registry<span class="token punctuation">.</span><span class="token function">addInterceptor</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">CartInterceptor</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
                <span class="token punctuation">.</span><span class="token function">addPathPatterns</span><span class="token punctuation">(</span><span class="token string">&quot;/**&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token doc-comment comment">/**
 * 在执行目标方法之前，判断用户的登录状态.并封装传递给controller目标请求
 * <span class="token keyword">@author</span> kong
 */</span>
<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">CartInterceptor</span> <span class="token keyword">implements</span> <span class="token class-name">HandlerInterceptor</span><span class="token punctuation">{</span>
    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token class-name">ThreadLocal</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">UserInfoTo</span><span class="token punctuation">&gt;</span></span> toThreadLocal <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ThreadLocal</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token doc-comment comment">/***
     * 目标方法执行之前
     */</span>
    <span class="token annotation punctuation">@Override</span>
    <span class="token keyword">public</span> <span class="token keyword">boolean</span> <span class="token function">preHandle</span><span class="token punctuation">(</span><span class="token class-name">HttpServletRequest</span> request<span class="token punctuation">,</span> <span class="token class-name">HttpServletResponse</span> response<span class="token punctuation">,</span> <span class="token class-name">Object</span> handler<span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">Exception</span> <span class="token punctuation">{</span>
        <span class="token class-name">UserInfoTo</span> userInfoTo <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">UserInfoTo</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">HttpSession</span> session <span class="token operator">=</span> request<span class="token punctuation">.</span><span class="token function">getSession</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token comment">//获得当前登录用户的信息</span>
        <span class="token class-name">MemberResponseVo</span> memberResponseVo <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token class-name">MemberResponseVo</span><span class="token punctuation">)</span> session<span class="token punctuation">.</span><span class="token function">getAttribute</span><span class="token punctuation">(</span><span class="token constant">LOGIN_USER</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>memberResponseVo <span class="token operator">!=</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token comment">//用户登录了</span>
            userInfoTo<span class="token punctuation">.</span><span class="token function">setUserId</span><span class="token punctuation">(</span>memberResponseVo<span class="token punctuation">.</span><span class="token function">getId</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
        <span class="token class-name">Cookie</span><span class="token punctuation">[</span><span class="token punctuation">]</span> cookies <span class="token operator">=</span> request<span class="token punctuation">.</span><span class="token function">getCookies</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>cookies <span class="token operator">!=</span> <span class="token keyword">null</span> <span class="token operator">&amp;&amp;</span> cookies<span class="token punctuation">.</span>length <span class="token operator">&gt;</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token class-name">Cookie</span> cookie <span class="token operator">:</span> cookies<span class="token punctuation">)</span> <span class="token punctuation">{</span>
                <span class="token comment">//user-key</span>
                <span class="token class-name">String</span> name <span class="token operator">=</span> cookie<span class="token punctuation">.</span><span class="token function">getName</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token keyword">if</span> <span class="token punctuation">(</span>name<span class="token punctuation">.</span><span class="token function">equals</span><span class="token punctuation">(</span><span class="token constant">TEMP_USER_COOKIE_NAME</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                    userInfoTo<span class="token punctuation">.</span><span class="token function">setUserKey</span><span class="token punctuation">(</span>cookie<span class="token punctuation">.</span><span class="token function">getValue</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                    <span class="token comment">//标记为已是临时用户</span>
                    userInfoTo<span class="token punctuation">.</span><span class="token function">setTempUser</span><span class="token punctuation">(</span><span class="token boolean">true</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token punctuation">}</span>
            <span class="token punctuation">}</span>
        <span class="token punctuation">}</span>
        <span class="token comment">//如果没有临时用户一定分配一个临时用户</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token class-name">StringUtils</span><span class="token punctuation">.</span><span class="token function">isEmpty</span><span class="token punctuation">(</span>userInfoTo<span class="token punctuation">.</span><span class="token function">getUserKey</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token class-name">String</span> uuid <span class="token operator">=</span> <span class="token constant">UUID</span><span class="token punctuation">.</span><span class="token function">randomUUID</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            userInfoTo<span class="token punctuation">.</span><span class="token function">setUserKey</span><span class="token punctuation">(</span>uuid<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
        <span class="token comment">//目标方法执行之前</span>
        toThreadLocal<span class="token punctuation">.</span><span class="token function">set</span><span class="token punctuation">(</span>userInfoTo<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">return</span> <span class="token boolean">true</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token doc-comment comment">/**
     * 业务执行之后，分配临时用户来浏览器保存
     */</span>
    <span class="token annotation punctuation">@Override</span>
    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">postHandle</span><span class="token punctuation">(</span><span class="token class-name">HttpServletRequest</span> request<span class="token punctuation">,</span> <span class="token class-name">HttpServletResponse</span> response<span class="token punctuation">,</span> <span class="token class-name">Object</span> handler<span class="token punctuation">,</span> <span class="token class-name">ModelAndView</span> modelAndView<span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">Exception</span> <span class="token punctuation">{</span>
        <span class="token comment">//获取当前用户的值</span>
        <span class="token class-name">UserInfoTo</span> userInfoTo <span class="token operator">=</span> toThreadLocal<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token comment">//如果没有临时用户一定保存一个临时用户</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>userInfoTo<span class="token punctuation">.</span><span class="token function">getTempUser</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token comment">//创建一个cookie</span>
            <span class="token class-name">Cookie</span> cookie <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Cookie</span><span class="token punctuation">(</span><span class="token constant">TEMP_USER_COOKIE_NAME</span><span class="token punctuation">,</span> userInfoTo<span class="token punctuation">.</span><span class="token function">getUserKey</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token comment">//扩大作用域</span>
            cookie<span class="token punctuation">.</span><span class="token function">setDomain</span><span class="token punctuation">(</span><span class="token string">&quot;yumall.com&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token comment">//设置过期时间</span>
            cookie<span class="token punctuation">.</span><span class="token function">setMaxAge</span><span class="token punctuation">(</span><span class="token constant">TEMP_USER_COOKIE_TIMEOUT</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            response<span class="token punctuation">.</span><span class="token function">addCookie</span><span class="token punctuation">(</span>cookie<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
   <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">afterCompletion</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_3-1、首页" tabindex="-1"><a class="header-anchor" href="#_3-1、首页" aria-hidden="true">#</a> 3.1、首页</h3><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code>	<span class="token doc-comment comment">/**
	 * 去购物车页面的请求
	 * 浏览器有一个cookie:user-key 标识用户的身份，一个月过期
	 * 如果第一次使用jd的购物车功能，都会给一个临时的用户身份:
	 * 浏览器以后保存，每次访问都会带上这个cookie；
	 * <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span><span class="token punctuation">&gt;</span></span>
	 * 登录：session有
	 * 没登录：按照cookie里面带来user-key来做
	 * 第一次，如果没有临时用户，自动创建一个临时用户
	 *
	 * <span class="token keyword">@return</span>
	 */</span>
<span class="token annotation punctuation">@GetMapping</span><span class="token punctuation">(</span>value <span class="token operator">=</span> <span class="token string">&quot;/cart.html&quot;</span><span class="token punctuation">)</span>
<span class="token keyword">public</span> <span class="token class-name">String</span> <span class="token function">cartListPage</span><span class="token punctuation">(</span><span class="token class-name">Model</span> model<span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">ExecutionException</span><span class="token punctuation">,</span> <span class="token class-name">InterruptedException</span> <span class="token punctuation">{</span>
    <span class="token class-name">CartVo</span> cartVo <span class="token operator">=</span> cartService<span class="token punctuation">.</span><span class="token function">getCart</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//获取用户登录或者未登录购物车里所有的数据</span>
    model<span class="token punctuation">.</span><span class="token function">addAttribute</span><span class="token punctuation">(</span><span class="token string">&quot;cart&quot;</span><span class="token punctuation">,</span>cartVo<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">return</span> <span class="token string">&quot;cartList&quot;</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_3-2-获取购物车里面的信息-获取用户登录或者未登录购物车里所有的数据" tabindex="-1"><a class="header-anchor" href="#_3-2-获取购物车里面的信息-获取用户登录或者未登录购物车里所有的数据" aria-hidden="true">#</a> 3.2 获取购物车里面的信息-获取用户登录或者未登录购物车里所有的数据</h3><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token class-name">CartVo</span> <span class="token function">getCart</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">ExecutionException</span><span class="token punctuation">,</span> <span class="token class-name">InterruptedException</span> <span class="token punctuation">{</span>
    <span class="token class-name">CartVo</span> cartVo <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">CartVo</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token class-name">UserInfoTo</span> userInfoTo <span class="token operator">=</span> <span class="token class-name">CartInterceptor</span><span class="token punctuation">.</span>toThreadLocal<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>userInfoTo<span class="token punctuation">.</span><span class="token function">getUserId</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">!=</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token comment">//1、登录</span>
        <span class="token class-name">String</span> cartKey <span class="token operator">=</span> <span class="token constant">CART_PREFIX</span> <span class="token operator">+</span> userInfoTo<span class="token punctuation">.</span><span class="token function">getUserId</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token comment">//临时购物车的键</span>
        <span class="token class-name">String</span> temptCartKey <span class="token operator">=</span> <span class="token constant">CART_PREFIX</span> <span class="token operator">+</span> userInfoTo<span class="token punctuation">.</span><span class="token function">getUserKey</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token comment">//2、如果临时购物车的数据还未进行合并</span>
        <span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">CartItemVo</span><span class="token punctuation">&gt;</span></span> tempCartItems <span class="token operator">=</span> <span class="token function">getCartItems</span><span class="token punctuation">(</span>temptCartKey<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>tempCartItems <span class="token operator">!=</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token comment">//临时购物车有数据需要进行合并操作</span>
            <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token class-name">CartItemVo</span> item <span class="token operator">:</span> tempCartItems<span class="token punctuation">)</span> <span class="token punctuation">{</span>
                <span class="token function">addToCart</span><span class="token punctuation">(</span>item<span class="token punctuation">.</span><span class="token function">getSkuId</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>item<span class="token punctuation">.</span><span class="token function">getCount</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
            <span class="token comment">//清除临时购物车的数据</span>
            <span class="token function">clearCartInfo</span><span class="token punctuation">(</span>temptCartKey<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
        <span class="token comment">//3、获取登录后的购物车数据【包含合并过来的临时购物车的数据和登录后购物车的数据】</span>
        <span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">CartItemVo</span><span class="token punctuation">&gt;</span></span> cartItems <span class="token operator">=</span> <span class="token function">getCartItems</span><span class="token punctuation">(</span>cartKey<span class="token punctuation">)</span><span class="token punctuation">;</span>
        cartVo<span class="token punctuation">.</span><span class="token function">setItems</span><span class="token punctuation">(</span>cartItems<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
        <span class="token comment">//没登录</span>
        <span class="token class-name">String</span> cartKey <span class="token operator">=</span> <span class="token constant">CART_PREFIX</span> <span class="token operator">+</span> userInfoTo<span class="token punctuation">.</span><span class="token function">getUserKey</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token comment">//获取临时购物车里面的所有购物项</span>
        <span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">CartItemVo</span><span class="token punctuation">&gt;</span></span> cartItems <span class="token operator">=</span> <span class="token function">getCartItems</span><span class="token punctuation">(</span>cartKey<span class="token punctuation">)</span><span class="token punctuation">;</span>
        cartVo<span class="token punctuation">.</span><span class="token function">setItems</span><span class="token punctuation">(</span>cartItems<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">return</span> cartVo<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_3-3、获取购物车里面的数据getcartitems、删除" tabindex="-1"><a class="header-anchor" href="#_3-3、获取购物车里面的数据getcartitems、删除" aria-hidden="true">#</a> 3.3、获取购物车里面的数据getCartItems、删除</h3><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token keyword">private</span> <span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">CartItemVo</span><span class="token punctuation">&gt;</span></span> <span class="token function">getCartItems</span><span class="token punctuation">(</span><span class="token class-name">String</span> cartKey<span class="token punctuation">)</span><span class="token punctuation">{</span>
   <span class="token comment">//获取购物车里面的所有商品</span>
   <span class="token class-name">BoundHashOperations</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">,</span> <span class="token class-name">Object</span><span class="token punctuation">,</span> <span class="token class-name">Object</span><span class="token punctuation">&gt;</span></span> operations <span class="token operator">=</span> redisTemplate<span class="token punctuation">.</span><span class="token function">boundHashOps</span><span class="token punctuation">(</span>cartKey<span class="token punctuation">)</span><span class="token punctuation">;</span>
   <span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Object</span><span class="token punctuation">&gt;</span></span> values <span class="token operator">=</span> operations<span class="token punctuation">.</span><span class="token function">values</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
   <span class="token keyword">if</span><span class="token punctuation">(</span>values <span class="token operator">!=</span> <span class="token keyword">null</span> <span class="token operator">&amp;&amp;</span> values<span class="token punctuation">.</span><span class="token function">size</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">&gt;</span> <span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
      <span class="token keyword">return</span> values<span class="token punctuation">.</span><span class="token function">stream</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">map</span><span class="token punctuation">(</span><span class="token punctuation">(</span>obj<span class="token punctuation">)</span> <span class="token operator">-&gt;</span> <span class="token punctuation">{</span>
         <span class="token class-name">String</span> str <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">)</span> obj<span class="token punctuation">;</span>
         <span class="token keyword">return</span> <span class="token constant">JSON</span><span class="token punctuation">.</span><span class="token function">parseObject</span><span class="token punctuation">(</span>str<span class="token punctuation">,</span> <span class="token class-name">CartItemVo</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">collect</span><span class="token punctuation">(</span><span class="token class-name">Collectors</span><span class="token punctuation">.</span><span class="token function">toList</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
   <span class="token punctuation">}</span>
   <span class="token keyword">return</span> <span class="token keyword">null</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token annotation punctuation">@Override</span>
<span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">clearCartInfo</span><span class="token punctuation">(</span><span class="token class-name">String</span> cartKey<span class="token punctuation">)</span><span class="token punctuation">{</span>
   redisTemplate<span class="token punctuation">.</span><span class="token function">delete</span><span class="token punctuation">(</span>cartKey<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="_4、添加商品到购物车" tabindex="-1"><a class="header-anchor" href="#_4、添加商品到购物车" aria-hidden="true">#</a> 4、添加商品到购物车</h2><h3 id="获取到我们要操作的购物车-是哪个账号-getcartops" tabindex="-1"><a class="header-anchor" href="#获取到我们要操作的购物车-是哪个账号-getcartops" aria-hidden="true">#</a> 获取到我们要操作的购物车，是哪个账号 getCartOps</h3><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token keyword">private</span> <span class="token class-name">BoundHashOperations</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">,</span> <span class="token class-name">Object</span><span class="token punctuation">,</span> <span class="token class-name">Object</span><span class="token punctuation">&gt;</span></span> <span class="token function">getCartOps</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
   <span class="token comment">//先得到当前用户信息</span>
   <span class="token class-name">UserInfoTo</span> userInfoTo <span class="token operator">=</span> <span class="token class-name">CartInterceptor</span><span class="token punctuation">.</span>toThreadLocal<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
   <span class="token class-name">String</span> cartKey <span class="token operator">=</span> <span class="token string">&quot;&quot;</span><span class="token punctuation">;</span>
   <span class="token keyword">if</span><span class="token punctuation">(</span>userInfoTo<span class="token punctuation">.</span><span class="token function">getUserId</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">!=</span> <span class="token keyword">null</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
      <span class="token comment">//gulimall:cart:1</span>
      cartKey <span class="token operator">=</span> <span class="token constant">CART_PREFIX</span><span class="token operator">+</span>userInfoTo<span class="token punctuation">.</span><span class="token function">getUserId</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
   <span class="token punctuation">}</span><span class="token keyword">else</span><span class="token punctuation">{</span>
      cartKey <span class="token operator">=</span> <span class="token constant">CART_PREFIX</span><span class="token operator">+</span>userInfoTo<span class="token punctuation">.</span><span class="token function">getUserKey</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
   <span class="token punctuation">}</span>
   <span class="token comment">//绑定指定的key操作Redis</span>
   <span class="token keyword">return</span> redisTemplate<span class="token punctuation">.</span><span class="token function">boundHashOps</span><span class="token punctuation">(</span>cartKey<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_4-1、添加商品到购物车-addcartitem" tabindex="-1"><a class="header-anchor" href="#_4-1、添加商品到购物车-addcartitem" aria-hidden="true">#</a> 4.1、添加商品到购物车 addCartItem</h3><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token annotation punctuation">@GetMapping</span><span class="token punctuation">(</span>value <span class="token operator">=</span> <span class="token string">&quot;/addCartItem&quot;</span><span class="token punctuation">)</span>
<span class="token keyword">public</span> <span class="token class-name">String</span> <span class="token function">addCartItem</span><span class="token punctuation">(</span><span class="token annotation punctuation">@RequestParam</span><span class="token punctuation">(</span><span class="token string">&quot;skuId&quot;</span><span class="token punctuation">)</span> <span class="token class-name">Long</span> skuId<span class="token punctuation">,</span>
                    <span class="token annotation punctuation">@RequestParam</span><span class="token punctuation">(</span><span class="token string">&quot;num&quot;</span><span class="token punctuation">)</span> <span class="token class-name">Integer</span> num<span class="token punctuation">,</span>
                    <span class="token class-name">RedirectAttributes</span> attributes<span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">ExecutionException</span><span class="token punctuation">,</span> <span class="token class-name">InterruptedException</span><span class="token punctuation">{</span>
   cartService<span class="token punctuation">.</span><span class="token function">addToCart</span><span class="token punctuation">(</span>skuId<span class="token punctuation">,</span> num<span class="token punctuation">)</span><span class="token punctuation">;</span>
   attributes<span class="token punctuation">.</span><span class="token function">addAttribute</span><span class="token punctuation">(</span><span class="token string">&quot;skuId&quot;</span><span class="token punctuation">,</span> skuId<span class="token punctuation">)</span><span class="token punctuation">;</span>
   <span class="token keyword">return</span> <span class="token string">&quot;redirect:http://cart.yumall.com/addToCartSuccessPage.html&quot;</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token class-name">CartItemVo</span> <span class="token function">addToCart</span><span class="token punctuation">(</span><span class="token class-name">Long</span> skuId<span class="token punctuation">,</span> <span class="token class-name">Integer</span> num<span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">ExecutionException</span><span class="token punctuation">,</span> <span class="token class-name">InterruptedException</span><span class="token punctuation">{</span>
   <span class="token comment">//拿到要操作的购物车信息</span>
   <span class="token class-name">BoundHashOperations</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">,</span> <span class="token class-name">Object</span><span class="token punctuation">,</span> <span class="token class-name">Object</span><span class="token punctuation">&gt;</span></span> cartOps <span class="token operator">=</span> <span class="token function">getCartOps</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
   <span class="token comment">//判断Redis是否有该商品的信息</span>
   <span class="token class-name">String</span> productRedisValue <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">)</span> cartOps<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span>skuId<span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
   <span class="token comment">//如果没有就添加数据</span>
   <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token class-name">StringUtils</span><span class="token punctuation">.</span><span class="token function">isEmpty</span><span class="token punctuation">(</span>productRedisValue<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
      <span class="token comment">//2、添加新的商品到购物车(redis)</span>
      <span class="token class-name">CartItemVo</span> cartItemVo <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">CartItemVo</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token comment">//开启第一个异步任务</span>
      <span class="token class-name">CompletableFuture</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Void</span><span class="token punctuation">&gt;</span></span> getSkuInfoFuture <span class="token operator">=</span> <span class="token class-name">CompletableFuture</span><span class="token punctuation">.</span><span class="token function">runAsync</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">-&gt;</span> <span class="token punctuation">{</span>
         <span class="token comment">//1、远程查询当前要添加商品的信息</span>
         <span class="token class-name">R</span> productSkuInfo <span class="token operator">=</span> productFeignService<span class="token punctuation">.</span><span class="token function">getInfo</span><span class="token punctuation">(</span>skuId<span class="token punctuation">)</span><span class="token punctuation">;</span>
         <span class="token class-name">SkuInfoVo</span> skuInfo <span class="token operator">=</span> productSkuInfo<span class="token punctuation">.</span><span class="token function">getData</span><span class="token punctuation">(</span><span class="token string">&quot;skuInfo&quot;</span><span class="token punctuation">,</span> <span class="token keyword">new</span> <span class="token class-name">TypeReference</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">SkuInfoVo</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
         <span class="token comment">//数据赋值操作</span>
         cartItemVo<span class="token punctuation">.</span><span class="token function">setSkuId</span><span class="token punctuation">(</span>skuInfo<span class="token punctuation">.</span><span class="token function">getSkuId</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
         cartItemVo<span class="token punctuation">.</span><span class="token function">setTitle</span><span class="token punctuation">(</span>skuInfo<span class="token punctuation">.</span><span class="token function">getSkuTitle</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
         cartItemVo<span class="token punctuation">.</span><span class="token function">setImage</span><span class="token punctuation">(</span>skuInfo<span class="token punctuation">.</span><span class="token function">getSkuDefaultImg</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
         cartItemVo<span class="token punctuation">.</span><span class="token function">setPrice</span><span class="token punctuation">(</span>skuInfo<span class="token punctuation">.</span><span class="token function">getPrice</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
         cartItemVo<span class="token punctuation">.</span><span class="token function">setCount</span><span class="token punctuation">(</span>num<span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token punctuation">}</span><span class="token punctuation">,</span> executor<span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token comment">//开启第二个异步任务</span>
      <span class="token class-name">CompletableFuture</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Void</span><span class="token punctuation">&gt;</span></span> getSkuAttrValuesFuture <span class="token operator">=</span> <span class="token class-name">CompletableFuture</span><span class="token punctuation">.</span><span class="token function">runAsync</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">-&gt;</span> <span class="token punctuation">{</span>
         <span class="token comment">//2、远程查询skuAttrValues组合信息</span>
         <span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">&gt;</span></span> skuSaleAttrValues <span class="token operator">=</span> productFeignService<span class="token punctuation">.</span><span class="token function">getSkuSaleAttrValues</span><span class="token punctuation">(</span>skuId<span class="token punctuation">)</span><span class="token punctuation">;</span>
         cartItemVo<span class="token punctuation">.</span><span class="token function">setSkuAttrValues</span><span class="token punctuation">(</span>skuSaleAttrValues<span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token punctuation">}</span><span class="token punctuation">,</span> executor<span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token comment">//等待所有的异步任务全部完成</span>
      <span class="token class-name">CompletableFuture</span><span class="token punctuation">.</span><span class="token function">allOf</span><span class="token punctuation">(</span>getSkuInfoFuture<span class="token punctuation">,</span> getSkuAttrValuesFuture<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token class-name">String</span> cartItemJson <span class="token operator">=</span> <span class="token constant">JSON</span><span class="token punctuation">.</span><span class="token function">toJSONString</span><span class="token punctuation">(</span>cartItemVo<span class="token punctuation">)</span><span class="token punctuation">;</span>
      cartOps<span class="token punctuation">.</span><span class="token function">put</span><span class="token punctuation">(</span>skuId<span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> cartItemJson<span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token keyword">return</span> cartItemVo<span class="token punctuation">;</span>
   <span class="token punctuation">}</span><span class="token keyword">else</span><span class="token punctuation">{</span>
      <span class="token comment">//购物车有此商品，修改数量即可</span>
      <span class="token class-name">CartItemVo</span> cartItemVo <span class="token operator">=</span> <span class="token constant">JSON</span><span class="token punctuation">.</span><span class="token function">parseObject</span><span class="token punctuation">(</span>productRedisValue<span class="token punctuation">,</span> <span class="token class-name">CartItemVo</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
      cartItemVo<span class="token punctuation">.</span><span class="token function">setCount</span><span class="token punctuation">(</span>cartItemVo<span class="token punctuation">.</span><span class="token function">getCount</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">+</span>num<span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token comment">//修改redis的数据</span>
      <span class="token class-name">String</span> cartItemJson <span class="token operator">=</span> <span class="token constant">JSON</span><span class="token punctuation">.</span><span class="token function">toJSONString</span><span class="token punctuation">(</span>cartItemVo<span class="token punctuation">)</span><span class="token punctuation">;</span>
      cartOps<span class="token punctuation">.</span><span class="token function">put</span><span class="token punctuation">(</span>skuId<span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> cartItemJson<span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token keyword">return</span> cartItemVo<span class="token punctuation">;</span>
   <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_4-2、远程查询当前要添加商品的信息getinfo-skuid-远程查询skuattrvalues组合信息getskusaleattrvalues-skuid" tabindex="-1"><a class="header-anchor" href="#_4-2、远程查询当前要添加商品的信息getinfo-skuid-远程查询skuattrvalues组合信息getskusaleattrvalues-skuid" aria-hidden="true">#</a> 4.2、远程查询当前要添加商品的信息getInfo(skuId);，远程查询skuAttrValues组合信息getSkuSaleAttrValues(skuId);</h3><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token class-name">ProductFeignService</span>：
    <span class="token annotation punctuation">@GetMapping</span><span class="token punctuation">(</span>value <span class="token operator">=</span> <span class="token string">&quot;/product/skusaleattrvalue/stringList/{skuId}&quot;</span><span class="token punctuation">)</span>
    <span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">&gt;</span></span> <span class="token function">getSkuSaleAttrValues</span><span class="token punctuation">(</span><span class="token annotation punctuation">@PathVariable</span><span class="token punctuation">(</span><span class="token string">&quot;skuId&quot;</span><span class="token punctuation">)</span> <span class="token class-name">Long</span> skuId<span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token doc-comment comment">/**
 * 根据skuId查询pms_sku_sale_attr_value表中的信息
 *
 * <span class="token keyword">@param</span> <span class="token parameter">skuId</span>
 * <span class="token keyword">@return</span>
 */</span>
<span class="token annotation punctuation">@GetMapping</span><span class="token punctuation">(</span>value <span class="token operator">=</span> <span class="token string">&quot;/stringList/{skuId}&quot;</span><span class="token punctuation">)</span>
<span class="token keyword">public</span> <span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">&gt;</span></span> <span class="token function">getSkuSaleAttrValues</span><span class="token punctuation">(</span><span class="token annotation punctuation">@PathVariable</span><span class="token punctuation">(</span><span class="token string">&quot;skuId&quot;</span><span class="token punctuation">)</span> <span class="token class-name">Long</span> skuId<span class="token punctuation">)</span><span class="token punctuation">{</span>
   <span class="token keyword">return</span> skuSaleAttrValueService<span class="token punctuation">.</span><span class="token function">getSkuSaleAttrValuesAsStringList</span><span class="token punctuation">(</span>skuId<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

getSkuSaleAttrValuesAsStringList<span class="token operator">::</span><span class="token operator">::</span><span class="token operator">:</span>
        <span class="token class-name">SkuSaleAttrValueDao</span> baseMapper <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>baseMapper<span class="token punctuation">;</span>
        <span class="token keyword">return</span> baseMapper<span class="token punctuation">.</span><span class="token function">getSkuSaleAttrValuesAsStringList</span><span class="token punctuation">(</span>skuId<span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="_5、跳转到添加购物车成功页面" tabindex="-1"><a class="header-anchor" href="#_5、跳转到添加购物车成功页面" aria-hidden="true">#</a> 5、跳转到添加购物车成功页面</h2><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token annotation punctuation">@GetMapping</span><span class="token punctuation">(</span>value <span class="token operator">=</span> <span class="token string">&quot;/addToCartSuccessPage.html&quot;</span><span class="token punctuation">)</span>
<span class="token keyword">public</span> <span class="token class-name">String</span> <span class="token function">addToCartSuccessPage</span><span class="token punctuation">(</span><span class="token annotation punctuation">@RequestParam</span><span class="token punctuation">(</span><span class="token string">&quot;skuId&quot;</span><span class="token punctuation">)</span> <span class="token class-name">Long</span> skuId<span class="token punctuation">,</span> <span class="token class-name">Model</span> model<span class="token punctuation">)</span><span class="token punctuation">{</span>
   <span class="token comment">//重定向到成功页面。再次查询购物车数据即可</span>
   <span class="token class-name">CartItemVo</span> cartItemVo <span class="token operator">=</span> cartService<span class="token punctuation">.</span><span class="token function">getCartItem</span><span class="token punctuation">(</span>skuId<span class="token punctuation">)</span><span class="token punctuation">;</span>
   model<span class="token punctuation">.</span><span class="token function">addAttribute</span><span class="token punctuation">(</span><span class="token string">&quot;cartItem&quot;</span><span class="token punctuation">,</span> cartItemVo<span class="token punctuation">)</span><span class="token punctuation">;</span>
   <span class="token keyword">return</span> <span class="token string">&quot;success&quot;</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token annotation punctuation">@Override</span>
<span class="token keyword">public</span> <span class="token class-name">CartItemVo</span> <span class="token function">getCartItem</span><span class="token punctuation">(</span><span class="token class-name">Long</span> skuId<span class="token punctuation">)</span><span class="token punctuation">{</span>
   <span class="token comment">//拿到要操作的购物车信息</span>
   <span class="token class-name">BoundHashOperations</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">,</span> <span class="token class-name">Object</span><span class="token punctuation">,</span> <span class="token class-name">Object</span><span class="token punctuation">&gt;</span></span> cartOps <span class="token operator">=</span> <span class="token function">getCartOps</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
   <span class="token class-name">String</span> redisValue <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">)</span> cartOps<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span>skuId<span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
   <span class="token keyword">return</span> <span class="token constant">JSON</span><span class="token punctuation">.</span><span class="token function">parseObject</span><span class="token punctuation">(</span>redisValue<span class="token punctuation">,</span> <span class="token class-name">CartItemVo</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="_6、商品是否选中" tabindex="-1"><a class="header-anchor" href="#_6、商品是否选中" aria-hidden="true">#</a> 6、商品是否选中</h2><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token annotation punctuation">@GetMapping</span><span class="token punctuation">(</span>value <span class="token operator">=</span> <span class="token string">&quot;/checkItem&quot;</span><span class="token punctuation">)</span>
<span class="token keyword">public</span> <span class="token class-name">String</span> <span class="token function">checkItem</span><span class="token punctuation">(</span><span class="token annotation punctuation">@RequestParam</span><span class="token punctuation">(</span>value <span class="token operator">=</span> <span class="token string">&quot;skuId&quot;</span><span class="token punctuation">)</span> <span class="token class-name">Long</span> skuId<span class="token punctuation">,</span>
                  <span class="token annotation punctuation">@RequestParam</span><span class="token punctuation">(</span>value <span class="token operator">=</span> <span class="token string">&quot;checked&quot;</span><span class="token punctuation">)</span> <span class="token class-name">Integer</span> checked<span class="token punctuation">)</span><span class="token punctuation">{</span>
   cartService<span class="token punctuation">.</span><span class="token function">checkItem</span><span class="token punctuation">(</span>skuId<span class="token punctuation">,</span> checked<span class="token punctuation">)</span><span class="token punctuation">;</span>
   <span class="token keyword">return</span> <span class="token string">&quot;redirect:http://cart.yumall.com/cart.html&quot;</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">checkItem</span><span class="token punctuation">(</span><span class="token class-name">Long</span> skuId<span class="token punctuation">,</span> <span class="token class-name">Integer</span> check<span class="token punctuation">)</span><span class="token punctuation">{</span>
   <span class="token comment">//查询购物车里面的商品</span>
   <span class="token class-name">CartItemVo</span> cartItem <span class="token operator">=</span> <span class="token function">getCartItem</span><span class="token punctuation">(</span>skuId<span class="token punctuation">)</span><span class="token punctuation">;</span>
   <span class="token comment">//修改商品状态</span>
   cartItem<span class="token punctuation">.</span><span class="token function">setCheck</span><span class="token punctuation">(</span>check <span class="token operator">==</span> <span class="token number">1</span> <span class="token operator">?</span> <span class="token boolean">true</span> <span class="token operator">:</span> <span class="token boolean">false</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
   <span class="token comment">//序列化存入redis中</span>
   <span class="token class-name">String</span> redisValue <span class="token operator">=</span> <span class="token constant">JSON</span><span class="token punctuation">.</span><span class="token function">toJSONString</span><span class="token punctuation">(</span>cartItem<span class="token punctuation">)</span><span class="token punctuation">;</span>
   <span class="token class-name">BoundHashOperations</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">,</span> <span class="token class-name">Object</span><span class="token punctuation">,</span> <span class="token class-name">Object</span><span class="token punctuation">&gt;</span></span> cartOps <span class="token operator">=</span> <span class="token function">getCartOps</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
   cartOps<span class="token punctuation">.</span><span class="token function">put</span><span class="token punctuation">(</span>skuId<span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> redisValue<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="_7、修改购物项数量" tabindex="-1"><a class="header-anchor" href="#_7、修改购物项数量" aria-hidden="true">#</a> 7、修改购物项数量</h2><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token annotation punctuation">@GetMapping</span><span class="token punctuation">(</span>value <span class="token operator">=</span> <span class="token string">&quot;/countItem&quot;</span><span class="token punctuation">)</span>
<span class="token keyword">public</span> <span class="token class-name">String</span> <span class="token function">countItem</span><span class="token punctuation">(</span><span class="token annotation punctuation">@RequestParam</span><span class="token punctuation">(</span>value <span class="token operator">=</span> <span class="token string">&quot;skuId&quot;</span><span class="token punctuation">)</span> <span class="token class-name">Long</span> skuId<span class="token punctuation">,</span>
                  <span class="token annotation punctuation">@RequestParam</span><span class="token punctuation">(</span>value <span class="token operator">=</span> <span class="token string">&quot;num&quot;</span><span class="token punctuation">)</span> <span class="token class-name">Integer</span> num<span class="token punctuation">)</span><span class="token punctuation">{</span>
   cartService<span class="token punctuation">.</span><span class="token function">changeItemCount</span><span class="token punctuation">(</span>skuId<span class="token punctuation">,</span> num<span class="token punctuation">)</span><span class="token punctuation">;</span>
   <span class="token keyword">return</span> <span class="token string">&quot;redirect:http://cart.yumall.com/cart.html&quot;</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">changeItemCount</span><span class="token punctuation">(</span><span class="token class-name">Long</span> skuId<span class="token punctuation">,</span> <span class="token class-name">Integer</span> num<span class="token punctuation">)</span><span class="token punctuation">{</span>
   <span class="token comment">//查询购物车里面的商品</span>
   <span class="token class-name">CartItemVo</span> cartItem <span class="token operator">=</span> <span class="token function">getCartItem</span><span class="token punctuation">(</span>skuId<span class="token punctuation">)</span><span class="token punctuation">;</span>
   cartItem<span class="token punctuation">.</span><span class="token function">setCount</span><span class="token punctuation">(</span>num<span class="token punctuation">)</span><span class="token punctuation">;</span>
   <span class="token class-name">BoundHashOperations</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">,</span> <span class="token class-name">Object</span><span class="token punctuation">,</span> <span class="token class-name">Object</span><span class="token punctuation">&gt;</span></span> cartOps <span class="token operator">=</span> <span class="token function">getCartOps</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
   <span class="token comment">//序列化存入redis中</span>
   <span class="token class-name">String</span> redisValue <span class="token operator">=</span> <span class="token constant">JSON</span><span class="token punctuation">.</span><span class="token function">toJSONString</span><span class="token punctuation">(</span>cartItem<span class="token punctuation">)</span><span class="token punctuation">;</span>
   cartOps<span class="token punctuation">.</span><span class="token function">put</span><span class="token punctuation">(</span>skuId<span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> redisValue<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="_8、删除商品信息" tabindex="-1"><a class="header-anchor" href="#_8、删除商品信息" aria-hidden="true">#</a> 8、删除商品信息</h2><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token annotation punctuation">@GetMapping</span><span class="token punctuation">(</span>value <span class="token operator">=</span> <span class="token string">&quot;/deleteItem&quot;</span><span class="token punctuation">)</span>
<span class="token keyword">public</span> <span class="token class-name">String</span> <span class="token function">deleteItem</span><span class="token punctuation">(</span><span class="token annotation punctuation">@RequestParam</span><span class="token punctuation">(</span><span class="token string">&quot;skuId&quot;</span><span class="token punctuation">)</span> <span class="token class-name">Integer</span> skuId<span class="token punctuation">)</span><span class="token punctuation">{</span>
   cartService<span class="token punctuation">.</span><span class="token function">deleteIdCartInfo</span><span class="token punctuation">(</span>skuId<span class="token punctuation">)</span><span class="token punctuation">;</span>
   <span class="token keyword">return</span> <span class="token string">&quot;redirect:http://cart.yumall.com/cart.html&quot;</span><span class="token punctuation">;</span>

<span class="token punctuation">}</span>

<span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">deleteIdCartInfo</span><span class="token punctuation">(</span><span class="token class-name">Integer</span> skuId<span class="token punctuation">)</span><span class="token punctuation">{</span>
		<span class="token class-name">BoundHashOperations</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">,</span> <span class="token class-name">Object</span><span class="token punctuation">,</span> <span class="token class-name">Object</span><span class="token punctuation">&gt;</span></span> cartOps <span class="token operator">=</span> <span class="token function">getCartOps</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
		cartOps<span class="token punctuation">.</span><span class="token function">delete</span><span class="token punctuation">(</span>skuId<span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
	<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="_9、获取当前用户的购物车商品项" tabindex="-1"><a class="header-anchor" href="#_9、获取当前用户的购物车商品项" aria-hidden="true">#</a> 9、获取当前用户的购物车商品项</h2><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token annotation punctuation">@GetMapping</span><span class="token punctuation">(</span>value <span class="token operator">=</span> <span class="token string">&quot;/currentUserCartItems&quot;</span><span class="token punctuation">)</span>
<span class="token annotation punctuation">@ResponseBody</span>
<span class="token keyword">public</span> <span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">CartItemVo</span><span class="token punctuation">&gt;</span></span> <span class="token function">getCurrentCartItems</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
   <span class="token keyword">return</span> cartService<span class="token punctuation">.</span><span class="token function">getUserCartItems</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">CartItemVo</span><span class="token punctuation">&gt;</span></span> <span class="token function">getUserCartItems</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
   <span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">CartItemVo</span><span class="token punctuation">&gt;</span></span> cartItemVoList <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ArrayList</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
   <span class="token comment">//获取当前用户登录的信息</span>
   <span class="token class-name">UserInfoTo</span> userInfoTo <span class="token operator">=</span> <span class="token class-name">CartInterceptor</span><span class="token punctuation">.</span>toThreadLocal<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
   <span class="token comment">//如果用户未登录直接返回null</span>
   <span class="token keyword">if</span><span class="token punctuation">(</span>userInfoTo<span class="token punctuation">.</span><span class="token function">getUserId</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">==</span> <span class="token keyword">null</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
      <span class="token keyword">return</span> <span class="token keyword">null</span><span class="token punctuation">;</span>
   <span class="token punctuation">}</span><span class="token keyword">else</span><span class="token punctuation">{</span>
      <span class="token comment">//获取购物车项</span>
      <span class="token class-name">String</span> cartKey <span class="token operator">=</span> <span class="token constant">CART_PREFIX</span><span class="token operator">+</span>userInfoTo<span class="token punctuation">.</span><span class="token function">getUserId</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token comment">//获取所有的</span>
      <span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">CartItemVo</span><span class="token punctuation">&gt;</span></span> cartItems <span class="token operator">=</span> <span class="token function">getCartItems</span><span class="token punctuation">(</span>cartKey<span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token keyword">if</span><span class="token punctuation">(</span>cartItems <span class="token operator">==</span> <span class="token keyword">null</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
         <span class="token keyword">throw</span> <span class="token keyword">new</span> <span class="token class-name">CartExceptionHandler</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token punctuation">}</span>
      <span class="token comment">//筛选出选中的</span>
      cartItemVoList <span class="token operator">=</span> cartItems<span class="token punctuation">.</span><span class="token function">stream</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
            <span class="token punctuation">.</span><span class="token function">filter</span><span class="token punctuation">(</span>items <span class="token operator">-&gt;</span> items<span class="token punctuation">.</span><span class="token function">getCheck</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
            <span class="token punctuation">.</span><span class="token function">map</span><span class="token punctuation">(</span>item <span class="token operator">-&gt;</span> <span class="token punctuation">{</span>
               <span class="token comment">//更新为最新的价格（查询数据库）</span>
               <span class="token class-name">BigDecimal</span> price <span class="token operator">=</span> productFeignService<span class="token punctuation">.</span><span class="token function">getPrice</span><span class="token punctuation">(</span>item<span class="token punctuation">.</span><span class="token function">getSkuId</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
               item<span class="token punctuation">.</span><span class="token function">setPrice</span><span class="token punctuation">(</span>price<span class="token punctuation">)</span><span class="token punctuation">;</span>
               <span class="token keyword">return</span> item<span class="token punctuation">;</span>
            <span class="token punctuation">}</span><span class="token punctuation">)</span>
            <span class="token punctuation">.</span><span class="token function">collect</span><span class="token punctuation">(</span><span class="token class-name">Collectors</span><span class="token punctuation">.</span><span class="token function">toList</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
   <span class="token punctuation">}</span>
   <span class="token keyword">return</span> cartItemVoList<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h1>十七、订单服务</h1><h2 id="_1、配置web、nginx、springsession、配置线程池" tabindex="-1"><a class="header-anchor" href="#_1、配置web、nginx、springsession、配置线程池" aria-hidden="true">#</a> 1、配置web、nginx、springSession、配置线程池</h2><h2 id="_2、订单概念、分析" tabindex="-1"><a class="header-anchor" href="#_2、订单概念、分析" aria-hidden="true">#</a> 2、订单概念、分析</h2><h3 id="订单中心" tabindex="-1"><a class="header-anchor" href="#订单中心" aria-hidden="true">#</a> 订单中心</h3><img src="`+q+'" alt="订单中心" style="zoom:80%;"><h3 id="订单流程" tabindex="-1"><a class="header-anchor" href="#订单流程" aria-hidden="true">#</a> 订单流程：</h3><p><img src="'+S+`" alt="image-20211004160657576"></p><h3 id="幂等性处理" tabindex="-1"><a class="header-anchor" href="#幂等性处理" aria-hidden="true">#</a> 幂等性处理</h3><h3 id="订单业务" tabindex="-1"><a class="header-anchor" href="#订单业务" aria-hidden="true">#</a> 订单业务</h3><h2 id="_3、登录拦截" tabindex="-1"><a class="header-anchor" href="#_3、登录拦截" aria-hidden="true">#</a> 3、登录拦截</h2><p>WebConfig</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token annotation punctuation">@Configuration</span>
<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">WebConfig</span> <span class="token keyword">implements</span> <span class="token class-name">WebMvcConfigurer</span> <span class="token punctuation">{</span>
    <span class="token annotation punctuation">@Autowired</span>
    <span class="token keyword">private</span> <span class="token class-name">LoginUserInterceptor</span> loginUserInterceptor<span class="token punctuation">;</span>
    <span class="token annotation punctuation">@Override</span>
    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">addInterceptors</span><span class="token punctuation">(</span><span class="token class-name">InterceptorRegistry</span> registry<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        registry<span class="token punctuation">.</span><span class="token function">addInterceptor</span><span class="token punctuation">(</span>loginUserInterceptor<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">addPathPatterns</span><span class="token punctuation">(</span><span class="token string">&quot;/**&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>Interceptor</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token annotation punctuation">@Component</span>
<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">LoginUserInterceptor</span> <span class="token keyword">implements</span> <span class="token class-name">HandlerInterceptor</span> <span class="token punctuation">{</span>
    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token class-name">ThreadLocal</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">MemberResponseVo</span><span class="token punctuation">&gt;</span></span> loginUser <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ThreadLocal</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token annotation punctuation">@Override</span>
    <span class="token keyword">public</span> <span class="token keyword">boolean</span> <span class="token function">preHandle</span><span class="token punctuation">(</span><span class="token class-name">HttpServletRequest</span> request<span class="token punctuation">,</span> <span class="token class-name">HttpServletResponse</span> response<span class="token punctuation">,</span> <span class="token class-name">Object</span> handler<span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">Exception</span> <span class="token punctuation">{</span>
        <span class="token class-name">String</span> uri <span class="token operator">=</span> request<span class="token punctuation">.</span><span class="token function">getRequestURI</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">AntPathMatcher</span> antPathMatcher <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">AntPathMatcher</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">boolean</span> match <span class="token operator">=</span> antPathMatcher<span class="token punctuation">.</span><span class="token function">match</span><span class="token punctuation">(</span><span class="token string">&quot;/order/order/status/**&quot;</span><span class="token punctuation">,</span> uri<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">boolean</span> match1 <span class="token operator">=</span> antPathMatcher<span class="token punctuation">.</span><span class="token function">match</span><span class="token punctuation">(</span><span class="token string">&quot;/payed/notify&quot;</span><span class="token punctuation">,</span> uri<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>match <span class="token operator">||</span> match1<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">return</span> <span class="token boolean">true</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
        <span class="token comment">//获取登录的用户信息</span>
        <span class="token class-name">MemberResponseVo</span> attribute <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token class-name">MemberResponseVo</span><span class="token punctuation">)</span> request<span class="token punctuation">.</span><span class="token function">getSession</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getAttribute</span><span class="token punctuation">(</span><span class="token constant">LOGIN_USER</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>attribute <span class="token operator">!=</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token comment">//把登录后用户的信息放在ThreadLocal里面进行保存</span>
            loginUser<span class="token punctuation">.</span><span class="token function">set</span><span class="token punctuation">(</span>attribute<span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token keyword">return</span> <span class="token boolean">true</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
            <span class="token comment">//未登录，返回登录页面</span>
            response<span class="token punctuation">.</span><span class="token function">setContentType</span><span class="token punctuation">(</span><span class="token string">&quot;text/html;charset=UTF-8&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token class-name">PrintWriter</span> out <span class="token operator">=</span> response<span class="token punctuation">.</span><span class="token function">getWriter</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;&lt;script&gt;alert(&#39;请先进行登录，再进行后续操作！&#39;);location.href=&#39;http://auth.yumall.com/login.html&#39;&lt;/script&gt;&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token comment">// session.setAttribute(&quot;msg&quot;, &quot;请先进行登录&quot;);</span>
            <span class="token comment">// response.sendRedirect(&quot;http://auth.yumall.com/login.html&quot;);</span>
            <span class="token keyword">return</span> <span class="token boolean">false</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="_4、由购物车-cart-去结算确认页-confirm" tabindex="-1"><a class="header-anchor" href="#_4、由购物车-cart-去结算确认页-confirm" aria-hidden="true">#</a> 4、由购物车 cart 去结算确认页 confirm</h2>`,72),nn={href:"http://order.yumall.com/toTrade",target:"_blank",rel:"noopener noreferrer"},sn=p('<p>order：OrderWebController：toTrade()</p><p><strong>注意：</strong> <em>a) 获取当前用户登录的信息，获取当前线程请求头信息(解决Feign异步调用丢失请求头问题)；b) 开启异步任务；c) 每一个线程都来共享之前的请求数据；d) 执行具体业务。</em></p><h3 id="解决feign异步调用-丢失请求头-上下文-问题" tabindex="-1"><a class="header-anchor" href="#解决feign异步调用-丢失请求头-上下文-问题" aria-hidden="true">#</a> 解决Feign异步调用 丢失请求头|上下文 问题</h3><p><img src="'+w+'" alt="image-20211004175207905"></p><p><img src="'+I+`" alt="image-20211004180806491"></p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token doc-comment comment">/**
 * feign拦截器功能
 *
 * <span class="token keyword">@author</span> kong
 */</span>
<span class="token annotation punctuation">@Configuration</span>
<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">FeignConfig</span><span class="token punctuation">{</span>

   <span class="token annotation punctuation">@Bean</span><span class="token punctuation">(</span><span class="token string">&quot;requestInterceptor&quot;</span><span class="token punctuation">)</span>
   <span class="token keyword">public</span> <span class="token class-name">RequestInterceptor</span> <span class="token function">requestInterceptor</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
      <span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token class-name">RequestInterceptor</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
         <span class="token annotation punctuation">@Override</span>
         <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">apply</span><span class="token punctuation">(</span><span class="token class-name">RequestTemplate</span> template<span class="token punctuation">)</span><span class="token punctuation">{</span>
            <span class="token comment">//1、使用RequestContextHolder拿到刚进来的请求数据</span>
            <span class="token class-name">ServletRequestAttributes</span> requestAttributes <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token class-name">ServletRequestAttributes</span><span class="token punctuation">)</span> <span class="token class-name">RequestContextHolder</span><span class="token punctuation">.</span><span class="token function">getRequestAttributes</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token keyword">if</span><span class="token punctuation">(</span>requestAttributes <span class="token operator">!=</span> <span class="token keyword">null</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
               <span class="token comment">//老请求</span>
               <span class="token class-name">HttpServletRequest</span> request <span class="token operator">=</span> requestAttributes<span class="token punctuation">.</span><span class="token function">getRequest</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
               <span class="token keyword">if</span><span class="token punctuation">(</span>request <span class="token operator">!=</span> <span class="token keyword">null</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
                  <span class="token comment">//2、同步请求头的数据（主要是cookie）</span>
                  <span class="token comment">//把老请求的cookie值放到新请求上来，进行一个同步</span>
                  <span class="token class-name">String</span> cookie <span class="token operator">=</span> request<span class="token punctuation">.</span><span class="token function">getHeader</span><span class="token punctuation">(</span><span class="token string">&quot;Cookie&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                  template<span class="token punctuation">.</span><span class="token function">header</span><span class="token punctuation">(</span><span class="token string">&quot;Cookie&quot;</span><span class="token punctuation">,</span> cookie<span class="token punctuation">)</span><span class="token punctuation">;</span>
               <span class="token punctuation">}</span>
            <span class="token punctuation">}</span>
         <span class="token punctuation">}</span>
      <span class="token punctuation">}</span><span class="token punctuation">;</span>
   <span class="token punctuation">}</span> <span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><img src="`+_+`" alt="image-20211004181324416"></p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token class-name">RequestAttributes</span> requestAttributes <span class="token operator">=</span> <span class="token class-name">RequestContextHolder</span><span class="token punctuation">.</span><span class="token function">getRequestAttributes</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">-</span>
<span class="token class-name">CompletableFuture</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Void</span><span class="token punctuation">&gt;</span></span> addressFuture <span class="token operator">=</span> <span class="token class-name">CompletableFuture</span><span class="token punctuation">.</span><span class="token function">runAsync</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">-&gt;</span> <span class="token punctuation">{</span>
<span class="token comment">//每一个线程都来共享之前的请求数据,上下文</span>
<span class="token class-name">RequestContextHolder</span><span class="token punctuation">.</span><span class="token function">setRequestAttributes</span><span class="token punctuation">(</span>requestAttributes<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token comment">//Feign异步调用</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_4-1、controller、构建orderconfirmvo" tabindex="-1"><a class="header-anchor" href="#_4-1、controller、构建orderconfirmvo" aria-hidden="true">#</a> 4.1、Controller、构建OrderConfirmVo</h3><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token doc-comment comment">/**
 * 去结算确认页
 */</span>
<span class="token annotation punctuation">@GetMapping</span><span class="token punctuation">(</span>value <span class="token operator">=</span> <span class="token string">&quot;/toTrade&quot;</span><span class="token punctuation">)</span>
<span class="token keyword">public</span> <span class="token class-name">String</span> <span class="token function">toTrade</span><span class="token punctuation">(</span><span class="token class-name">Model</span> model<span class="token punctuation">,</span> <span class="token class-name">HttpServletRequest</span> request<span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">ExecutionException</span><span class="token punctuation">,</span> <span class="token class-name">InterruptedException</span> <span class="token punctuation">{</span>
    <span class="token class-name">OrderConfirmVo</span> confirmVo <span class="token operator">=</span> orderService<span class="token punctuation">.</span><span class="token function">confirmOrder</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    model<span class="token punctuation">.</span><span class="token function">addAttribute</span><span class="token punctuation">(</span><span class="token string">&quot;confirmOrderData&quot;</span><span class="token punctuation">,</span>confirmVo<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token comment">//展示订单确认的数据</span>
    <span class="token keyword">return</span> <span class="token string">&quot;confirm&quot;</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>构建OrderConfirmVo</p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>/**
 * 订单确认页需要用的数据
 */
public class OrderConfirmVo{
   /** 会员收获地址列表 **/
   @Getter
   @Setter
   List&lt;MemberAddressVo&gt; memberAddressVos;
   /** 所有选中的购物项 **/
   @Getter
   @Setter
   List&lt;OrderItemVo&gt; items;
   /** 发票记录 **/
   @Getter
   @Setter
   /** 优惠券（会员积分） **/
   private Integer integration;
   /** 防止重复提交的令牌 **/
   @Getter
   @Setter
   private String orderToken;
   @Getter
   @Setter
   Map&lt;Long, Boolean&gt; stocks;
   public Integer getCount(){
      Integer count = 0;
      if(items != null &amp;&amp; items.size() &gt; 0){
         for(OrderItemVo item : items){
            count += item.getCount();
         }
      }
      return count;
   }

   /** 订单总额 **/
   //BigDecimal total;
   //计算订单总额
   public BigDecimal getTotal(){
      BigDecimal totalNum = BigDecimal.ZERO;
      if(items != null &amp;&amp; items.size() &gt; 0){
         for(OrderItemVo item : items){
            //计算当前商品的总价格
            BigDecimal itemPrice = item.getPrice().multiply(new BigDecimal(item.getCount().toString()));
            //再计算全部商品的总价格
            totalNum = totalNum.add(itemPrice);
         }
      }
      return totalNum;
   }

   /** 应付价格 **/
   //BigDecimal payPrice;
   public BigDecimal getPayPrice(){
      return getTotal();
   }
}
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token comment">//构建OrderConfirmVo</span>
		<span class="token class-name">OrderConfirmVo</span> confirmVo <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">OrderConfirmVo</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
		<span class="token comment">//获取当前用户登录的信息</span>
		<span class="token class-name">MemberResponseVo</span> memberResponseVo <span class="token operator">=</span> <span class="token class-name">LoginUserInterceptor</span><span class="token punctuation">.</span>loginUser<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
		<span class="token comment">//TODO :获取当前线程请求头信息(解决Feign异步调用丢失请求头问题)</span>
		<span class="token class-name">RequestAttributes</span> requestAttributes <span class="token operator">=</span> <span class="token class-name">RequestContextHolder</span><span class="token punctuation">.</span><span class="token function">getRequestAttributes</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
		<span class="token comment">//开启第一个异步任务：远程查询所有的收获地址列表</span>
		<span class="token class-name">CompletableFuture</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Void</span><span class="token punctuation">&gt;</span></span> addressFuture <span class="token operator">=</span> <span class="token class-name">CompletableFuture</span><span class="token punctuation">.</span><span class="token function">runAsync</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">-&gt;</span> <span class="token punctuation">{</span>
			<span class="token comment">//每一个线程都来共享之前的请求数据</span>
			<span class="token class-name">RequestContextHolder</span><span class="token punctuation">.</span><span class="token function">setRequestAttributes</span><span class="token punctuation">(</span>requestAttributes<span class="token punctuation">)</span><span class="token punctuation">;</span>
			<span class="token comment">//1、远程查询所有的收获地址列表</span>
			<span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">MemberAddressVo</span><span class="token punctuation">&gt;</span></span> address <span class="token operator">=</span> memberFeignService<span class="token punctuation">.</span><span class="token function">getAddress</span><span class="token punctuation">(</span>memberResponseVo<span class="token punctuation">.</span><span class="token function">getId</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
			confirmVo<span class="token punctuation">.</span><span class="token function">setMemberAddressVos</span><span class="token punctuation">(</span>address<span class="token punctuation">)</span><span class="token punctuation">;</span>
		<span class="token punctuation">}</span><span class="token punctuation">,</span> threadPoolExecutor<span class="token punctuation">)</span><span class="token punctuation">;</span>
		<span class="token comment">//开启第二个异步任务：远程查询购物车所有选中的购物项：查询商品库存信息</span>
		<span class="token class-name">CompletableFuture</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Void</span><span class="token punctuation">&gt;</span></span> cartInfoFuture <span class="token operator">=</span> <span class="token class-name">CompletableFuture</span><span class="token punctuation">.</span><span class="token function">runAsync</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">-&gt;</span> <span class="token punctuation">{</span>
			<span class="token comment">//每一个线程都来共享之前的请求数据</span>
			<span class="token class-name">RequestContextHolder</span><span class="token punctuation">.</span><span class="token function">setRequestAttributes</span><span class="token punctuation">(</span>requestAttributes<span class="token punctuation">)</span><span class="token punctuation">;</span>
			<span class="token comment">//2、远程查询购物车所有选中的购物项</span>
			<span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">OrderItemVo</span><span class="token punctuation">&gt;</span></span> currentCartItems <span class="token operator">=</span> cartFeignService<span class="token punctuation">.</span><span class="token function">getCurrentCartItems</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
			confirmVo<span class="token punctuation">.</span><span class="token function">setItems</span><span class="token punctuation">(</span>currentCartItems<span class="token punctuation">)</span><span class="token punctuation">;</span>
			<span class="token comment">//feign在远程调用之前要构造请求，调用很多的拦截器</span>
		<span class="token punctuation">}</span><span class="token punctuation">,</span> threadPoolExecutor<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">thenRunAsync</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">-&gt;</span> <span class="token punctuation">{</span>
			<span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">OrderItemVo</span><span class="token punctuation">&gt;</span></span> items <span class="token operator">=</span> confirmVo<span class="token punctuation">.</span><span class="token function">getItems</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
			<span class="token comment">//获取全部商品的id</span>
			<span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Long</span><span class="token punctuation">&gt;</span></span> skuIds <span class="token operator">=</span> items<span class="token punctuation">.</span><span class="token function">stream</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">map</span><span class="token punctuation">(</span><span class="token punctuation">(</span>itemVo <span class="token operator">-&gt;</span> itemVo<span class="token punctuation">.</span><span class="token function">getSkuId</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">collect</span><span class="token punctuation">(</span><span class="token class-name">Collectors</span><span class="token punctuation">.</span><span class="token function">toList</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
			<span class="token comment">//远程查询商品库存信息</span>
			<span class="token class-name">R</span> skuHasStock <span class="token operator">=</span> wmsFeignService<span class="token punctuation">.</span><span class="token function">getSkuHasStock</span><span class="token punctuation">(</span>skuIds<span class="token punctuation">)</span><span class="token punctuation">;</span>
			<span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">SkuStockVo</span><span class="token punctuation">&gt;</span></span> skuStockVos <span class="token operator">=</span> skuHasStock<span class="token punctuation">.</span><span class="token function">getData</span><span class="token punctuation">(</span><span class="token string">&quot;data&quot;</span><span class="token punctuation">,</span> <span class="token keyword">new</span> <span class="token class-name">TypeReference</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">List</span><span class="token punctuation">&lt;</span><span class="token class-name">SkuStockVo</span><span class="token punctuation">&gt;</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
			<span class="token keyword">if</span><span class="token punctuation">(</span>skuStockVos <span class="token operator">!=</span> <span class="token keyword">null</span> <span class="token operator">&amp;&amp;</span> skuStockVos<span class="token punctuation">.</span><span class="token function">size</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">&gt;</span> <span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
				<span class="token comment">//将skuStockVos集合转换为map</span>
				confirmVo<span class="token punctuation">.</span><span class="token function">setStocks</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token class-name">Map</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Long</span><span class="token punctuation">,</span> <span class="token class-name">Boolean</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">)</span> skuStockVos<span class="token punctuation">.</span><span class="token function">stream</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">collect</span><span class="token punctuation">(</span><span class="token class-name">Collectors</span><span class="token punctuation">.</span><span class="token function">toMap</span><span class="token punctuation">(</span><span class="token class-name">SkuStockVo</span><span class="token operator">::</span><span class="token function">getSkuId</span><span class="token punctuation">,</span> <span class="token class-name">SkuStockVo</span><span class="token operator">::</span><span class="token function">getHasStock</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
			<span class="token punctuation">}</span>
		<span class="token punctuation">}</span><span class="token punctuation">,</span> threadPoolExecutor<span class="token punctuation">)</span><span class="token punctuation">;</span>
		<span class="token comment">//3、查询用户积分</span>
		<span class="token class-name">Integer</span> integration <span class="token operator">=</span> memberResponseVo<span class="token punctuation">.</span><span class="token function">getIntegration</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
		confirmVo<span class="token punctuation">.</span><span class="token function">setIntegration</span><span class="token punctuation">(</span>integration<span class="token punctuation">)</span><span class="token punctuation">;</span>
		<span class="token comment">//4、价格数据自动计算</span>
		<span class="token comment">//TODO 5、防重令牌(防止表单重复提交)</span>
		<span class="token comment">//为用户设置一个token，三十分钟过期时间（存在redis）</span>
		<span class="token class-name">String</span> token <span class="token operator">=</span> <span class="token constant">UUID</span><span class="token punctuation">.</span><span class="token function">randomUUID</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">replace</span><span class="token punctuation">(</span><span class="token string">&quot;-&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
		redisTemplate<span class="token punctuation">.</span><span class="token function">opsForValue</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">set</span><span class="token punctuation">(</span><span class="token constant">USER_ORDER_TOKEN_PREFIX</span><span class="token operator">+</span>memberResponseVo<span class="token punctuation">.</span><span class="token function">getId</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> token<span class="token punctuation">,</span> <span class="token number">30</span><span class="token punctuation">,</span> <span class="token class-name">TimeUnit</span><span class="token punctuation">.</span><span class="token constant">MINUTES</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
		confirmVo<span class="token punctuation">.</span><span class="token function">setOrderToken</span><span class="token punctuation">(</span>token<span class="token punctuation">)</span><span class="token punctuation">;</span>
		<span class="token class-name">CompletableFuture</span><span class="token punctuation">.</span><span class="token function">allOf</span><span class="token punctuation">(</span>addressFuture<span class="token punctuation">,</span> cartInfoFuture<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
		<span class="token keyword">return</span> confirmVo<span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_4-2、memberfeignservice-远程查询所有的收获地址列表" tabindex="-1"><a class="header-anchor" href="#_4-2、memberfeignservice-远程查询所有的收获地址列表" aria-hidden="true">#</a> 4.2、memberFeignService 远程查询所有的收获地址列表</h3><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token annotation punctuation">@FeignClient</span><span class="token punctuation">(</span><span class="token string">&quot;yumall-member&quot;</span><span class="token punctuation">)</span>
<span class="token keyword">public</span> <span class="token keyword">interface</span> <span class="token class-name">MemberFeignService</span><span class="token punctuation">{</span>
   <span class="token doc-comment comment">/**
    * 查询当前用户的全部收货地址
    */</span>
   <span class="token annotation punctuation">@GetMapping</span><span class="token punctuation">(</span>value <span class="token operator">=</span> <span class="token string">&quot;/member/memberreceiveaddress/{memberId}/address&quot;</span><span class="token punctuation">)</span>
   <span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">MemberAddressVo</span><span class="token punctuation">&gt;</span></span> <span class="token function">getAddress</span><span class="token punctuation">(</span><span class="token annotation punctuation">@PathVariable</span><span class="token punctuation">(</span><span class="token string">&quot;memberId&quot;</span><span class="token punctuation">)</span> <span class="token class-name">Long</span> memberId<span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">MemberReceiveAddressEntity</span><span class="token punctuation">&gt;</span></span> <span class="token function">getAddress</span><span class="token punctuation">(</span><span class="token class-name">Long</span> memberId<span class="token punctuation">)</span><span class="token punctuation">{</span>
   <span class="token keyword">return</span> <span class="token keyword">this</span><span class="token punctuation">.</span>baseMapper<span class="token punctuation">.</span><span class="token function">selectList</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">QueryWrapper</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">MemberReceiveAddressEntity</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">eq</span><span class="token punctuation">(</span><span class="token string">&quot;member_id&quot;</span><span class="token punctuation">,</span> memberId<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_4-3、cartfeignservice-远程查询购物车所有选中的购物项" tabindex="-1"><a class="header-anchor" href="#_4-3、cartfeignservice-远程查询购物车所有选中的购物项" aria-hidden="true">#</a> 4.3、cartFeignService 远程查询购物车所有选中的购物项</h3><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token annotation punctuation">@FeignClient</span><span class="token punctuation">(</span><span class="token string">&quot;yumall-cart&quot;</span><span class="token punctuation">)</span>
<span class="token keyword">public</span> <span class="token keyword">interface</span> <span class="token class-name">CartFeignService</span> <span class="token punctuation">{</span>
    <span class="token doc-comment comment">/**
     * 查询当前用户购物车选中的商品项
     * <span class="token keyword">@return</span>
     */</span>
    <span class="token annotation punctuation">@GetMapping</span><span class="token punctuation">(</span>value <span class="token operator">=</span> <span class="token string">&quot;/currentUserCartItems&quot;</span><span class="token punctuation">)</span>
    <span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">OrderItemVo</span><span class="token punctuation">&gt;</span></span> <span class="token function">getCurrentCartItems</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_4-4、wmsfeignservice-远程查询商品库存信息" tabindex="-1"><a class="header-anchor" href="#_4-4、wmsfeignservice-远程查询商品库存信息" aria-hidden="true">#</a> 4.4、wmsFeignService 远程查询商品库存信息</h3><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code> <span class="token annotation punctuation">@PostMapping</span><span class="token punctuation">(</span>value <span class="token operator">=</span> <span class="token string">&quot;/ware/waresku/hasStock&quot;</span><span class="token punctuation">)</span>
    <span class="token class-name">R</span> <span class="token function">getSkuHasStock</span><span class="token punctuation">(</span><span class="token annotation punctuation">@RequestBody</span> <span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Long</span><span class="token punctuation">&gt;</span></span> skuIds<span class="token punctuation">)</span><span class="token punctuation">;</span>

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_4-5、memberresponsevo-查询用户积分" tabindex="-1"><a class="header-anchor" href="#_4-5、memberresponsevo-查询用户积分" aria-hidden="true">#</a> 4.5、memberResponseVo 查询用户积分</h3><h3 id="_4-6、为用户设置一个token-三十分钟过期时间-存在redis-防重令牌-防止表单重复提交" tabindex="-1"><a class="header-anchor" href="#_4-6、为用户设置一个token-三十分钟过期时间-存在redis-防重令牌-防止表单重复提交" aria-hidden="true">#</a> 4.6、为用户设置一个token，三十分钟过期时间（存在redis）防重令牌(防止表单重复提交)</h3><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token class-name">String</span> token <span class="token operator">=</span> <span class="token constant">UUID</span><span class="token punctuation">.</span><span class="token function">randomUUID</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">replace</span><span class="token punctuation">(</span><span class="token string">&quot;-&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token class-name">RedisUtils<span class="token punctuation">.</span>String2</span><span class="token punctuation">.</span><span class="token function">set</span><span class="token punctuation">(</span><span class="token constant">USER_ORDER_TOKEN_PREFIX</span><span class="token operator">+</span>memberResponseVo<span class="token punctuation">.</span><span class="token function">getId</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> token<span class="token punctuation">,</span> <span class="token number">60</span><span class="token operator">*</span><span class="token number">30</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
      confirmVo<span class="token punctuation">.</span><span class="token function">setOrderToken</span><span class="token punctuation">(</span>token<span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_4-7、结算确认页渲染" tabindex="-1"><a class="header-anchor" href="#_4-7、结算确认页渲染" aria-hidden="true">#</a> 4.7、结算确认页渲染</h3><h2 id="_5、确认页模拟运费信息" tabindex="-1"><a class="header-anchor" href="#_5、确认页模拟运费信息" aria-hidden="true">#</a> 5、确认页模拟运费信息</h2>`,25),an={href:"http://yumall.com/api/ware/wareinfo/fare?addrId=120120",target:"_blank",rel:"noopener noreferrer"},tn=p(`<div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code> <span class="token keyword">public</span> <span class="token class-name">FareVo</span> <span class="token function">getFare</span><span class="token punctuation">(</span><span class="token class-name">Long</span> addrId<span class="token punctuation">)</span><span class="token punctuation">{</span>
   <span class="token class-name">FareVo</span> fareVo <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">FareVo</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
   <span class="token comment">//收获地址的详细信息</span>
   <span class="token class-name">R</span> addrInfo <span class="token operator">=</span> memberFeignService<span class="token punctuation">.</span><span class="token function">info</span><span class="token punctuation">(</span>addrId<span class="token punctuation">)</span><span class="token punctuation">;</span>
   <span class="token class-name">MemberAddressVo</span> memberAddressVo <span class="token operator">=</span> addrInfo<span class="token punctuation">.</span><span class="token function">getData</span><span class="token punctuation">(</span><span class="token string">&quot;memberReceiveAddress&quot;</span><span class="token punctuation">,</span> <span class="token keyword">new</span> <span class="token class-name">TypeReference</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">MemberAddressVo</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
   <span class="token keyword">if</span><span class="token punctuation">(</span>memberAddressVo <span class="token operator">!=</span> <span class="token keyword">null</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
      <span class="token class-name">String</span> phone <span class="token operator">=</span> memberAddressVo<span class="token punctuation">.</span><span class="token function">getPhone</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token comment">//截取用户手机号码最后一位作为我们的运费计算</span>
      <span class="token comment">//1558022051</span>
      <span class="token class-name">String</span> fare <span class="token operator">=</span> phone<span class="token punctuation">.</span><span class="token function">substring</span><span class="token punctuation">(</span>phone<span class="token punctuation">.</span><span class="token function">length</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">-</span><span class="token number">10</span><span class="token punctuation">,</span> phone<span class="token punctuation">.</span><span class="token function">length</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">-</span><span class="token number">8</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token class-name">BigDecimal</span> bigDecimal <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">BigDecimal</span><span class="token punctuation">(</span>fare<span class="token punctuation">)</span><span class="token punctuation">;</span>
      fareVo<span class="token punctuation">.</span><span class="token function">setFare</span><span class="token punctuation">(</span>bigDecimal<span class="token punctuation">)</span><span class="token punctuation">;</span>
      fareVo<span class="token punctuation">.</span><span class="token function">setAddress</span><span class="token punctuation">(</span>memberAddressVo<span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token keyword">return</span> fareVo<span class="token punctuation">;</span>
   <span class="token punctuation">}</span>
   <span class="token keyword">return</span> <span class="token keyword">null</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="_6、幂等性" tabindex="-1"><a class="header-anchor" href="#_6、幂等性" aria-hidden="true">#</a> 6、幂等性</h2><p><img src="`+x+'" alt="image-20211004192550633"></p><h3 id="_6-1、概念" tabindex="-1"><a class="header-anchor" href="#_6-1、概念" aria-hidden="true">#</a> 6.1、概念</h3><p>接口幂等性就是用户对于同一操作发起的一次请求或者多次请求的结果是一致的，不会因 为多次点击而产生了副作用:比如说支付场景，用户购买了商品支付扣款成功，但是返回结 果的时候网络异常，此时钱已经扣了，用户再次点击按钮，此时会进行第二次扣款，返回结 果成功，用户查询余额返发现多扣钱了，流水记录也变成了两条. . .，这就没有保证接口 的幂等性。</p><h3 id="_6-2、使用场景" tabindex="-1"><a class="header-anchor" href="#_6-2、使用场景" aria-hidden="true">#</a> 6.2、使用场景</h3><p>用户多次点击按钮 用户页面回退再次提交 微服务互相调用，由于网络问题，导致请求失败。feign 触发重试机制 其他业务情况</p><h3 id="_6-3、解决方案" tabindex="-1"><a class="header-anchor" href="#_6-3、解决方案" aria-hidden="true">#</a> 6.3、解决方案</h3><h2 id="_7、订单提交-submitorder" tabindex="-1"><a class="header-anchor" href="#_7、订单提交-submitorder" aria-hidden="true">#</a> 7、订单提交 submitOrder</h2><p><img src="'+T+`" alt="image-20211004194440103"></p><h3 id="备注-redis原子验证令牌、构造订单数据、订单验证价格、保存订单数据、库存锁定-只要有异常-回滚订单数据、订单创建成功-发送消息给mq、删除购物车里的数据" tabindex="-1"><a class="header-anchor" href="#备注-redis原子验证令牌、构造订单数据、订单验证价格、保存订单数据、库存锁定-只要有异常-回滚订单数据、订单创建成功-发送消息给mq、删除购物车里的数据" aria-hidden="true">#</a> 备注：redis原子验证令牌、构造订单数据、订单验证价格、保存订单数据、库存锁定，只要有异常，回滚订单数据、订单创建成功，发送消息给MQ、删除购物车里的数据</h3><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token class-name">SubmitOrderResponseVo</span> <span class="token function">submitOrder</span><span class="token punctuation">(</span><span class="token class-name">OrderSubmitVo</span> orderSubmitVo<span class="token punctuation">)</span><span class="token punctuation">{</span>
   confirmVoThreadLocal<span class="token punctuation">.</span><span class="token function">set</span><span class="token punctuation">(</span>orderSubmitVo<span class="token punctuation">)</span><span class="token punctuation">;</span>
   <span class="token class-name">SubmitOrderResponseVo</span> responseVo <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">SubmitOrderResponseVo</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
   <span class="token comment">//去创建、下订单、验令牌、验价格、锁定库存...</span>
   <span class="token comment">//获取当前用户登录的信息</span>
   <span class="token class-name">MemberResponseVo</span> memberResponseVo <span class="token operator">=</span> <span class="token class-name">LoginUserInterceptor</span><span class="token punctuation">.</span>loginUser<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
   responseVo<span class="token punctuation">.</span><span class="token function">setCode</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

   <span class="token comment">//1、验证令牌是否合法【令牌的对比和删除必须保证原子性】</span>
   <span class="token class-name">String</span> script <span class="token operator">=</span> <span class="token string">&quot;if redis.call(&#39;get&#39;, KEYS[1]) == ARGV[1] then return redis.call(&#39;del&#39;, KEYS[1]) else return 0 end&quot;</span><span class="token punctuation">;</span>
   <span class="token class-name">String</span> orderToken <span class="token operator">=</span> orderSubmitVo<span class="token punctuation">.</span><span class="token function">getOrderToken</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

   <span class="token comment">//通过lure脚本原子验证令牌和删除令牌</span>
   <span class="token class-name">Long</span> result <span class="token operator">=</span> redisTemplate<span class="token punctuation">.</span><span class="token function">execute</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">DefaultRedisScript</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Long</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span>script<span class="token punctuation">,</span> <span class="token class-name">Long</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
         <span class="token class-name">Arrays</span><span class="token punctuation">.</span><span class="token function">asList</span><span class="token punctuation">(</span><span class="token constant">USER_ORDER_TOKEN_PREFIX</span><span class="token operator">+</span>memberResponseVo<span class="token punctuation">.</span><span class="token function">getId</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">,</span> orderToken<span class="token punctuation">)</span><span class="token punctuation">;</span>

   <span class="token keyword">if</span><span class="token punctuation">(</span>result <span class="token operator">==</span> <span class="token number">0L</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
      <span class="token comment">//令牌验证失败</span>
      responseVo<span class="token punctuation">.</span><span class="token function">setCode</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token keyword">return</span> responseVo<span class="token punctuation">;</span>
   <span class="token punctuation">}</span><span class="token keyword">else</span><span class="token punctuation">{</span>
      <span class="token comment">//令牌验证成功</span>
      <span class="token comment">//1、创建订单、订单项等信息</span>
      <span class="token class-name">OrderCreateTo</span> order <span class="token operator">=</span> <span class="token function">createOrder</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token comment">//2、验证价格</span>
      <span class="token class-name">BigDecimal</span> payAmount <span class="token operator">=</span> order<span class="token punctuation">.</span><span class="token function">getOrder</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getPayAmount</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token class-name">BigDecimal</span> payPrice <span class="token operator">=</span> orderSubmitVo<span class="token punctuation">.</span><span class="token function">getPayPrice</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token class-name">Math</span><span class="token punctuation">.</span><span class="token function">abs</span><span class="token punctuation">(</span>payAmount<span class="token punctuation">.</span><span class="token function">subtract</span><span class="token punctuation">(</span>payPrice<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">doubleValue</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token operator">&lt;</span> <span class="token number">0.01</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
         <span class="token comment">//金额对比</span>
         <span class="token comment">//3、保存订单</span>
         <span class="token function">saveOrder</span><span class="token punctuation">(</span>order<span class="token punctuation">)</span><span class="token punctuation">;</span>
         <span class="token comment">//4、库存锁定,只要有异常，回滚订单数据</span>
         <span class="token comment">//订单号、所有订单项信息(skuId,skuNum,skuName)</span>
         <span class="token class-name">WareSkuLockVo</span> lockVo <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">WareSkuLockVo</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
         lockVo<span class="token punctuation">.</span><span class="token function">setOrderSn</span><span class="token punctuation">(</span>order<span class="token punctuation">.</span><span class="token function">getOrder</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getOrderSn</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
         <span class="token comment">//获取出要锁定的商品数据信息</span>
         <span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">OrderItemVo</span><span class="token punctuation">&gt;</span></span> orderItemVos <span class="token operator">=</span> order<span class="token punctuation">.</span><span class="token function">getOrderItems</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">stream</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">map</span><span class="token punctuation">(</span><span class="token punctuation">(</span>item<span class="token punctuation">)</span> <span class="token operator">-&gt;</span> <span class="token punctuation">{</span>
            <span class="token class-name">OrderItemVo</span> orderItemVo <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">OrderItemVo</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token keyword">return</span> orderItemVo<span class="token punctuation">;</span>
         <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">collect</span><span class="token punctuation">(</span><span class="token class-name">Collectors</span><span class="token punctuation">.</span><span class="token function">toList</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
         lockVo<span class="token punctuation">.</span><span class="token function">setLocks</span><span class="token punctuation">(</span>orderItemVos<span class="token punctuation">)</span><span class="token punctuation">;</span>
         <span class="token comment">// 调用远程锁定库存的方法</span>
         <span class="token comment">// 出现的问题：扣减库存成功了，但是由于网络原因超时，出现异常，导致订单事务回滚，库存事务不回滚(解决方案：seata)</span>
         <span class="token comment">//为了保证高并发，不推荐使用seata，因为是加锁，并行化，提升不了效率,可以发消息给库存服务</span>
         <span class="token class-name">R</span> r <span class="token operator">=</span> wmsFeignService<span class="token punctuation">.</span><span class="token function">orderLockStock</span><span class="token punctuation">(</span>lockVo<span class="token punctuation">)</span><span class="token punctuation">;</span>
         <span class="token keyword">if</span><span class="token punctuation">(</span>r<span class="token punctuation">.</span><span class="token function">getCode</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">==</span> <span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
            <span class="token comment">//锁定成功</span>
            responseVo<span class="token punctuation">.</span><span class="token function">setOrder</span><span class="token punctuation">(</span>order<span class="token punctuation">.</span><span class="token function">getOrder</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token comment">// int i = 10/0;</span>
            <span class="token comment">//订单创建成功，发送消息给MQ</span>
            rabbitTemplate<span class="token punctuation">.</span><span class="token function">convertAndSend</span><span class="token punctuation">(</span><span class="token string">&quot;order-event-exchange&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;order.create.order&quot;</span><span class="token punctuation">,</span> order<span class="token punctuation">.</span><span class="token function">getOrder</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token comment">//删除购物车里的数据</span>
            redisTemplate<span class="token punctuation">.</span><span class="token function">delete</span><span class="token punctuation">(</span><span class="token constant">CART_PREFIX</span><span class="token operator">+</span>memberResponseVo<span class="token punctuation">.</span><span class="token function">getId</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token keyword">return</span> responseVo<span class="token punctuation">;</span>
         <span class="token punctuation">}</span><span class="token keyword">else</span><span class="token punctuation">{</span>
            <span class="token comment">//锁定失败</span>
            <span class="token class-name">String</span> msg <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">)</span> r<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token string">&quot;msg&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token keyword">throw</span> <span class="token keyword">new</span> <span class="token class-name">NoStockException</span><span class="token punctuation">(</span>msg<span class="token punctuation">)</span><span class="token punctuation">;</span> 
         <span class="token punctuation">}</span>
      <span class="token punctuation">}</span><span class="token keyword">else</span><span class="token punctuation">{</span>
         responseVo<span class="token punctuation">.</span><span class="token function">setCode</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
         <span class="token keyword">return</span> responseVo<span class="token punctuation">;</span>
      <span class="token punctuation">}</span>
   <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_7-1、提交流程-createorder、saveorder" tabindex="-1"><a class="header-anchor" href="#_7-1、提交流程-createorder、saveorder" aria-hidden="true">#</a> 7.1、提交流程 createOrder、saveOrder</h3><p><img src="`+E+'" alt="image-20211004212537610"></p><p><img src="'+C+`" alt="image-20211004212605590"></p><h3 id="_7-2、库存锁" tabindex="-1"><a class="header-anchor" href="#_7-2、库存锁" aria-hidden="true">#</a> 7.2、库存锁</h3><p><code>wmsFeignService.orderLockStock()</code></p><div class="language-ABAP line-numbers-mode" data-ext="ABAP"><pre class="language-ABAP"><code>库存解锁的场景
1）、下订单成功，订单过期没有支付被系统自动取消或者被用户手动取消，都要解锁库存
2）、下订单成功，库存锁定成功，接下来的业务调用失败，导致订单回滚。之前锁定的库存就要自动解锁
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><img src="`+j+`" alt=""></p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code> <span class="token keyword">public</span> <span class="token keyword">boolean</span> <span class="token function">orderLockStock</span><span class="token punctuation">(</span><span class="token class-name">WareSkuLockVo</span> vo<span class="token punctuation">)</span> <span class="token punctuation">{</span>
     
<span class="token comment">//告诉MQ库存锁定成功</span>
<span class="token class-name">StockLockedTo</span> lockedTo <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">StockLockedTo</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
lockedTo<span class="token punctuation">.</span><span class="token function">setId</span><span class="token punctuation">(</span>wareOrderTaskEntity<span class="token punctuation">.</span><span class="token function">getId</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token class-name">StockDetailTo</span> detailTo <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">StockDetailTo</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token class-name">BeanUtils</span><span class="token punctuation">.</span><span class="token function">copyProperties</span><span class="token punctuation">(</span>taskDetailEntity<span class="token punctuation">,</span> detailTo<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">//只发id不行，防止回滚以后找不到数据   </span>
lockedTo<span class="token punctuation">.</span><span class="token function">setDetailTo</span><span class="token punctuation">(</span>detailTo<span class="token punctuation">)</span><span class="token punctuation">;</span>
rabbitTemplate<span class="token punctuation">.</span><span class="token function">convertAndSend</span><span class="token punctuation">(</span><span class="token string">&quot;stock-event-exchange&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;stock.locked&quot;</span><span class="token punctuation">,</span> lockedTo<span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_7-3、使用-mq-延迟队列" tabindex="-1"><a class="header-anchor" href="#_7-3、使用-mq-延迟队列" aria-hidden="true">#</a> 7.3、使用 MQ 延迟队列</h3><p><a href="#%E5%88%86%E5%B8%83%E5%BC%8F%E4%BA%8B%E7%89%A9">前去分布式事物</a></p><p><a href="#MQ%E5%BB%B6%E8%BF%9F%E9%98%9F%E5%88%97">前去MQ延迟队列</a></p><h3 id="订单释放-库存解锁" tabindex="-1"><a class="header-anchor" href="#订单释放-库存解锁" aria-hidden="true">#</a> - - 订单释放&amp;库存解锁</h3><p><img src="`+V+`" alt=""></p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token keyword">package</span> <span class="token namespace">com<span class="token punctuation">.</span>kong<span class="token punctuation">.</span>yumall<span class="token punctuation">.</span>order<span class="token punctuation">.</span>config</span><span class="token punctuation">;</span><span class="token class-name">MyOrderMQConfig</span>
<span class="token doc-comment comment">/**
 * 订单释放直接和库存释放进行绑定
 *
 * <span class="token keyword">@return</span>
 */</span>
<span class="token annotation punctuation">@Bean</span>
<span class="token keyword">public</span> <span class="token class-name">Binding</span> <span class="token function">orderReleaseOtherBinding</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token class-name">Binding</span><span class="token punctuation">(</span><span class="token string">&quot;stock.release.stock.queue&quot;</span><span class="token punctuation">,</span>
            <span class="token class-name">Binding<span class="token punctuation">.</span>DestinationType</span><span class="token punctuation">.</span><span class="token constant">QUEUE</span><span class="token punctuation">,</span>
            <span class="token string">&quot;order-event-exchange&quot;</span><span class="token punctuation">,</span>
            <span class="token string">&quot;order.release.other.#&quot;</span><span class="token punctuation">,</span>
            <span class="token keyword">null</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_7-4、自动解锁库存" tabindex="-1"><a class="header-anchor" href="#_7-4、自动解锁库存" aria-hidden="true">#</a> 7.4、自动解锁库存</h3><p>yumall/ware/listener/StockReleaseListener.java</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token annotation punctuation">@Slf4j</span>
<span class="token annotation punctuation">@RabbitListener</span><span class="token punctuation">(</span>queues <span class="token operator">=</span> <span class="token string">&quot;stock.release.stock.queue&quot;</span><span class="token punctuation">)</span>
<span class="token annotation punctuation">@Service</span>
<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">StockReleaseListener</span> <span class="token punctuation">{</span>
    <span class="token annotation punctuation">@Autowired</span>
    <span class="token keyword">private</span> <span class="token class-name">WareSkuService</span> wareSkuService<span class="token punctuation">;</span>
    <span class="token doc-comment comment">/**
     * 1、库存自动解锁
     *  下订单成功，库存锁定成功，接下来的业务调用失败，导致订单回滚。之前锁定的库存就要自动解锁
     *  2、订单失败
     *      库存锁定失败
     *   只要解锁库存的消息失败，一定要告诉服务解锁失败
     * <span class="token keyword">@param</span> <span class="token parameter">to</span>
     * <span class="token keyword">@param</span> <span class="token parameter">message</span>
     * <span class="token keyword">@param</span> <span class="token parameter">channel</span>
     * <span class="token keyword">@throws</span> <span class="token reference"><span class="token class-name">IOException</span></span>
     */</span>
    <span class="token annotation punctuation">@RabbitHandler</span>
    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">handleStockLockedRelease</span><span class="token punctuation">(</span><span class="token class-name">StockLockedTo</span> <span class="token keyword">to</span><span class="token punctuation">,</span> <span class="token class-name">Message</span> message<span class="token punctuation">,</span> <span class="token class-name">Channel</span> channel<span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">IOException</span> <span class="token punctuation">{</span>
        log<span class="token punctuation">.</span><span class="token function">info</span><span class="token punctuation">(</span><span class="token string">&quot;******收到解锁库存的信息******&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">try</span> <span class="token punctuation">{</span>
            <span class="token comment">//当前消息是否被第二次及以后（重新）派发过来了</span>
            <span class="token comment">// Boolean redelivered = message.getMessageProperties().getRedelivered();</span>
            <span class="token comment">//解锁库存</span>
            wareSkuService<span class="token punctuation">.</span><span class="token function">unlockStock</span><span class="token punctuation">(</span><span class="token keyword">to</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token comment">// 手动删除消息</span>
            channel<span class="token punctuation">.</span><span class="token function">basicAck</span><span class="token punctuation">(</span>message<span class="token punctuation">.</span><span class="token function">getMessageProperties</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getDeliveryTag</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token boolean">false</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">Exception</span> e<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token comment">// 解锁失败 将消息重新放回队列，让别人消费</span>
            channel<span class="token punctuation">.</span><span class="token function">basicReject</span><span class="token punctuation">(</span>message<span class="token punctuation">.</span><span class="token function">getMessageProperties</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getDeliveryTag</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token boolean">true</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
    <span class="token doc-comment comment">/**
     * 订单关闭（取消）-自动解锁
     * <span class="token keyword">@param</span> <span class="token parameter">orderTo</span>
     * <span class="token keyword">@param</span> <span class="token parameter">message</span>
     * <span class="token keyword">@param</span> <span class="token parameter">channel</span>
     * <span class="token keyword">@throws</span> <span class="token reference"><span class="token class-name">IOException</span></span>
     */</span>
    <span class="token annotation punctuation">@RabbitHandler</span>
    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">handleOrderCloseRelease</span><span class="token punctuation">(</span><span class="token class-name">OrderTo</span> orderTo<span class="token punctuation">,</span> <span class="token class-name">Message</span> message<span class="token punctuation">,</span> <span class="token class-name">Channel</span> channel<span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">IOException</span> <span class="token punctuation">{</span>
        log<span class="token punctuation">.</span><span class="token function">info</span><span class="token punctuation">(</span><span class="token string">&quot;******收到订单关闭，准备解锁库存的信息******&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">try</span> <span class="token punctuation">{</span>
            wareSkuService<span class="token punctuation">.</span><span class="token function">unlockOrder</span><span class="token punctuation">(</span>orderTo<span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token comment">// 手动删除消息</span>
            channel<span class="token punctuation">.</span><span class="token function">basicAck</span><span class="token punctuation">(</span>message<span class="token punctuation">.</span><span class="token function">getMessageProperties</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getDeliveryTag</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token boolean">false</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">Exception</span> e<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token comment">// 解锁失败 将消息重新放回队列，让别人消费</span>
            channel<span class="token punctuation">.</span><span class="token function">basicReject</span><span class="token punctuation">(</span>message<span class="token punctuation">.</span><span class="token function">getMessageProperties</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getDeliveryTag</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token boolean">true</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token annotation punctuation">@RabbitListener</span><span class="token punctuation">(</span>queues <span class="token operator">=</span> <span class="token string">&quot;stock.release.stock.queue&quot;</span><span class="token punctuation">)</span>
<span class="token annotation punctuation">@Service</span><span class="token punctuation">(</span><span class="token string">&quot;wareSkuService&quot;</span><span class="token punctuation">)</span>
<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">WareSkuServiceImpl</span>
    
     <span class="token annotation punctuation">@Autowired</span>
    <span class="token keyword">private</span> <span class="token class-name">RabbitTemplate</span> rabbitTemplate<span class="token punctuation">;</span>

<span class="token doc-comment comment">/**
     * 解锁库存
     * <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span><span class="token punctuation">&gt;</span></span>
     * 1、查询数据库关于这个订单锁定库存信息<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span><span class="token punctuation">&gt;</span></span>
     * ---有：证明库存锁定成功了<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span><span class="token punctuation">&gt;</span></span>
     * ------解锁：订单状况<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span><span class="token punctuation">&gt;</span></span>
     * ---------1、没有这个订单，必须解锁库存<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span><span class="token punctuation">&gt;</span></span>
     * ---------2、有这个订单，不一定解锁库存<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span><span class="token punctuation">&gt;</span></span>
     * ------------订单状态：已取消：解锁库存<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span><span class="token punctuation">&gt;</span></span>
     * ---------------------已支付：不能解锁库存<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span><span class="token punctuation">&gt;</span></span>
     * ---没有<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span><span class="token punctuation">&gt;</span></span>
     *     库存锁定失败了，库存回滚了。这种情况无需解锁
     * <span class="token keyword">@param</span> <span class="token parameter">to</span>
     */</span>
    <span class="token annotation punctuation">@Override</span>
    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">unlockStock</span><span class="token punctuation">(</span><span class="token class-name">StockLockedTo</span> <span class="token keyword">to</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token comment">//库存工作单的id</span>
        <span class="token class-name">StockDetailTo</span> detail <span class="token operator">=</span> <span class="token keyword">to</span><span class="token punctuation">.</span><span class="token function">getDetailTo</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">Long</span> detailId <span class="token operator">=</span> detail<span class="token punctuation">.</span><span class="token function">getId</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

        <span class="token class-name">WareOrderTaskDetailEntity</span> taskDetailInfo <span class="token operator">=</span> wareOrderTaskDetailService<span class="token punctuation">.</span><span class="token function">getById</span><span class="token punctuation">(</span>detailId<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>taskDetailInfo <span class="token operator">!=</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token comment">//查出wms_ware_order_task工作单的信息</span>
            <span class="token class-name">Long</span> id <span class="token operator">=</span> <span class="token keyword">to</span><span class="token punctuation">.</span><span class="token function">getId</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token class-name">WareOrderTaskEntity</span> orderTaskInfo <span class="token operator">=</span> wareOrderTaskService<span class="token punctuation">.</span><span class="token function">getById</span><span class="token punctuation">(</span>id<span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token comment">//获取订单号查询订单状态</span>
            <span class="token class-name">String</span> orderSn <span class="token operator">=</span> orderTaskInfo<span class="token punctuation">.</span><span class="token function">getOrderSn</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token comment">//远程查询订单信息</span>
            <span class="token class-name">R</span> orderData <span class="token operator">=</span> orderFeignService<span class="token punctuation">.</span><span class="token function">getOrderStatus</span><span class="token punctuation">(</span>orderSn<span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token keyword">if</span> <span class="token punctuation">(</span>orderData<span class="token punctuation">.</span><span class="token function">getCode</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">==</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                <span class="token comment">//订单数据返回成功</span>
                <span class="token class-name">OrderVo</span> orderInfo <span class="token operator">=</span> orderData<span class="token punctuation">.</span><span class="token function">getData</span><span class="token punctuation">(</span><span class="token string">&quot;data&quot;</span><span class="token punctuation">,</span> <span class="token keyword">new</span> <span class="token class-name">TypeReference</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">OrderVo</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token comment">//判断订单状态是否已取消或者支付或者订单不存在</span>
                <span class="token keyword">if</span> <span class="token punctuation">(</span>orderInfo <span class="token operator">==</span> <span class="token keyword">null</span> <span class="token operator">||</span> orderInfo<span class="token punctuation">.</span><span class="token function">getStatus</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">==</span> <span class="token number">4</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                    <span class="token comment">//订单已被取消，才能解锁库存</span>
                    <span class="token keyword">if</span> <span class="token punctuation">(</span>taskDetailInfo<span class="token punctuation">.</span><span class="token function">getLockStatus</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">==</span> <span class="token number">1</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                        <span class="token comment">//当前库存工作单详情状态1，已锁定，但是未解锁才可以解锁</span>
                        <span class="token function">unLockStock</span><span class="token punctuation">(</span>detail<span class="token punctuation">.</span><span class="token function">getSkuId</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> detail<span class="token punctuation">.</span><span class="token function">getWareId</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> detail<span class="token punctuation">.</span><span class="token function">getSkuNum</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> detailId<span class="token punctuation">)</span><span class="token punctuation">;</span>
                    <span class="token punctuation">}</span>
                <span class="token punctuation">}</span>
            <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
                <span class="token comment">//消息拒绝以后重新放在队列里面，让别人继续消费解锁</span>
                <span class="token comment">//远程调用服务失败</span>
                <span class="token keyword">throw</span> <span class="token keyword">new</span> <span class="token class-name">RuntimeException</span><span class="token punctuation">(</span><span class="token string">&quot;远程调用服务失败&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
        <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
            <span class="token comment">//无需解锁</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token doc-comment comment">/**
 * 解锁库存的方法
 *
 * <span class="token keyword">@param</span> <span class="token parameter">skuId</span>
 * <span class="token keyword">@param</span> <span class="token parameter">wareId</span>
 * <span class="token keyword">@param</span> <span class="token parameter">num</span>
 * <span class="token keyword">@param</span> <span class="token parameter">taskDetailId</span>
 */</span>
<span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">unLockStock</span><span class="token punctuation">(</span><span class="token class-name">Long</span> skuId<span class="token punctuation">,</span> <span class="token class-name">Long</span> wareId<span class="token punctuation">,</span> <span class="token class-name">Integer</span> num<span class="token punctuation">,</span> <span class="token class-name">Long</span> taskDetailId<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token comment">//库存解锁</span>
    wareSkuDao<span class="token punctuation">.</span><span class="token function">unLockStock</span><span class="token punctuation">(</span>skuId<span class="token punctuation">,</span> wareId<span class="token punctuation">,</span> num<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token comment">//更新工作单的状态</span>
    <span class="token class-name">WareOrderTaskDetailEntity</span> taskDetailEntity <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">WareOrderTaskDetailEntity</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    taskDetailEntity<span class="token punctuation">.</span><span class="token function">setId</span><span class="token punctuation">(</span>taskDetailId<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token comment">//变为已解锁</span>
    taskDetailEntity<span class="token punctuation">.</span><span class="token function">setLockStatus</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    wareOrderTaskDetailService<span class="token punctuation">.</span><span class="token function">updateById</span><span class="token punctuation">(</span>taskDetailEntity<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_7-5、自动解锁订单" tabindex="-1"><a class="header-anchor" href="#_7-5、自动解锁订单" aria-hidden="true">#</a> 7.5、自动解锁订单</h3><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code>    <span class="token doc-comment comment">/**
     * 解锁订单
     * <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span><span class="token punctuation">&gt;</span></span>
     * 防止订单服务卡顿，导致订单状态消息一直改不了，库存优先到期，查订单状态新建，什么都不处理
     * 导致卡顿的订单，永远都不能解锁库存
     *
     * <span class="token keyword">@param</span> <span class="token parameter">orderTo</span>
     */</span>
    <span class="token annotation punctuation">@Transactional</span><span class="token punctuation">(</span>rollbackFor <span class="token operator">=</span> <span class="token class-name">Exception</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span>
    <span class="token annotation punctuation">@Override</span>
    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">unlockOrder</span><span class="token punctuation">(</span><span class="token class-name">OrderTo</span> orderTo<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token class-name">String</span> orderSn <span class="token operator">=</span> orderTo<span class="token punctuation">.</span><span class="token function">getOrderSn</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token comment">//查一下最新的库存解锁状态，防止重复解锁库存</span>
        <span class="token class-name">WareOrderTaskEntity</span> orderTaskEntity <span class="token operator">=</span> wareOrderTaskService<span class="token punctuation">.</span><span class="token function">getOrderTaskByOrderSn</span><span class="token punctuation">(</span>orderSn<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token comment">//按照工作单的id找到所有 没有解锁的库存，进行解锁</span>
        <span class="token class-name">Long</span> id <span class="token operator">=</span> orderTaskEntity<span class="token punctuation">.</span><span class="token function">getId</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">WareOrderTaskDetailEntity</span><span class="token punctuation">&gt;</span></span> list <span class="token operator">=</span> wareOrderTaskDetailService<span class="token punctuation">.</span><span class="token function">list</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">QueryWrapper</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">WareOrderTaskDetailEntity</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token punctuation">)</span>
                <span class="token punctuation">.</span><span class="token function">eq</span><span class="token punctuation">(</span><span class="token string">&quot;task_id&quot;</span><span class="token punctuation">,</span> id<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">eq</span><span class="token punctuation">(</span><span class="token string">&quot;lock_status&quot;</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token class-name">WareOrderTaskDetailEntity</span> taskDetailEntity <span class="token operator">:</span> list<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token function">unLockStock</span><span class="token punctuation">(</span>taskDetailEntity<span class="token punctuation">.</span><span class="token function">getSkuId</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
                    taskDetailEntity<span class="token punctuation">.</span><span class="token function">getWareId</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
                    taskDetailEntity<span class="token punctuation">.</span><span class="token function">getSkuNum</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
                    taskDetailEntity<span class="token punctuation">.</span><span class="token function">getId</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_7-6、定时关闭订单" tabindex="-1"><a class="header-anchor" href="#_7-6、定时关闭订单" aria-hidden="true">#</a> 7.6、定时关闭订单</h3><p><a href="#%E5%BB%B6%E8%BF%9F%E9%98%9F%E5%88%97%E5%AE%9E%E7%8E%B0">设计流程：前去 延迟队列实现</a></p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token annotation punctuation">@Slf4j</span>
<span class="token annotation punctuation">@RabbitListener</span><span class="token punctuation">(</span>queues <span class="token operator">=</span> <span class="token string">&quot;order.release.order.queue&quot;</span><span class="token punctuation">)</span>
<span class="token annotation punctuation">@Service</span>
<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">OrderCloseListener</span><span class="token punctuation">{</span>

   <span class="token annotation punctuation">@Autowired</span>
   <span class="token keyword">private</span> <span class="token class-name">OrderService</span> orderService<span class="token punctuation">;</span>

   <span class="token annotation punctuation">@RabbitHandler</span>
   <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">listener</span><span class="token punctuation">(</span><span class="token class-name">OrderEntity</span> orderEntity<span class="token punctuation">,</span> <span class="token class-name">Channel</span> channel<span class="token punctuation">,</span> <span class="token class-name">Message</span> message<span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">IOException</span><span class="token punctuation">{</span>
      log<span class="token punctuation">.</span><span class="token function">info</span><span class="token punctuation">(</span><span class="token string">&quot;收到过期的订单信息，准备关闭订单:{}&quot;</span><span class="token punctuation">,</span>orderEntity<span class="token punctuation">.</span><span class="token function">getOrderSn</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token keyword">try</span><span class="token punctuation">{</span>
         orderService<span class="token punctuation">.</span><span class="token function">closeOrder</span><span class="token punctuation">(</span>orderEntity<span class="token punctuation">)</span><span class="token punctuation">;</span>
         channel<span class="token punctuation">.</span><span class="token function">basicAck</span><span class="token punctuation">(</span>message<span class="token punctuation">.</span><span class="token function">getMessageProperties</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getDeliveryTag</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token boolean">false</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token punctuation">}</span><span class="token keyword">catch</span><span class="token punctuation">(</span><span class="token class-name">Exception</span> e<span class="token punctuation">)</span><span class="token punctuation">{</span>
         channel<span class="token punctuation">.</span><span class="token function">basicReject</span><span class="token punctuation">(</span>message<span class="token punctuation">.</span><span class="token function">getMessageProperties</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getDeliveryTag</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token boolean">true</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">closeOrder</span><span class="token punctuation">(</span><span class="token class-name">OrderEntity</span> orderEntity<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token comment">//关闭订单之前先查询一下数据库，判断此订单状态是否已支付</span>
    <span class="token class-name">OrderEntity</span> orderInfo <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">getOne</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">QueryWrapper</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">OrderEntity</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span>
            <span class="token function">eq</span><span class="token punctuation">(</span><span class="token string">&quot;order_sn&quot;</span><span class="token punctuation">,</span> orderEntity<span class="token punctuation">.</span><span class="token function">getOrderSn</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>orderInfo<span class="token punctuation">.</span><span class="token function">getStatus</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">equals</span><span class="token punctuation">(</span><span class="token class-name">OrderStatusEnum</span><span class="token punctuation">.</span><span class="token constant">CREATE_NEW</span><span class="token punctuation">.</span><span class="token function">getCode</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token comment">//代付款状态进行关单</span>
        <span class="token class-name">OrderEntity</span> orderUpdate <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">OrderEntity</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        orderUpdate<span class="token punctuation">.</span><span class="token function">setId</span><span class="token punctuation">(</span>orderInfo<span class="token punctuation">.</span><span class="token function">getId</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        orderUpdate<span class="token punctuation">.</span><span class="token function">setStatus</span><span class="token punctuation">(</span><span class="token class-name">OrderStatusEnum</span><span class="token punctuation">.</span><span class="token constant">CANCLED</span><span class="token punctuation">.</span><span class="token function">getCode</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">updateById</span><span class="token punctuation">(</span>orderUpdate<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token comment">// 发送消息给MQ</span>
        <span class="token class-name">OrderTo</span> orderTo <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">OrderTo</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">BeanUtils</span><span class="token punctuation">.</span><span class="token function">copyProperties</span><span class="token punctuation">(</span>orderInfo<span class="token punctuation">,</span> orderTo<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">try</span> <span class="token punctuation">{</span>
            <span class="token comment">//TODO 确保每个消息发送成功，给每个消息做好日志记录，(给数据库保存每一个详细信息)保存每个消息的详细信息</span>
            rabbitTemplate<span class="token punctuation">.</span><span class="token function">convertAndSend</span><span class="token punctuation">(</span><span class="token string">&quot;order-event-exchange&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;order.release.other&quot;</span><span class="token punctuation">,</span> orderTo<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">Exception</span> e<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token comment">//TODO 定期扫描数据库，重新发送失败的消息</span>
        <span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h1>十九、订单支付</h1><h1></h1><h2 id="_1、支付宝沙箱" tabindex="-1"><a class="header-anchor" href="#_1、支付宝沙箱" aria-hidden="true">#</a> 1、支付宝沙箱</h2>`,40),pn={href:"https://open.alipay.com/platform/home.htm",target:"_blank",rel:"noopener noreferrer"},en={href:"https://opendocs.alipay.com/support/01razc",target:"_blank",rel:"noopener noreferrer"},on={href:"https://opendocs.alipay.com/open/270/106291/",target:"_blank",rel:"noopener noreferrer"},cn=p('<h2 id="_2、加密-对称加密" tabindex="-1"><a class="header-anchor" href="#_2、加密-对称加密" aria-hidden="true">#</a> 2、加密-对称加密</h2><p><img src="'+O+'" alt=""></p><h2 id="_3、加密-非对称加密" tabindex="-1"><a class="header-anchor" href="#_3、加密-非对称加密" aria-hidden="true">#</a> 3、加密-非对称加密</h2><p><img src="'+R+'" alt=""></p><h2 id="_4、签名" tabindex="-1"><a class="header-anchor" href="#_4、签名" aria-hidden="true">#</a> 4、签名</h2><p><img src="'+A+'" alt=""></p><h2 id="_5、内网穿透" tabindex="-1"><a class="header-anchor" href="#_5、内网穿透" aria-hidden="true">#</a> 5、内网穿透</h2>',7),ln={href:"https://natapp.cn/",target:"_blank",rel:"noopener noreferrer"},un=n("p",null,"2、续断:www.zhexi.tech",-1),kn={href:"https://www.oray.com/",target:"_blank",rel:"noopener noreferrer"},rn=p(`<h2 id="_6、整合支付宝-订单支付" tabindex="-1"><a class="header-anchor" href="#_6、整合支付宝-订单支付" aria-hidden="true">#</a> 6、整合支付宝-订单支付</h2><div class="language-xml line-numbers-mode" data-ext="xml"><pre class="language-xml"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">&gt;</span></span>com.alipay.sdk<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">&gt;</span></span>alipay-sdk-java<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>version</span><span class="token punctuation">&gt;</span></span>4.17.9.ALL<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>version</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token keyword">package</span> <span class="token namespace">com<span class="token punctuation">.</span>kong<span class="token punctuation">.</span>yumall<span class="token punctuation">.</span>order<span class="token punctuation">.</span>config</span><span class="token punctuation">;</span>

<span class="token annotation punctuation">@ConfigurationProperties</span><span class="token punctuation">(</span>prefix <span class="token operator">=</span> <span class="token string">&quot;alipay&quot;</span><span class="token punctuation">)</span>
<span class="token annotation punctuation">@Component</span>
<span class="token annotation punctuation">@Data</span>
<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">AlipayTemplate</span> <span class="token punctuation">{</span>

    <span class="token doc-comment comment">/**
     * 应用ID,您的APPID，收款账号既是您的APPID对应支付宝账号
     */</span>
    <span class="token keyword">public</span> <span class="token class-name">String</span> app_id<span class="token punctuation">;</span>

    <span class="token doc-comment comment">/**
     * 商户私钥，您的PKCS8格式RSA2私钥
     */</span>
    <span class="token keyword">public</span> <span class="token class-name">String</span> merchant_private_key<span class="token punctuation">;</span>

    <span class="token doc-comment comment">/**
     * 支付宝公钥,查看地址：https://openhome.alipay.com/platform/keyManage.htm 对应APPID下的支付宝公钥。
     */</span>
    <span class="token keyword">public</span> <span class="token class-name">String</span> alipay_public_key<span class="token punctuation">;</span>

    <span class="token doc-comment comment">/**
     * 服务器[异步通知]页面路径  需http://格式的完整路径，不能加?id=123这类自定义参数，必须外网可以正常访问
     * 支付宝会悄悄的给我们发送一个请求，告诉我们支付成功的信息
     */</span>
    <span class="token keyword">public</span> <span class="token class-name">String</span> notify_url<span class="token punctuation">;</span>

    <span class="token doc-comment comment">/**
     * 页面跳转同步通知页面路径 需http://格式的完整路径，不能加?id=123这类自定义参数，必须外网可以正常访问
     * 同步通知，支付成功，一般跳转到成功页
     */</span>
    <span class="token keyword">public</span> <span class="token class-name">String</span> return_url<span class="token punctuation">;</span>

    <span class="token doc-comment comment">/**
     * 签名方式
     */</span>
    <span class="token keyword">private</span> <span class="token class-name">String</span> sign_type<span class="token punctuation">;</span>

    <span class="token doc-comment comment">/**
     * 字符编码格式
     */</span>
    <span class="token keyword">private</span> <span class="token class-name">String</span> charset<span class="token punctuation">;</span>

    <span class="token doc-comment comment">/**
     * 订单超时时间
     */</span>
    <span class="token keyword">private</span> <span class="token class-name">String</span> timeout <span class="token operator">=</span> <span class="token string">&quot;1m&quot;</span><span class="token punctuation">;</span>

    <span class="token doc-comment comment">/**
     * 支付宝网关； https://openapi.alipaydev.com/gateway.do
     */</span>
    <span class="token keyword">public</span> <span class="token class-name">String</span> gatewayUrl<span class="token punctuation">;</span>

    <span class="token keyword">public</span> <span class="token class-name">String</span> <span class="token function">pay</span><span class="token punctuation">(</span><span class="token class-name">PayVo</span> vo<span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">AlipayApiException</span> <span class="token punctuation">{</span>

        <span class="token comment">//AlipayClient alipayClient = new DefaultAlipayClient(AlipayTemplate.gatewayUrl, AlipayTemplate.app_id, AlipayTemplate.merchant_private_key, &quot;json&quot;, AlipayTemplate.charset, AlipayTemplate.alipay_public_key, AlipayTemplate.sign_type);</span>
        <span class="token comment">//1、根据支付宝的配置生成一个支付客户端</span>
        <span class="token class-name">AlipayClient</span> alipayClient <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">DefaultAlipayClient</span><span class="token punctuation">(</span>gatewayUrl<span class="token punctuation">,</span>
                app_id<span class="token punctuation">,</span> merchant_private_key<span class="token punctuation">,</span> <span class="token string">&quot;json&quot;</span><span class="token punctuation">,</span>
                charset<span class="token punctuation">,</span> alipay_public_key<span class="token punctuation">,</span> sign_type<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token comment">//2、创建一个支付请求 //设置请求参数</span>
        <span class="token class-name">AlipayTradePagePayRequest</span> alipayRequest <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">AlipayTradePagePayRequest</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        alipayRequest<span class="token punctuation">.</span><span class="token function">setReturnUrl</span><span class="token punctuation">(</span>return_url<span class="token punctuation">)</span><span class="token punctuation">;</span>
        alipayRequest<span class="token punctuation">.</span><span class="token function">setNotifyUrl</span><span class="token punctuation">(</span>notify_url<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token comment">//商户订单号，商户网站订单系统中唯一订单号，必填</span>
        <span class="token class-name">String</span> out_trade_no <span class="token operator">=</span> vo<span class="token punctuation">.</span><span class="token function">getOut_trade_no</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token comment">//付款金额，必填</span>
        <span class="token class-name">String</span> total_amount <span class="token operator">=</span> vo<span class="token punctuation">.</span><span class="token function">getTotal_amount</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token comment">//订单名称，必填</span>
        <span class="token class-name">String</span> subject <span class="token operator">=</span> vo<span class="token punctuation">.</span><span class="token function">getSubject</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token comment">//商品描述，可空</span>
        <span class="token class-name">String</span> body <span class="token operator">=</span> vo<span class="token punctuation">.</span><span class="token function">getBody</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

        alipayRequest<span class="token punctuation">.</span><span class="token function">setBizContent</span><span class="token punctuation">(</span><span class="token string">&quot;{\\&quot;out_trade_no\\&quot;:\\&quot;&quot;</span> <span class="token operator">+</span> out_trade_no <span class="token operator">+</span> <span class="token string">&quot;\\&quot;,&quot;</span>
                <span class="token operator">+</span> <span class="token string">&quot;\\&quot;total_amount\\&quot;:\\&quot;&quot;</span> <span class="token operator">+</span> total_amount <span class="token operator">+</span> <span class="token string">&quot;\\&quot;,&quot;</span>
                <span class="token operator">+</span> <span class="token string">&quot;\\&quot;subject\\&quot;:\\&quot;&quot;</span> <span class="token operator">+</span> subject <span class="token operator">+</span> <span class="token string">&quot;\\&quot;,&quot;</span>
                <span class="token operator">+</span> <span class="token string">&quot;\\&quot;body\\&quot;:\\&quot;&quot;</span> <span class="token operator">+</span> body <span class="token operator">+</span> <span class="token string">&quot;\\&quot;,&quot;</span>
                <span class="token operator">+</span> <span class="token string">&quot;\\&quot;timeout_express\\&quot;:\\&quot;&quot;</span> <span class="token operator">+</span> timeout <span class="token operator">+</span> <span class="token string">&quot;\\&quot;,&quot;</span>
                <span class="token operator">+</span> <span class="token string">&quot;\\&quot;product_code\\&quot;:\\&quot;FAST_INSTANT_TRADE_PAY\\&quot;}&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">String</span> result <span class="token operator">=</span> alipayClient<span class="token punctuation">.</span><span class="token function">pageExecute</span><span class="token punctuation">(</span>alipayRequest<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getBody</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token comment">//会收到支付宝的响应，响应的是一个页面，只要浏览器显示这个页面，就会自动来到支付宝的收银台页面</span>
        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;支付宝的响应：&quot;</span> <span class="token operator">+</span> result<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">return</span> result<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-properties line-numbers-mode" data-ext="properties"><pre class="language-properties"><code><span class="token comment">#支付宝相关的配置</span>
<span class="token key attr-name">alipay.app_id</span><span class="token punctuation">=</span><span class="token value attr-value">2016102600766009</span>
<span class="token key attr-name">alipay.merchant_private_key</span><span class="token punctuation">=</span><span class="token value attr-value">MIIEvQIB</span>
<span class="token key attr-name">alipay.alipay_public_key</span><span class="token punctuation">=</span><span class="token value attr-value">MIIBIjANBgkqhkiG</span>
<span class="token key attr-name">alipay.notify_url</span><span class="token punctuation">=</span><span class="token value attr-value">http://hjl.mynatapp.cc/payed/notify</span>
<span class="token key attr-name">alipay.return_url</span><span class="token punctuation">=</span><span class="token value attr-value">http://member.yumall.com/memberOrder.html</span>
<span class="token key attr-name">alipay.sign_type</span><span class="token punctuation">=</span><span class="token value attr-value">RSA2</span>
<span class="token key attr-name">alipay.charset</span><span class="token punctuation">=</span><span class="token value attr-value">utf-8</span>
<span class="token key attr-name">alipay.gatewayUrl</span><span class="token punctuation">=</span><span class="token value attr-value">https://openapi.alipaydev.com/gateway.do</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token doc-comment comment">/**
 * 用户下单:支付宝支付
 * 1、让支付页让浏览器展示
 * 2、支付成功以后，跳转到用户的订单列表页
 * <span class="token keyword">@param</span> <span class="token parameter">orderSn</span>
 * <span class="token keyword">@return</span>
 * <span class="token keyword">@throws</span> <span class="token reference"><span class="token class-name">AlipayApiException</span></span>
 */</span>
<span class="token annotation punctuation">@ResponseBody</span>
<span class="token annotation punctuation">@GetMapping</span><span class="token punctuation">(</span>value <span class="token operator">=</span> <span class="token string">&quot;/aliPayOrder&quot;</span><span class="token punctuation">,</span>produces <span class="token operator">=</span> <span class="token string">&quot;text/html&quot;</span><span class="token punctuation">)</span>
<span class="token keyword">public</span> <span class="token class-name">String</span> <span class="token function">aliPayOrder</span><span class="token punctuation">(</span><span class="token annotation punctuation">@RequestParam</span><span class="token punctuation">(</span><span class="token string">&quot;orderSn&quot;</span><span class="token punctuation">)</span> <span class="token class-name">String</span> orderSn<span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">AlipayApiException</span> <span class="token punctuation">{</span>

    <span class="token class-name">PayVo</span> payVo <span class="token operator">=</span> orderService<span class="token punctuation">.</span><span class="token function">getOrderPay</span><span class="token punctuation">(</span>orderSn<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token class-name">String</span> pay <span class="token operator">=</span> alipayTemplate<span class="token punctuation">.</span><span class="token function">pay</span><span class="token punctuation">(</span>payVo<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>pay<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">return</span> pay<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token class-name">PayVo</span> <span class="token function">getOrderPay</span><span class="token punctuation">(</span><span class="token class-name">String</span> orderSn<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token class-name">PayVo</span> payVo <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">PayVo</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token class-name">OrderEntity</span> orderInfo <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">getOrderByOrderSn</span><span class="token punctuation">(</span>orderSn<span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token comment">//保留两位小数点，向上取值</span>
    <span class="token class-name">BigDecimal</span> payAmount <span class="token operator">=</span> orderInfo<span class="token punctuation">.</span><span class="token function">getPayAmount</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">setScale</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">,</span> <span class="token class-name">BigDecimal</span><span class="token punctuation">.</span><span class="token constant">ROUND_UP</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    payVo<span class="token punctuation">.</span><span class="token function">setTotal_amount</span><span class="token punctuation">(</span>payAmount<span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    payVo<span class="token punctuation">.</span><span class="token function">setOut_trade_no</span><span class="token punctuation">(</span>orderInfo<span class="token punctuation">.</span><span class="token function">getOrderSn</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token comment">//查询订单项的数据</span>
    <span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">OrderItemEntity</span><span class="token punctuation">&gt;</span></span> orderItemInfo <span class="token operator">=</span> orderItemService<span class="token punctuation">.</span><span class="token function">list</span><span class="token punctuation">(</span>
            <span class="token keyword">new</span> <span class="token class-name">QueryWrapper</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">OrderItemEntity</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">eq</span><span class="token punctuation">(</span><span class="token string">&quot;order_sn&quot;</span><span class="token punctuation">,</span> orderSn<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token class-name">OrderItemEntity</span> orderItemEntity <span class="token operator">=</span> orderItemInfo<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    payVo<span class="token punctuation">.</span><span class="token function">setBody</span><span class="token punctuation">(</span>orderItemEntity<span class="token punctuation">.</span><span class="token function">getSkuAttrsVals</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

    payVo<span class="token punctuation">.</span><span class="token function">setSubject</span><span class="token punctuation">(</span>orderItemEntity<span class="token punctuation">.</span><span class="token function">getSkuName</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">return</span> payVo<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="_7、订单支付成功监听器-通知" tabindex="-1"><a class="header-anchor" href="#_7、订单支付成功监听器-通知" aria-hidden="true">#</a> 7、订单支付成功监听器（通知）</h2><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token annotation punctuation">@RestController</span>
<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">OrderPayedListener</span> <span class="token punctuation">{</span>
    <span class="token annotation punctuation">@Autowired</span>
    <span class="token keyword">private</span> <span class="token class-name">OrderService</span> orderService<span class="token punctuation">;</span>
    <span class="token annotation punctuation">@Autowired</span>
    <span class="token keyword">private</span> <span class="token class-name">AlipayTemplate</span> alipayTemplate<span class="token punctuation">;</span>
    
    <span class="token annotation punctuation">@PostMapping</span><span class="token punctuation">(</span>value <span class="token operator">=</span> <span class="token string">&quot;/payed/notify&quot;</span><span class="token punctuation">)</span>
    <span class="token keyword">public</span> <span class="token class-name">String</span> <span class="token function">handleAlipayed</span><span class="token punctuation">(</span><span class="token class-name">PayAsyncVo</span> asyncVo<span class="token punctuation">,</span> <span class="token class-name">HttpServletRequest</span> request<span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">AlipayApiException</span><span class="token punctuation">,</span> <span class="token class-name">UnsupportedEncodingException</span> <span class="token punctuation">{</span>
        <span class="token comment">// 只要收到支付宝的异步通知，返回 success 支付宝便不再通知</span>
        <span class="token comment">// 获取支付宝POST过来反馈信息</span>
        <span class="token comment">//TODO 需要验签</span>
        <span class="token class-name">Map</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">,</span> <span class="token class-name">String</span><span class="token punctuation">&gt;</span></span> params <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">HashMap</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">Map</span><span class="token operator">&lt;</span><span class="token class-name">String</span><span class="token punctuation">,</span> <span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token operator">&gt;</span> requestParams <span class="token operator">=</span> request<span class="token punctuation">.</span><span class="token function">getParameterMap</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token class-name">String</span> name <span class="token operator">:</span> requestParams<span class="token punctuation">.</span><span class="token function">keySet</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> values <span class="token operator">=</span> requestParams<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span>name<span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token class-name">String</span> valueStr <span class="token operator">=</span> <span class="token string">&quot;&quot;</span><span class="token punctuation">;</span>
            <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> values<span class="token punctuation">.</span>length<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                valueStr <span class="token operator">=</span> <span class="token punctuation">(</span>i <span class="token operator">==</span> values<span class="token punctuation">.</span>length <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">)</span> <span class="token operator">?</span> valueStr <span class="token operator">+</span> values<span class="token punctuation">[</span>i<span class="token punctuation">]</span>
                        <span class="token operator">:</span> valueStr <span class="token operator">+</span> values<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">+</span> <span class="token string">&quot;,&quot;</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
            <span class="token comment">//乱码解决，这段代码在出现乱码时使用</span>
            <span class="token comment">// valueStr = new String(valueStr.getBytes(&quot;ISO-8859-1&quot;), &quot;utf-8&quot;);</span>
            params<span class="token punctuation">.</span><span class="token function">put</span><span class="token punctuation">(</span>name<span class="token punctuation">,</span> valueStr<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
        <span class="token keyword">boolean</span> signVerified <span class="token operator">=</span> <span class="token class-name">AlipaySignature</span><span class="token punctuation">.</span><span class="token function">rsaCheckV1</span><span class="token punctuation">(</span>params<span class="token punctuation">,</span> alipayTemplate<span class="token punctuation">.</span><span class="token function">getAlipay_public_key</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
                alipayTemplate<span class="token punctuation">.</span><span class="token function">getCharset</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> alipayTemplate<span class="token punctuation">.</span><span class="token function">getSign_type</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">//调用SDK验证签名</span>

        <span class="token keyword">if</span> <span class="token punctuation">(</span>signVerified<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;签名验证成功...&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token comment">//去修改订单状态</span>
            <span class="token class-name">String</span> result <span class="token operator">=</span> orderService<span class="token punctuation">.</span><span class="token function">handlePayResult</span><span class="token punctuation">(</span>asyncVo<span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token keyword">return</span> result<span class="token punctuation">;</span>
        <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
            <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;签名验证失败...&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token keyword">return</span> <span class="token string">&quot;error&quot;</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>

    <span class="token annotation punctuation">@PostMapping</span><span class="token punctuation">(</span>value <span class="token operator">=</span> <span class="token string">&quot;/pay/notify&quot;</span><span class="token punctuation">)</span>
    <span class="token keyword">public</span> <span class="token class-name">String</span> <span class="token function">asyncNotify</span><span class="token punctuation">(</span><span class="token annotation punctuation">@RequestBody</span> <span class="token class-name">String</span> notifyData<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token comment">//异步通知结果</span>
        <span class="token keyword">return</span> orderService<span class="token punctuation">.</span><span class="token function">asyncNotify</span><span class="token punctuation">(</span>notifyData<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>location /static/ {
       root   /usr/share/nginx/html;
    }
    location /payed/  {
       proxy_set_header Host order.gulimall.com;
       proxy_pass http://gulimall;
    }

    location / {
       proxy_set_header Host $host;
       proxy_pass http://gulimall;
    }
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="_8、微信支付" tabindex="-1"><a class="header-anchor" href="#_8、微信支付" aria-hidden="true">#</a> 8、微信支付</h2><h2 id="" tabindex="-1"><a class="header-anchor" href="#" aria-hidden="true">#</a></h2><h1>二十、秒杀服务</h1><p><img src="`+L+'" alt="image-20211118125418053"></p><h2 id="_1、定时任务-cron" tabindex="-1"><a class="header-anchor" href="#_1、定时任务-cron" aria-hidden="true">#</a> 1、定时任务 cron</h2>',14),dn={href:"http://www.quartz-scheduler.org/documentation/quartz-2.3.0/tutorials/crontrigger.html",target:"_blank",rel:"noopener noreferrer"},mn=p('<p>语法: 秒 分 时 日 月 周 年(Spring不支持)</p><p><img src="'+P+'" alt="image-20211118130052716"></p><p><img src="'+M+'" alt="image-20211118130031288"></p><img src="'+U+`" alt="image-20211118130142204" style="zoom:95%;"><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token doc-comment comment">/**
 * 定时任务
 * 1、@EnableScheduling 开启定时任务
 * 2、@Scheduled开启一个定时任务
 * 3、自动配置类TaskSchedulingAutoConfiguration
 * <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span><span class="token punctuation">&gt;</span></span>
 * 异步任务
 * 1、@EnableAsync:开启异步任务
 * 2、@Async：给希望异步执行的方法标注
 * 3、自动配置类TaslExecutionAutoConfiguration
 */</span>
<span class="token doc-comment comment">/**
 * 1、在Spring中表达式是6位组成，不允许第七位的年份
 * 2、在周几的的位置,1-7代表周一到周日
 * 3、定时任务不该阻塞。默认是阻塞的
 *      1）、可以让业务以异步的方式，自己提交到线程池
 *              CompletableFuture.runAsync(() -&gt; <span class="token punctuation">{</span>
 *         <span class="token punctuation">}</span>,execute);
 *
 *      2）、支持定时任务线程池；设置 TaskSchedulingProperties
 *        spring.task.scheduling.pool.size: 5
 *
 *      3）、让定时任务异步执行
 *          异步任务
 *
 *      解决：使用异步任务 + 定时任务来完成定时任务不阻塞的功能
 *
 */</span>
<span class="token annotation punctuation">@Slf4j</span>
<span class="token annotation punctuation">@Component</span>
<span class="token comment">// @EnableAsync</span>
<span class="token annotation punctuation">@EnableScheduling</span>
<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">HelloScheduled</span> <span class="token punctuation">{</span>
     <span class="token annotation punctuation">@Async</span>
     <span class="token annotation punctuation">@Scheduled</span><span class="token punctuation">(</span>cron <span class="token operator">=</span> <span class="token string">&quot;*/5 * * ? * 4&quot;</span><span class="token punctuation">)</span>
     <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">hello</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
         log<span class="token punctuation">.</span><span class="token function">info</span><span class="token punctuation">(</span><span class="token string">&quot;hello...&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
     <span class="token punctuation">}</span> 
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="_2、上架秒杀商品" tabindex="-1"><a class="header-anchor" href="#_2、上架秒杀商品" aria-hidden="true">#</a> 2、上架秒杀商品</h2><h3 id="定时任务-seckillscheduled" tabindex="-1"><a class="header-anchor" href="#定时任务-seckillscheduled" aria-hidden="true">#</a> 定时任务 SeckillScheduled</h3><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token doc-comment comment">/**
 * 秒杀商品定时上架
 * 每天晚上3点，上架最近三天需要三天秒杀的商品
 * 当天00:00:00 - 23:59:59
 * 明天00:00:00 - 23:59:59
 * 后天00:00:00 - 23:59:59
 */</span>
<span class="token annotation punctuation">@Slf4j</span>
<span class="token annotation punctuation">@Service</span>
<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">SeckillScheduled</span> <span class="token punctuation">{</span>

    <span class="token annotation punctuation">@Autowired</span>
    <span class="token keyword">private</span> <span class="token class-name">SeckillService</span> seckillService<span class="token punctuation">;</span>

    <span class="token annotation punctuation">@Autowired</span>
    <span class="token keyword">private</span> <span class="token class-name">RedissonClient</span> redissonClient<span class="token punctuation">;</span>

    <span class="token comment">//秒杀商品上架功能的锁</span>
    <span class="token keyword">private</span> <span class="token keyword">final</span> <span class="token class-name">String</span> upload_lock <span class="token operator">=</span> <span class="token string">&quot;seckill:upload:lock&quot;</span><span class="token punctuation">;</span>

    <span class="token comment">//TODO 保证幂等性问题</span>
    <span class="token comment">// @Scheduled(cron = &quot;*/5 * * * * ? &quot;)</span>
    <span class="token annotation punctuation">@Scheduled</span><span class="token punctuation">(</span>cron <span class="token operator">=</span> <span class="token string">&quot;0 0 1/1 * * ? &quot;</span><span class="token punctuation">)</span>
    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">uploadSeckillSkuLatest3Days</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token comment">//1、重复上架无需处理</span>
        log<span class="token punctuation">.</span><span class="token function">info</span><span class="token punctuation">(</span><span class="token string">&quot;上架秒杀的商品...&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

        <span class="token comment">//分布式锁</span>
        <span class="token class-name">RLock</span> lock <span class="token operator">=</span> redissonClient<span class="token punctuation">.</span><span class="token function">getLock</span><span class="token punctuation">(</span>upload_lock<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">try</span> <span class="token punctuation">{</span>
            <span class="token comment">//加锁</span>
            lock<span class="token punctuation">.</span><span class="token function">lock</span><span class="token punctuation">(</span><span class="token number">10</span><span class="token punctuation">,</span> <span class="token class-name">TimeUnit</span><span class="token punctuation">.</span><span class="token constant">SECONDS</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            seckillService<span class="token punctuation">.</span><span class="token function">uploadSeckillSkuLatest3Days</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">Exception</span> e<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            e<span class="token punctuation">.</span><span class="token function">printStackTrace</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span> <span class="token keyword">finally</span> <span class="token punctuation">{</span>
            lock<span class="token punctuation">.</span><span class="token function">unlock</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="要参加三天的商品秒杀活动-uploadseckillskulatest3days" tabindex="-1"><a class="header-anchor" href="#要参加三天的商品秒杀活动-uploadseckillskulatest3days" aria-hidden="true">#</a> 要参加三天的商品秒杀活动 uploadSeckillSkuLatest3Days</h3><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token annotation punctuation">@Override</span>
<span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">uploadSeckillSkuLatest3Days</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>

    <span class="token comment">//1、扫描最近三天的商品需要参加秒杀的活动</span>
    <span class="token class-name">R</span> lates3DaySession <span class="token operator">=</span> couponFeignService<span class="token punctuation">.</span><span class="token function">getLates3DaySession</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>lates3DaySession<span class="token punctuation">.</span><span class="token function">getCode</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">==</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token comment">//上架商品</span>
        <span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">SeckillSessionWithSkusVo</span><span class="token punctuation">&gt;</span></span> sessionData <span class="token operator">=</span> lates3DaySession<span class="token punctuation">.</span><span class="token function">getData</span><span class="token punctuation">(</span><span class="token string">&quot;data&quot;</span><span class="token punctuation">,</span> <span class="token keyword">new</span> <span class="token class-name">TypeReference</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">List</span><span class="token punctuation">&lt;</span><span class="token class-name">SeckillSessionWithSkusVo</span><span class="token punctuation">&gt;</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token comment">//缓存到Redis</span>
        <span class="token comment">//1、缓存活动信息</span>
        <span class="token function">saveSessionInfos</span><span class="token punctuation">(</span>sessionData<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token comment">//2、缓存活动的关联商品信息</span>
        <span class="token function">saveSessionSkuInfo</span><span class="token punctuation">(</span>sessionData<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

<span class="token punctuation">}</span>

<span class="token doc-comment comment">/**
 * 缓存秒杀活动信息
 *
 * <span class="token keyword">@param</span> <span class="token parameter">sessions</span>
 */</span>
<span class="token keyword">private</span> <span class="token keyword">void</span> <span class="token function">saveSessionInfos</span><span class="token punctuation">(</span><span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">SeckillSessionWithSkusVo</span><span class="token punctuation">&gt;</span></span> sessions<span class="token punctuation">)</span> <span class="token punctuation">{</span>

    sessions<span class="token punctuation">.</span><span class="token function">stream</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">forEach</span><span class="token punctuation">(</span>session <span class="token operator">-&gt;</span> <span class="token punctuation">{</span>

        <span class="token comment">//获取当前活动的开始和结束时间的时间戳</span>
        <span class="token keyword">long</span> startTime <span class="token operator">=</span> session<span class="token punctuation">.</span><span class="token function">getStartTime</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getTime</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">long</span> endTime <span class="token operator">=</span> session<span class="token punctuation">.</span><span class="token function">getEndTime</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getTime</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

        <span class="token comment">//存入到Redis中的key</span>
        <span class="token class-name">String</span> key <span class="token operator">=</span> <span class="token constant">SESSION__CACHE_PREFIX</span> <span class="token operator">+</span> startTime <span class="token operator">+</span> <span class="token string">&quot;_&quot;</span> <span class="token operator">+</span> endTime<span class="token punctuation">;</span>

        <span class="token comment">//判断Redis中是否有该信息，如果没有才进行添加</span>
        <span class="token class-name">Boolean</span> hasKey <span class="token operator">=</span> redisTemplate<span class="token punctuation">.</span><span class="token function">hasKey</span><span class="token punctuation">(</span>key<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token comment">//缓存活动信息</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>hasKey<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token comment">//获取到活动中所有商品的skuId</span>
            <span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">&gt;</span></span> skuIds <span class="token operator">=</span> session<span class="token punctuation">.</span><span class="token function">getRelationSkus</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">stream</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
                    <span class="token punctuation">.</span><span class="token function">map</span><span class="token punctuation">(</span>item <span class="token operator">-&gt;</span> item<span class="token punctuation">.</span><span class="token function">getPromotionSessionId</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token string">&quot;-&quot;</span> <span class="token operator">+</span> item<span class="token punctuation">.</span><span class="token function">getSkuId</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">collect</span><span class="token punctuation">(</span><span class="token class-name">Collectors</span><span class="token punctuation">.</span><span class="token function">toList</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            redisTemplate<span class="token punctuation">.</span><span class="token function">opsForList</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">leftPushAll</span><span class="token punctuation">(</span>key<span class="token punctuation">,</span> skuIds<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token punctuation">}</span>

<span class="token doc-comment comment">/**
 * 缓存秒杀活动所关联的商品信息
 *
 * <span class="token keyword">@param</span> <span class="token parameter">sessions</span>
 */</span>
<span class="token keyword">private</span> <span class="token keyword">void</span> <span class="token function">saveSessionSkuInfo</span><span class="token punctuation">(</span><span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">SeckillSessionWithSkusVo</span><span class="token punctuation">&gt;</span></span> sessions<span class="token punctuation">)</span> <span class="token punctuation">{</span>

    sessions<span class="token punctuation">.</span><span class="token function">stream</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">forEach</span><span class="token punctuation">(</span>session <span class="token operator">-&gt;</span> <span class="token punctuation">{</span>
        <span class="token comment">//准备hash操作，绑定hash</span>
        <span class="token class-name">BoundHashOperations</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">,</span> <span class="token class-name">Object</span><span class="token punctuation">,</span> <span class="token class-name">Object</span><span class="token punctuation">&gt;</span></span> operations <span class="token operator">=</span> redisTemplate<span class="token punctuation">.</span><span class="token function">boundHashOps</span><span class="token punctuation">(</span><span class="token constant">SECKILL_CHARE_PREFIX</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        session<span class="token punctuation">.</span><span class="token function">getRelationSkus</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">stream</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">forEach</span><span class="token punctuation">(</span>seckillSkuVo <span class="token operator">-&gt;</span> <span class="token punctuation">{</span>
            <span class="token comment">//生成随机码</span>
            <span class="token class-name">String</span> token <span class="token operator">=</span> <span class="token constant">UUID</span><span class="token punctuation">.</span><span class="token function">randomUUID</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">replace</span><span class="token punctuation">(</span><span class="token string">&quot;-&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token class-name">String</span> redisKey <span class="token operator">=</span> seckillSkuVo<span class="token punctuation">.</span><span class="token function">getPromotionSessionId</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token string">&quot;-&quot;</span> <span class="token operator">+</span> seckillSkuVo<span class="token punctuation">.</span><span class="token function">getSkuId</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>operations<span class="token punctuation">.</span><span class="token function">hasKey</span><span class="token punctuation">(</span>redisKey<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>

                <span class="token comment">//缓存我们商品信息</span>
                <span class="token class-name">SeckillSkuRedisTo</span> redisTo <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">SeckillSkuRedisTo</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token class-name">Long</span> skuId <span class="token operator">=</span> seckillSkuVo<span class="token punctuation">.</span><span class="token function">getSkuId</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token comment">//1、先查询sku的基本信息，调用远程服务</span>
                <span class="token class-name">R</span> info <span class="token operator">=</span> productFeignService<span class="token punctuation">.</span><span class="token function">getSkuInfo</span><span class="token punctuation">(</span>skuId<span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token keyword">if</span> <span class="token punctuation">(</span>info<span class="token punctuation">.</span><span class="token function">getCode</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">==</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                    <span class="token class-name">SkuInfoVo</span> skuInfo <span class="token operator">=</span> info<span class="token punctuation">.</span><span class="token function">getData</span><span class="token punctuation">(</span><span class="token string">&quot;skuInfo&quot;</span><span class="token punctuation">,</span> <span class="token keyword">new</span> <span class="token class-name">TypeReference</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">SkuInfoVo</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                    redisTo<span class="token punctuation">.</span><span class="token function">setSkuInfo</span><span class="token punctuation">(</span>skuInfo<span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token punctuation">}</span>

                <span class="token comment">//2、sku的秒杀信息</span>
                <span class="token class-name">BeanUtils</span><span class="token punctuation">.</span><span class="token function">copyProperties</span><span class="token punctuation">(</span>seckillSkuVo<span class="token punctuation">,</span> redisTo<span class="token punctuation">)</span><span class="token punctuation">;</span>

                <span class="token comment">//3、设置当前商品的秒杀时间信息</span>
                redisTo<span class="token punctuation">.</span><span class="token function">setStartTime</span><span class="token punctuation">(</span>session<span class="token punctuation">.</span><span class="token function">getStartTime</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getTime</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                redisTo<span class="token punctuation">.</span><span class="token function">setEndTime</span><span class="token punctuation">(</span>session<span class="token punctuation">.</span><span class="token function">getEndTime</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getTime</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

                <span class="token comment">//4、设置商品的随机码（防止恶意攻击）</span>
                redisTo<span class="token punctuation">.</span><span class="token function">setRandomCode</span><span class="token punctuation">(</span>token<span class="token punctuation">)</span><span class="token punctuation">;</span>

                <span class="token comment">//序列化json格式存入Redis中</span>
                <span class="token class-name">String</span> seckillValue <span class="token operator">=</span> <span class="token constant">JSON</span><span class="token punctuation">.</span><span class="token function">toJSONString</span><span class="token punctuation">(</span>redisTo<span class="token punctuation">)</span><span class="token punctuation">;</span>
                operations<span class="token punctuation">.</span><span class="token function">put</span><span class="token punctuation">(</span>seckillSkuVo<span class="token punctuation">.</span><span class="token function">getPromotionSessionId</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token string">&quot;-&quot;</span> <span class="token operator">+</span> seckillSkuVo<span class="token punctuation">.</span><span class="token function">getSkuId</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> seckillValue<span class="token punctuation">)</span><span class="token punctuation">;</span>

                <span class="token comment">//如果当前这个场次的商品库存信息已经上架就不需要上架</span>
                <span class="token comment">//5、使用库存作为分布式Redisson信号量（限流）</span>
                <span class="token comment">// 使用库存作为分布式信号量</span>
                <span class="token class-name">RSemaphore</span> semaphore <span class="token operator">=</span> redissonClient<span class="token punctuation">.</span><span class="token function">getSemaphore</span><span class="token punctuation">(</span><span class="token constant">SKU_STOCK_SEMAPHORE</span> <span class="token operator">+</span> token<span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token comment">// 商品可以秒杀的数量作为信号量</span>
                semaphore<span class="token punctuation">.</span><span class="token function">trySetPermits</span><span class="token punctuation">(</span>seckillSkuVo<span class="token punctuation">.</span><span class="token function">getSeckillCount</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
        <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>@FeignClient(&quot;yumall-coupon&quot;)---------coupon/seckillsession/Lates3DaySession</p><h3 id="查询最近三天需要参加秒杀商品的信息-getlates3daysession" tabindex="-1"><a class="header-anchor" href="#查询最近三天需要参加秒杀商品的信息-getlates3daysession" aria-hidden="true">#</a> 查询最近三天需要参加秒杀商品的信息 getLates3DaySession</h3><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">SeckillSessionEntity</span><span class="token punctuation">&gt;</span></span> <span class="token function">getLates3DaySession</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
<span class="token comment">//计算最近三天</span>
<span class="token comment">//查出这三天参与秒杀活动的商品</span>
<span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">SeckillSessionEntity</span><span class="token punctuation">&gt;</span></span> list <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>baseMapper<span class="token punctuation">.</span><span class="token function">selectList</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">QueryWrapper</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">SeckillSessionEntity</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token punctuation">)</span>
        <span class="token punctuation">.</span><span class="token function">between</span><span class="token punctuation">(</span><span class="token string">&quot;start_time&quot;</span><span class="token punctuation">,</span> <span class="token function">startTime</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token function">endTime</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token keyword">if</span> <span class="token punctuation">(</span>list <span class="token operator">!=</span> <span class="token keyword">null</span> <span class="token operator">&amp;&amp;</span> list<span class="token punctuation">.</span><span class="token function">size</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">&gt;</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">SeckillSessionEntity</span><span class="token punctuation">&gt;</span></span> collect <span class="token operator">=</span> list<span class="token punctuation">.</span><span class="token function">stream</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">map</span><span class="token punctuation">(</span>session <span class="token operator">-&gt;</span> <span class="token punctuation">{</span>
        <span class="token class-name">Long</span> id <span class="token operator">=</span> session<span class="token punctuation">.</span><span class="token function">getId</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token comment">//查出sms_seckill_sku_relation表中关联的skuId</span>
        <span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">SeckillSkuRelationEntity</span><span class="token punctuation">&gt;</span></span> relationSkus <span class="token operator">=</span> seckillSkuRelationService<span class="token punctuation">.</span><span class="token function">list</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">QueryWrapper</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">SeckillSkuRelationEntity</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token punctuation">)</span>
                <span class="token punctuation">.</span><span class="token function">eq</span><span class="token punctuation">(</span><span class="token string">&quot;promotion_session_id&quot;</span><span class="token punctuation">,</span> id<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        session<span class="token punctuation">.</span><span class="token function">setRelationSkus</span><span class="token punctuation">(</span>relationSkus<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">return</span> session<span class="token punctuation">;</span>
    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">collect</span><span class="token punctuation">(</span><span class="token class-name">Collectors</span><span class="token punctuation">.</span><span class="token function">toList</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">return</span> collect<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
 <span class="token doc-comment comment">/**
     * 当前时间
     * <span class="token keyword">@return</span>
     */</span>
    <span class="token keyword">private</span> <span class="token class-name">String</span> <span class="token function">startTime</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token class-name">LocalDate</span> now <span class="token operator">=</span> <span class="token class-name">LocalDate</span><span class="token punctuation">.</span><span class="token function">now</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">LocalTime</span> min <span class="token operator">=</span> <span class="token class-name">LocalTime</span><span class="token punctuation">.</span><span class="token constant">MIN</span><span class="token punctuation">;</span>
        <span class="token class-name">LocalDateTime</span> start <span class="token operator">=</span> <span class="token class-name">LocalDateTime</span><span class="token punctuation">.</span><span class="token function">of</span><span class="token punctuation">(</span>now<span class="token punctuation">,</span> min<span class="token punctuation">)</span><span class="token punctuation">;</span>

        <span class="token comment">//格式化时间</span>
        <span class="token keyword">return</span> start<span class="token punctuation">.</span><span class="token function">format</span><span class="token punctuation">(</span><span class="token class-name">DateTimeFormatter</span><span class="token punctuation">.</span><span class="token function">ofPattern</span><span class="token punctuation">(</span><span class="token string">&quot;yyyy-MM-dd HH:mm:ss&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token doc-comment comment">/**
     * 结束时间
     * <span class="token keyword">@return</span>
     */</span>
    <span class="token keyword">private</span> <span class="token class-name">String</span> <span class="token function">endTime</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token class-name">LocalDate</span> now <span class="token operator">=</span> <span class="token class-name">LocalDate</span><span class="token punctuation">.</span><span class="token function">now</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">LocalDate</span> plus <span class="token operator">=</span> now<span class="token punctuation">.</span><span class="token function">plusDays</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">LocalTime</span> max <span class="token operator">=</span> <span class="token class-name">LocalTime</span><span class="token punctuation">.</span><span class="token constant">MAX</span><span class="token punctuation">;</span>
        <span class="token class-name">LocalDateTime</span> end <span class="token operator">=</span> <span class="token class-name">LocalDateTime</span><span class="token punctuation">.</span><span class="token function">of</span><span class="token punctuation">(</span>plus<span class="token punctuation">,</span> max<span class="token punctuation">)</span><span class="token punctuation">;</span>

        <span class="token comment">//格式化时间</span>
        <span class="token keyword">return</span> end<span class="token punctuation">.</span><span class="token function">format</span><span class="token punctuation">(</span><span class="token class-name">DateTimeFormatter</span><span class="token punctuation">.</span><span class="token function">ofPattern</span><span class="token punctuation">(</span><span class="token string">&quot;yyyy-MM-dd HH:mm:ss&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="_3、获取到当前可以参加秒杀商品的信息-getcurrentseckillskus" tabindex="-1"><a class="header-anchor" href="#_3、获取到当前可以参加秒杀商品的信息-getcurrentseckillskus" aria-hidden="true">#</a> 3、获取到当前可以参加秒杀商品的信息 getCurrentSeckillSkus</h2><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token annotation punctuation">@SentinelResource</span><span class="token punctuation">(</span>value <span class="token operator">=</span> <span class="token string">&quot;getCurrentSeckillSkusResource&quot;</span><span class="token punctuation">,</span> blockHandler <span class="token operator">=</span> <span class="token string">&quot;blockHandler&quot;</span><span class="token punctuation">)</span>
<span class="token annotation punctuation">@Override</span>
<span class="token keyword">public</span> <span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">SeckillSkuRedisTo</span><span class="token punctuation">&gt;</span></span> <span class="token function">getCurrentSeckillSkus</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">try</span> <span class="token punctuation">(</span><span class="token class-name">Entry</span> entry <span class="token operator">=</span> <span class="token class-name">SphU</span><span class="token punctuation">.</span><span class="token function">entry</span><span class="token punctuation">(</span><span class="token string">&quot;seckillSkus&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token comment">//1、确定当前属于哪个秒杀场次</span>
        <span class="token keyword">long</span> currentTime <span class="token operator">=</span> <span class="token class-name">System</span><span class="token punctuation">.</span><span class="token function">currentTimeMillis</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token comment">//从Redis中查询到所有key以seckill:sessions开头的所有数据</span>
        <span class="token class-name">Set</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">&gt;</span></span> keys <span class="token operator">=</span> redisTemplate<span class="token punctuation">.</span><span class="token function">keys</span><span class="token punctuation">(</span><span class="token constant">SESSION__CACHE_PREFIX</span> <span class="token operator">+</span> <span class="token string">&quot;*&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token class-name">String</span> key <span class="token operator">:</span> keys<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token comment">//seckill:sessions:1594396764000_1594453242000</span>
            <span class="token class-name">String</span> replace <span class="token operator">=</span> key<span class="token punctuation">.</span><span class="token function">replace</span><span class="token punctuation">(</span><span class="token constant">SESSION__CACHE_PREFIX</span><span class="token punctuation">,</span> <span class="token string">&quot;&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> s <span class="token operator">=</span> replace<span class="token punctuation">.</span><span class="token function">split</span><span class="token punctuation">(</span><span class="token string">&quot;_&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token comment">//获取存入Redis商品的开始时间</span>
            <span class="token keyword">long</span> startTime <span class="token operator">=</span> <span class="token class-name">Long</span><span class="token punctuation">.</span><span class="token function">parseLong</span><span class="token punctuation">(</span>s<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token comment">//获取存入Redis商品的结束时间</span>
            <span class="token keyword">long</span> endTime <span class="token operator">=</span> <span class="token class-name">Long</span><span class="token punctuation">.</span><span class="token function">parseLong</span><span class="token punctuation">(</span>s<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token comment">//判断是否是当前秒杀场次</span>
            <span class="token keyword">if</span> <span class="token punctuation">(</span>currentTime <span class="token operator">&gt;=</span> startTime <span class="token operator">&amp;&amp;</span> currentTime <span class="token operator">&lt;=</span> endTime<span class="token punctuation">)</span> <span class="token punctuation">{</span>
                <span class="token comment">//2、获取这个秒杀场次需要的所有商品信息</span>
                <span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">&gt;</span></span> range <span class="token operator">=</span> redisTemplate<span class="token punctuation">.</span><span class="token function">opsForList</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">range</span><span class="token punctuation">(</span>key<span class="token punctuation">,</span> <span class="token operator">-</span><span class="token number">100</span><span class="token punctuation">,</span> <span class="token number">100</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token class-name">BoundHashOperations</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">,</span> <span class="token class-name">String</span><span class="token punctuation">,</span> <span class="token class-name">String</span><span class="token punctuation">&gt;</span></span> hasOps <span class="token operator">=</span> redisTemplate<span class="token punctuation">.</span><span class="token function">boundHashOps</span><span class="token punctuation">(</span><span class="token constant">SECKILL_CHARE_PREFIX</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token keyword">assert</span> range <span class="token operator">!=</span> <span class="token keyword">null</span><span class="token punctuation">;</span>
                <span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">&gt;</span></span> listValue <span class="token operator">=</span> hasOps<span class="token punctuation">.</span><span class="token function">multiGet</span><span class="token punctuation">(</span>range<span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token keyword">if</span> <span class="token punctuation">(</span>listValue <span class="token operator">!=</span> <span class="token keyword">null</span> <span class="token operator">&amp;&amp;</span> listValue<span class="token punctuation">.</span><span class="token function">size</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">&gt;=</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                    <span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">SeckillSkuRedisTo</span><span class="token punctuation">&gt;</span></span> collect <span class="token operator">=</span> listValue<span class="token punctuation">.</span><span class="token function">stream</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">map</span><span class="token punctuation">(</span>item <span class="token operator">-&gt;</span> <span class="token punctuation">{</span>
                        <span class="token class-name">String</span> items <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">)</span> item<span class="token punctuation">;</span>
                        <span class="token class-name">SeckillSkuRedisTo</span> redisTo <span class="token operator">=</span> <span class="token constant">JSON</span><span class="token punctuation">.</span><span class="token function">parseObject</span><span class="token punctuation">(</span>items<span class="token punctuation">,</span> <span class="token class-name">SeckillSkuRedisTo</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                        <span class="token comment">// redisTo.setRandomCode(null);当前秒杀开始需要随机码</span>
                        <span class="token keyword">return</span> redisTo<span class="token punctuation">;</span>
                    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">collect</span><span class="token punctuation">(</span><span class="token class-name">Collectors</span><span class="token punctuation">.</span><span class="token function">toList</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                    <span class="token keyword">return</span> collect<span class="token punctuation">;</span>
                <span class="token punctuation">}</span>
                <span class="token keyword">break</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">BlockException</span> e<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        log<span class="token punctuation">.</span><span class="token function">error</span><span class="token punctuation">(</span><span class="token string">&quot;资源被限流{}&quot;</span><span class="token punctuation">,</span> e<span class="token punctuation">.</span><span class="token function">getMessage</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">return</span> <span class="token keyword">null</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
 <span class="token keyword">public</span> <span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">SeckillSkuRedisTo</span><span class="token punctuation">&gt;</span></span> <span class="token function">blockHandler</span><span class="token punctuation">(</span><span class="token class-name">BlockException</span> e<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        log<span class="token punctuation">.</span><span class="token function">error</span><span class="token punctuation">(</span><span class="token string">&quot;getCurrentSeckillSkusResource被限流了,{}&quot;</span><span class="token punctuation">,</span> e<span class="token punctuation">.</span><span class="token function">getMessage</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">return</span> <span class="token keyword">null</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="_4、根据skuid查询商品是否参加秒杀活动" tabindex="-1"><a class="header-anchor" href="#_4、根据skuid查询商品是否参加秒杀活动" aria-hidden="true">#</a> 4、根据skuId查询商品是否参加秒杀活动</h2><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token class-name">SeckillSkuRedisTo</span> <span class="token function">getSkuSeckilInfo</span><span class="token punctuation">(</span><span class="token class-name">Long</span> skuId<span class="token punctuation">)</span> <span class="token punctuation">{</span>

    <span class="token comment">//1、找到所有需要秒杀的商品的key信息---seckill:skus</span>
    <span class="token class-name">BoundHashOperations</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">,</span> <span class="token class-name">String</span><span class="token punctuation">,</span> <span class="token class-name">String</span><span class="token punctuation">&gt;</span></span> hashOps <span class="token operator">=</span> redisTemplate<span class="token punctuation">.</span><span class="token function">boundHashOps</span><span class="token punctuation">(</span><span class="token constant">SECKILL_CHARE_PREFIX</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token comment">//拿到所有的key</span>
    <span class="token class-name">Set</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">&gt;</span></span> keys <span class="token operator">=</span> hashOps<span class="token punctuation">.</span><span class="token function">keys</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>keys <span class="token operator">!=</span> <span class="token keyword">null</span> <span class="token operator">&amp;&amp;</span> keys<span class="token punctuation">.</span><span class="token function">size</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">&gt;</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token comment">//4-45 正则表达式进行匹配</span>
        <span class="token class-name">String</span> reg <span class="token operator">=</span> <span class="token string">&quot;\\\\d-&quot;</span> <span class="token operator">+</span> skuId<span class="token punctuation">;</span>
        <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token class-name">String</span> key <span class="token operator">:</span> keys<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token comment">//如果匹配上了</span>
            <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token class-name">Pattern</span><span class="token punctuation">.</span><span class="token function">matches</span><span class="token punctuation">(</span>reg<span class="token punctuation">,</span> key<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                <span class="token comment">//从Redis中取出数据来</span>
                <span class="token class-name">String</span> redisValue <span class="token operator">=</span> hashOps<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span>key<span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token comment">//进行序列化</span>
                <span class="token class-name">SeckillSkuRedisTo</span> redisTo <span class="token operator">=</span> <span class="token constant">JSON</span><span class="token punctuation">.</span><span class="token function">parseObject</span><span class="token punctuation">(</span>redisValue<span class="token punctuation">,</span> <span class="token class-name">SeckillSkuRedisTo</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

                <span class="token comment">//随机码</span>
                <span class="token class-name">Long</span> currentTime <span class="token operator">=</span> <span class="token class-name">System</span><span class="token punctuation">.</span><span class="token function">currentTimeMillis</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token class-name">Long</span> startTime <span class="token operator">=</span> redisTo<span class="token punctuation">.</span><span class="token function">getStartTime</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token class-name">Long</span> endTime <span class="token operator">=</span> redisTo<span class="token punctuation">.</span><span class="token function">getEndTime</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token comment">//如果当前时间大于等于秒杀活动开始时间并且要小于活动结束时间</span>
                <span class="token keyword">if</span> <span class="token punctuation">(</span>currentTime <span class="token operator">&gt;=</span> startTime <span class="token operator">&amp;&amp;</span> currentTime <span class="token operator">&lt;=</span> endTime<span class="token punctuation">)</span> <span class="token punctuation">{</span>
                    <span class="token keyword">return</span> redisTo<span class="token punctuation">;</span>
                <span class="token punctuation">}</span>
                redisTo<span class="token punctuation">.</span><span class="token function">setRandomCode</span><span class="token punctuation">(</span><span class="token keyword">null</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token keyword">return</span> redisTo<span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">return</span> <span class="token keyword">null</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="_5、当前商品进行秒杀-秒杀开始" tabindex="-1"><a class="header-anchor" href="#_5、当前商品进行秒杀-秒杀开始" aria-hidden="true">#</a> 5、当前商品进行秒杀（秒杀开始）</h2><p><img src="`+D+`" alt="image-20211118141952959"></p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token class-name">String</span> <span class="token function">kill</span><span class="token punctuation">(</span><span class="token class-name">String</span> killId<span class="token punctuation">,</span> <span class="token class-name">String</span> key<span class="token punctuation">,</span> <span class="token class-name">Integer</span> num<span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">InterruptedException</span> <span class="token punctuation">{</span>

    <span class="token keyword">long</span> s1 <span class="token operator">=</span> <span class="token class-name">System</span><span class="token punctuation">.</span><span class="token function">currentTimeMillis</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token comment">//获取当前用户的信息</span>
    <span class="token class-name">MemberResponseVo</span> user <span class="token operator">=</span> <span class="token class-name">LoginUserInterceptor</span><span class="token punctuation">.</span>loginUser<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token comment">//1、获取当前秒杀商品的详细信息从Redis中获取</span>
    <span class="token class-name">BoundHashOperations</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">,</span> <span class="token class-name">String</span><span class="token punctuation">,</span> <span class="token class-name">String</span><span class="token punctuation">&gt;</span></span> hashOps <span class="token operator">=</span> redisTemplate<span class="token punctuation">.</span><span class="token function">boundHashOps</span><span class="token punctuation">(</span><span class="token constant">SECKILL_CHARE_PREFIX</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token class-name">String</span> skuInfoValue <span class="token operator">=</span> hashOps<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span>killId<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token class-name">StringUtils</span><span class="token punctuation">.</span><span class="token function">isEmpty</span><span class="token punctuation">(</span>skuInfoValue<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">return</span> <span class="token keyword">null</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token comment">//(合法性效验)</span>
    <span class="token class-name">SeckillSkuRedisTo</span> redisTo <span class="token operator">=</span> <span class="token constant">JSON</span><span class="token punctuation">.</span><span class="token function">parseObject</span><span class="token punctuation">(</span>skuInfoValue<span class="token punctuation">,</span> <span class="token class-name">SeckillSkuRedisTo</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token class-name">Long</span> startTime <span class="token operator">=</span> redisTo<span class="token punctuation">.</span><span class="token function">getStartTime</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token class-name">Long</span> endTime <span class="token operator">=</span> redisTo<span class="token punctuation">.</span><span class="token function">getEndTime</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">long</span> currentTime <span class="token operator">=</span> <span class="token class-name">System</span><span class="token punctuation">.</span><span class="token function">currentTimeMillis</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token comment">//判断当前这个秒杀请求是否在活动时间区间内(效验时间的合法性)</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>currentTime <span class="token operator">&gt;=</span> startTime <span class="token operator">&amp;&amp;</span> currentTime <span class="token operator">&lt;=</span> endTime<span class="token punctuation">)</span> <span class="token punctuation">{</span>

        <span class="token comment">//2、效验随机码和商品id</span>
        <span class="token class-name">String</span> randomCode <span class="token operator">=</span> redisTo<span class="token punctuation">.</span><span class="token function">getRandomCode</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">String</span> skuId <span class="token operator">=</span> redisTo<span class="token punctuation">.</span><span class="token function">getPromotionSessionId</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token string">&quot;-&quot;</span> <span class="token operator">+</span> redisTo<span class="token punctuation">.</span><span class="token function">getSkuId</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>randomCode<span class="token punctuation">.</span><span class="token function">equals</span><span class="token punctuation">(</span>key<span class="token punctuation">)</span> <span class="token operator">&amp;&amp;</span> killId<span class="token punctuation">.</span><span class="token function">equals</span><span class="token punctuation">(</span>skuId<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token comment">//3、验证购物数量是否合理和库存量是否充足</span>
            <span class="token class-name">Integer</span> seckillLimit <span class="token operator">=</span> redisTo<span class="token punctuation">.</span><span class="token function">getSeckillLimit</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

            <span class="token comment">//获取信号量</span>
            <span class="token class-name">String</span> seckillCount <span class="token operator">=</span> redisTemplate<span class="token punctuation">.</span><span class="token function">opsForValue</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token constant">SKU_STOCK_SEMAPHORE</span> <span class="token operator">+</span> randomCode<span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token class-name">Integer</span> count <span class="token operator">=</span> <span class="token class-name">Integer</span><span class="token punctuation">.</span><span class="token function">valueOf</span><span class="token punctuation">(</span>seckillCount<span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token comment">//判断信号量是否大于0,并且买的数量不能超过库存</span>
            <span class="token keyword">if</span> <span class="token punctuation">(</span>count <span class="token operator">&gt;</span> <span class="token number">0</span> <span class="token operator">&amp;&amp;</span> num <span class="token operator">&lt;=</span> seckillLimit <span class="token operator">&amp;&amp;</span> count <span class="token operator">&gt;</span> num<span class="token punctuation">)</span> <span class="token punctuation">{</span>
                <span class="token comment">//4、验证这个人是否已经买过了（幂等性处理）,如果秒杀成功，就去占位。userId-sessionId-skuId</span>
                <span class="token comment">//SETNX 原子性处理</span>
                <span class="token class-name">String</span> redisKey <span class="token operator">=</span> user<span class="token punctuation">.</span><span class="token function">getId</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token string">&quot;-&quot;</span> <span class="token operator">+</span> skuId<span class="token punctuation">;</span>
                <span class="token comment">//设置自动过期(活动结束时间-当前时间)</span>
                <span class="token class-name">Long</span> ttl <span class="token operator">=</span> endTime <span class="token operator">-</span> currentTime<span class="token punctuation">;</span>
                <span class="token class-name">Boolean</span> aBoolean <span class="token operator">=</span> redisTemplate<span class="token punctuation">.</span><span class="token function">opsForValue</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">setIfAbsent</span><span class="token punctuation">(</span>redisKey<span class="token punctuation">,</span> num<span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> ttl<span class="token punctuation">,</span> <span class="token class-name">TimeUnit</span><span class="token punctuation">.</span><span class="token constant">MILLISECONDS</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token keyword">if</span> <span class="token punctuation">(</span>aBoolean<span class="token punctuation">)</span> <span class="token punctuation">{</span>
                    <span class="token comment">//占位成功说明从来没有买过,分布式锁(获取信号量-1)</span>
                    <span class="token class-name">RSemaphore</span> semaphore <span class="token operator">=</span> redissonClient<span class="token punctuation">.</span><span class="token function">getSemaphore</span><span class="token punctuation">(</span><span class="token constant">SKU_STOCK_SEMAPHORE</span> <span class="token operator">+</span> randomCode<span class="token punctuation">)</span><span class="token punctuation">;</span>
                    <span class="token comment">//TODO 秒杀成功，快速下单</span>
                    <span class="token keyword">boolean</span> semaphoreCount <span class="token operator">=</span> semaphore<span class="token punctuation">.</span><span class="token function">tryAcquire</span><span class="token punctuation">(</span>num<span class="token punctuation">,</span> <span class="token number">100</span><span class="token punctuation">,</span> <span class="token class-name">TimeUnit</span><span class="token punctuation">.</span><span class="token constant">MILLISECONDS</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                    <span class="token comment">//保证Redis中还有商品库存</span>
                    <span class="token keyword">if</span> <span class="token punctuation">(</span>semaphoreCount<span class="token punctuation">)</span> <span class="token punctuation">{</span>
                        <span class="token comment">//创建订单号和订单信息发送给MQ</span>
                        <span class="token comment">// 秒杀成功 快速下单 发送消息到 MQ 整个操作时间在 10ms 左右</span>
                        <span class="token class-name">String</span> timeId <span class="token operator">=</span> <span class="token class-name">IdWorker</span><span class="token punctuation">.</span><span class="token function">getTimeId</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                        <span class="token class-name">SeckillOrderTo</span> orderTo <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">SeckillOrderTo</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                        orderTo<span class="token punctuation">.</span><span class="token function">setOrderSn</span><span class="token punctuation">(</span>timeId<span class="token punctuation">)</span><span class="token punctuation">;</span>
                        orderTo<span class="token punctuation">.</span><span class="token function">setMemberId</span><span class="token punctuation">(</span>user<span class="token punctuation">.</span><span class="token function">getId</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                        orderTo<span class="token punctuation">.</span><span class="token function">setNum</span><span class="token punctuation">(</span>num<span class="token punctuation">)</span><span class="token punctuation">;</span>
                        orderTo<span class="token punctuation">.</span><span class="token function">setPromotionSessionId</span><span class="token punctuation">(</span>redisTo<span class="token punctuation">.</span><span class="token function">getPromotionSessionId</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                        orderTo<span class="token punctuation">.</span><span class="token function">setSkuId</span><span class="token punctuation">(</span>redisTo<span class="token punctuation">.</span><span class="token function">getSkuId</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                        orderTo<span class="token punctuation">.</span><span class="token function">setSeckillPrice</span><span class="token punctuation">(</span>redisTo<span class="token punctuation">.</span><span class="token function">getSeckillPrice</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                        rabbitTemplate<span class="token punctuation">.</span><span class="token function">convertAndSend</span><span class="token punctuation">(</span><span class="token string">&quot;order-event-exchange&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;order.seckill.order&quot;</span><span class="token punctuation">,</span> orderTo<span class="token punctuation">)</span><span class="token punctuation">;</span>
                        <span class="token keyword">long</span> s2 <span class="token operator">=</span> <span class="token class-name">System</span><span class="token punctuation">.</span><span class="token function">currentTimeMillis</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                        log<span class="token punctuation">.</span><span class="token function">info</span><span class="token punctuation">(</span><span class="token string">&quot;耗时...&quot;</span> <span class="token operator">+</span> <span class="token punctuation">(</span>s2 <span class="token operator">-</span> s1<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                        <span class="token keyword">return</span> timeId<span class="token punctuation">;</span>
                    <span class="token punctuation">}</span>
                <span class="token punctuation">}</span>
            <span class="token punctuation">}</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">long</span> s3 <span class="token operator">=</span> <span class="token class-name">System</span><span class="token punctuation">.</span><span class="token function">currentTimeMillis</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    log<span class="token punctuation">.</span><span class="token function">info</span><span class="token punctuation">(</span><span class="token string">&quot;耗时...&quot;</span> <span class="token operator">+</span> <span class="token punctuation">(</span>s3 <span class="token operator">-</span> s1<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">return</span> <span class="token keyword">null</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="_6、mq-秒杀监听" tabindex="-1"><a class="header-anchor" href="#_6、mq-秒杀监听" aria-hidden="true">#</a> 6、MQ 秒杀监听</h2><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token annotation punctuation">@Slf4j</span>
<span class="token annotation punctuation">@Component</span>
<span class="token annotation punctuation">@RabbitListener</span><span class="token punctuation">(</span>queues <span class="token operator">=</span> <span class="token string">&quot;order.seckill.order.queue&quot;</span><span class="token punctuation">)</span>
<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">OrderSeckillListener</span> <span class="token punctuation">{</span>

    <span class="token annotation punctuation">@Autowired</span>
    <span class="token keyword">private</span> <span class="token class-name">OrderService</span> orderService<span class="token punctuation">;</span>

    <span class="token annotation punctuation">@RabbitHandler</span>
    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">listener</span><span class="token punctuation">(</span><span class="token class-name">SeckillOrderTo</span> orderTo<span class="token punctuation">,</span> <span class="token class-name">Channel</span> channel<span class="token punctuation">,</span> <span class="token class-name">Message</span> message<span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">IOException</span> <span class="token punctuation">{</span>

        log<span class="token punctuation">.</span><span class="token function">info</span><span class="token punctuation">(</span><span class="token string">&quot;准备创建秒杀单的详细信息...&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

        <span class="token keyword">try</span> <span class="token punctuation">{</span>
            <span class="token comment">//创建秒杀单</span>
            orderService<span class="token punctuation">.</span><span class="token function">createSeckillOrder</span><span class="token punctuation">(</span>orderTo<span class="token punctuation">)</span><span class="token punctuation">;</span>
            channel<span class="token punctuation">.</span><span class="token function">basicAck</span><span class="token punctuation">(</span>message<span class="token punctuation">.</span><span class="token function">getMessageProperties</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getDeliveryTag</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token boolean">false</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">Exception</span> e<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            channel<span class="token punctuation">.</span><span class="token function">basicReject</span><span class="token punctuation">(</span>message<span class="token punctuation">.</span><span class="token function">getMessageProperties</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getDeliveryTag</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token boolean">true</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>

    <span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">createSeckillOrder</span><span class="token punctuation">(</span><span class="token class-name">SeckillOrderTo</span> orderTo<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token comment">//TODO 保存订单信息</span>
    <span class="token class-name">OrderEntity</span> orderEntity <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">OrderEntity</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    orderEntity<span class="token punctuation">.</span><span class="token function">setOrderSn</span><span class="token punctuation">(</span>orderTo<span class="token punctuation">.</span><span class="token function">getOrderSn</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    orderEntity<span class="token punctuation">.</span><span class="token function">setMemberId</span><span class="token punctuation">(</span>orderTo<span class="token punctuation">.</span><span class="token function">getMemberId</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    orderEntity<span class="token punctuation">.</span><span class="token function">setCreateTime</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">Date</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token class-name">BigDecimal</span> totalPrice <span class="token operator">=</span> orderTo<span class="token punctuation">.</span><span class="token function">getSeckillPrice</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">multiply</span><span class="token punctuation">(</span><span class="token class-name">BigDecimal</span><span class="token punctuation">.</span><span class="token function">valueOf</span><span class="token punctuation">(</span>orderTo<span class="token punctuation">.</span><span class="token function">getNum</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    orderEntity<span class="token punctuation">.</span><span class="token function">setPayAmount</span><span class="token punctuation">(</span>totalPrice<span class="token punctuation">)</span><span class="token punctuation">;</span>
    orderEntity<span class="token punctuation">.</span><span class="token function">setStatus</span><span class="token punctuation">(</span><span class="token class-name">OrderStatusEnum</span><span class="token punctuation">.</span><span class="token constant">CREATE_NEW</span><span class="token punctuation">.</span><span class="token function">getCode</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token comment">//保存订单</span>
    <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">save</span><span class="token punctuation">(</span>orderEntity<span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token comment">//保存订单项信息</span>
    <span class="token class-name">OrderItemEntity</span> orderItem <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">OrderItemEntity</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    orderItem<span class="token punctuation">.</span><span class="token function">setOrderSn</span><span class="token punctuation">(</span>orderTo<span class="token punctuation">.</span><span class="token function">getOrderSn</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    orderItem<span class="token punctuation">.</span><span class="token function">setRealAmount</span><span class="token punctuation">(</span>totalPrice<span class="token punctuation">)</span><span class="token punctuation">;</span>

    orderItem<span class="token punctuation">.</span><span class="token function">setSkuQuantity</span><span class="token punctuation">(</span>orderTo<span class="token punctuation">.</span><span class="token function">getNum</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token comment">//保存商品的spu信息</span>
    <span class="token class-name">R</span> spuInfo <span class="token operator">=</span> productFeignService<span class="token punctuation">.</span><span class="token function">getSpuInfoBySkuId</span><span class="token punctuation">(</span>orderTo<span class="token punctuation">.</span><span class="token function">getSkuId</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token class-name">SpuInfoVo</span> spuInfoData <span class="token operator">=</span> spuInfo<span class="token punctuation">.</span><span class="token function">getData</span><span class="token punctuation">(</span><span class="token string">&quot;data&quot;</span><span class="token punctuation">,</span> <span class="token keyword">new</span> <span class="token class-name">TypeReference</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">SpuInfoVo</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    orderItem<span class="token punctuation">.</span><span class="token function">setSpuId</span><span class="token punctuation">(</span>spuInfoData<span class="token punctuation">.</span><span class="token function">getId</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    orderItem<span class="token punctuation">.</span><span class="token function">setSpuName</span><span class="token punctuation">(</span>spuInfoData<span class="token punctuation">.</span><span class="token function">getSpuName</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    orderItem<span class="token punctuation">.</span><span class="token function">setSpuBrand</span><span class="token punctuation">(</span>spuInfoData<span class="token punctuation">.</span><span class="token function">getBrandName</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    orderItem<span class="token punctuation">.</span><span class="token function">setCategoryId</span><span class="token punctuation">(</span>spuInfoData<span class="token punctuation">.</span><span class="token function">getCatalogId</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token comment">//保存订单项数据</span>
    orderItemService<span class="token punctuation">.</span><span class="token function">save</span><span class="token punctuation">(</span>orderItem<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="_7、秒杀-高并发-关注问题" tabindex="-1"><a class="header-anchor" href="#_7、秒杀-高并发-关注问题" aria-hidden="true">#</a> 7、秒杀（高并发）关注问题</h2><p><img src="`+B+'" alt="image-20211118141137454"></p><p><img src="'+N+'" alt="image-20211118141454410"></p>',26);function vn(bn,gn){const a=i("ExternalLinkIcon");return o(),c("div",null,[l(" more "),H,n("p",null,[s('index引入: <html xmlns:th="'),n("a",W,[s("http://www.thymeleaf.org"),t(a)]),s('">')]),Q,n("p",null,[n("a",G,[s("http://yumall.com/api/product/category/list/tree"),t(a)])]),K,n("p",null,[s("nginx：login，reg，"),n("a",z,[s("auth.yumall.com"),t(a)]),s(";")]),X,n("p",null,[n("a",J,[s("https://market.console.aliyun.com/imageconsole/index.htm?#/bizlist?_k=fxmn6k"),t(a)])]),$,n("p",null,[n("a",Z,[s("https://open.weibo.com/connect"),t(a)])]),Y,n("p",null,[s('购物车cart：cartList.html：toTrade：window.location.href = "'),n("a",nn,[s("http://order.yumall.com/toTrade"),t(a)]),s('";')]),sn,n("p",null,[n("a",an,[s("http://yumall.com/api/ware/wareinfo/fare?addrId=120120"),t(a)])]),tn,n("p",null,[n("a",pn,[s("https://open.alipay.com/platform/home.htm"),t(a)])]),n("p",null,[s("沙箱环境使用说明："),n("a",en,[s("https://opendocs.alipay.com/support/01razc"),t(a)])]),n("p",null,[s("支付宝demo："),n("a",on,[s("https://opendocs.alipay.com/open/270/106291/"),t(a)])]),cn,n("p",null,[s("1、natapp: "),n("a",ln,[s("https://natapp.cn/"),t(a)])]),un,n("p",null,[s("3、花生壳:"),n("a",kn,[s("https://www.oray.com/"),t(a)])]),rn,n("p",null,[n("a",dn,[s("http://www.quartz-scheduler.org/documentation/quartz-2.3.0/tutorials/crontrigger.html"),t(a)])]),mn])}const hn=e(F,[["render",vn],["__file","spring-cloud-alibaba-note-high-level.html.vue"]]);export{hn as default};
