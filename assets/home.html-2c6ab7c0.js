const e=JSON.parse('{"key":"v-79fdd481","path":"/home.html","title":"快速导航","lang":"zh-CN","frontmatter":{"home":true,"title":"快速导航","icon":"arrow","article":false,"timeline":false,"heroImage":"/heihei.gif","heroText":"分类","tagline":"快速导航","actions":[{"text":"博客主页 🏠","link":"/","type":"default"},{"text":"文章中心","link":"/article/","type":"primary"},{"text":"关于本站","link":"/about/about-this","type":"primary"},{"text":"网站历史","link":"/history/history","type":"primary"}],"features":[{"title":"Java","icon":"java","details":"面向对象基础、数组、OOP核心、容器、IO、异常、servlet、日志、23设计模式、异步、分布式服务、JVM、swagger、OSS服务等。","link":"/java/java"},{"title":"数据库","icon":"mysql","details":"MySQL、Oracle","link":"/database/database"},{"title":"前端","icon":"html","details":"前端知识、vue框架、react框架","link":"/web/web"},{"title":"中间件","icon":"tool","details":"ES检索服务、Nginx、Redis、MQ","link":"/middleware/middleware"},{"title":"Linux","icon":"linux","details":"Linux基础知识、常用Linux命令实例、升级内核、网卡配置、YUM源配置、运维监控工具、ansible管理工具、jenkins自动部署、命令大全","link":"/linux/linux"},{"title":"kubernetes集群管理","icon":"/icons/k8s/k8s_32x32.png","details":"k8s集群管理、自动化部署 CI|CD、Helm、KubeSphere、Rancher、KubeOperator","link":"/k8s/k8s"},{"title":"Docker","icon":"/icons/docker/docker_32x32.png","details":"Docker基础到实战、安装应用服务、容器编排","link":"/docker/docker"},{"title":"开发工具","icon":"tool","details":"常用开发管理工具idea|eclipse、数据库管理工具、Git知识","link":"/tools/tools"}],"description":"提交规范 脚本提交：sh commit.sh 命令提交：git add -A &amp;&amp; pnpm run commit || git commit -m \\"选项: 描述\\" web端提交 简单描述格式：选项: 简要描述 可选项如下： break change feature 发布会增加主版本号（如1.1.1 –&gt; 2.0.0）**这个选择位于 feat 选项的：? Are there any breaking changes? ** feat: 新的功能，发布版本会增加次版本号（如1.0.0 –&gt; 1.1.0） fix: 修复bug，发布版本会增加修订版本号（如 1.0.0 –&gt; 1.0.1） docs: 只修改文档 style: 不影响代码含义的修改（比如：空格、格式化、添加缺少的分号等） refactor: 重构代码（既不修复错误，也不增加功能） perf: 性能优化 test: 添加测试或纠正现有测试 build: 影响构建系统或外部依赖的变化（如glup、npm等） ci: ci配置文件和脚本的改变 （如：Travis、Circle） chore: 其它不修改src或测试文件的改动 revert: 回滚之前的提交","head":[["meta",{"property":"og:url","content":"https://topjf.github.io/home.html"}],["meta",{"property":"og:site_name","content":"topjf"}],["meta",{"property":"og:title","content":"快速导航"}],["meta",{"property":"og:description","content":"提交规范 脚本提交：sh commit.sh 命令提交：git add -A &amp;&amp; pnpm run commit || git commit -m \\"选项: 描述\\" web端提交 简单描述格式：选项: 简要描述 可选项如下： break change feature 发布会增加主版本号（如1.1.1 –&gt; 2.0.0）**这个选择位于 feat 选项的：? Are there any breaking changes? ** feat: 新的功能，发布版本会增加次版本号（如1.0.0 –&gt; 1.1.0） fix: 修复bug，发布版本会增加修订版本号（如 1.0.0 –&gt; 1.0.1） docs: 只修改文档 style: 不影响代码含义的修改（比如：空格、格式化、添加缺少的分号等） refactor: 重构代码（既不修复错误，也不增加功能） perf: 性能优化 test: 添加测试或纠正现有测试 build: 影响构建系统或外部依赖的变化（如glup、npm等） ci: ci配置文件和脚本的改变 （如：Travis、Circle） chore: 其它不修改src或测试文件的改动 revert: 回滚之前的提交"}],["meta",{"property":"og:type","content":"website"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2023-01-05T12:27:17.000Z"}],["meta",{"property":"article:modified_time","content":"2023-01-05T12:27:17.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"WebPage\\",\\"name\\":\\"快速导航\\",\\"description\\":\\"提交规范 脚本提交：sh commit.sh 命令提交：git add -A &amp;&amp; pnpm run commit || git commit -m \\\\\\"选项: 描述\\\\\\" web端提交 简单描述格式：选项: 简要描述 可选项如下： break change feature 发布会增加主版本号（如1.1.1 –&gt; 2.0.0）**这个选择位于 feat 选项的：? Are there any breaking changes? ** feat: 新的功能，发布版本会增加次版本号（如1.0.0 –&gt; 1.1.0） fix: 修复bug，发布版本会增加修订版本号（如 1.0.0 –&gt; 1.0.1） docs: 只修改文档 style: 不影响代码含义的修改（比如：空格、格式化、添加缺少的分号等） refactor: 重构代码（既不修复错误，也不增加功能） perf: 性能优化 test: 添加测试或纠正现有测试 build: 影响构建系统或外部依赖的变化（如glup、npm等） ci: ci配置文件和脚本的改变 （如：Travis、Circle） chore: 其它不修改src或测试文件的改动 revert: 回滚之前的提交\\"}"]]},"headers":[{"level":2,"title":"提交规范","slug":"提交规范","link":"#提交规范","children":[]},{"level":2,"title":"添加新文件步骤","slug":"添加新文件步骤","link":"#添加新文件步骤","children":[]},{"level":2,"title":"md文件设置frontmatter","slug":"md文件设置frontmatter","link":"#md文件设置frontmatter","children":[]},{"level":2,"title":"技术选型","slug":"技术选型","link":"#技术选型","children":[]}],"git":{"createdTime":1671170523000,"updatedTime":1672921637000,"contributors":[{"name":"jinfang","email":"58760015+topsjf@users.noreply.github.com","commits":1},{"name":"jinfang","email":"topjfk@163.com","commits":1}]},"readingTime":{"minutes":1,"words":300},"filePathRelative":"home.md","localizedDate":"2022年12月16日","excerpt":"<h2> 提交规范</h2>\\n<p><strong>脚本提交</strong>：sh <a href=\\"http://commit.sh\\" target=\\"_blank\\" rel=\\"noopener noreferrer\\">commit.sh</a></p>\\n<p><strong>命令提交</strong>：git add -A  &amp;&amp; pnpm run commit || git commit -m \\"选项: 描述\\"</p>\\n<p><strong>web端提交</strong> 简单描述格式：选项: 简要描述</p>\\n<p><em>可选项如下</em>：</p>\\n<ul>\\n<li>break change feature 发布会增加主版本号（如1.1.1 –&gt; 2.0.0）**这个选择位于 feat 选项的：? Are there any breaking changes? **</li>\\n<li>feat: 新的功能，发布版本会增加次版本号（如1.0.0 –&gt; 1.1.0）</li>\\n<li>fix: 修复bug，发布版本会增加修订版本号（如 1.0.0 –&gt; 1.0.1）</li>\\n<li>docs: 只修改文档</li>\\n<li>style: 不影响代码含义的修改（比如：空格、格式化、添加缺少的分号等）</li>\\n<li>refactor: 重构代码（既不修复错误，也不增加功能）</li>\\n<li>perf: 性能优化</li>\\n<li>test: 添加测试或纠正现有测试</li>\\n<li>build: 影响构建系统或外部依赖的变化（如glup、npm等）</li>\\n<li>ci: ci配置文件和脚本的改变 （如：Travis、Circle）</li>\\n<li>chore: 其它不修改src或测试文件的改动</li>\\n<li>revert: 回滚之前的提交</li>\\n</ul>","autoDesc":true}');export{e as data};
