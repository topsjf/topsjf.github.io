import{_ as s,V as t,W as i,X as e,Y as a,Z as l,$ as r,G as d}from"./framework-ed4f969a.js";const c={},o=e("h2",{id:"提交规范",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#提交规范","aria-hidden":"true"},"#"),a(" 提交规范")],-1),p=e("strong",null,"脚本提交",-1),u={href:"http://commit.sh",target:"_blank",rel:"noopener noreferrer"},m=r(`<p><strong>命令提交</strong>：git add -A &amp;&amp; pnpm run commit || git commit -m &quot;选项: 描述&quot;</p><p><strong>web端提交</strong> 简单描述格式：选项: 简要描述</p><p><em>可选项如下</em>：</p><ul><li>break change feature 发布会增加主版本号（如1.1.1 –&gt; 2.0.0）**这个选择位于 feat 选项的：? Are there any breaking changes? **</li><li>feat: 新的功能，发布版本会增加次版本号（如1.0.0 –&gt; 1.1.0）</li><li>fix: 修复bug，发布版本会增加修订版本号（如 1.0.0 –&gt; 1.0.1）</li><li>docs: 只修改文档</li><li>style: 不影响代码含义的修改（比如：空格、格式化、添加缺少的分号等）</li><li>refactor: 重构代码（既不修复错误，也不增加功能）</li><li>perf: 性能优化</li><li>test: 添加测试或纠正现有测试</li><li>build: 影响构建系统或外部依赖的变化（如glup、npm等）</li><li>ci: ci配置文件和脚本的改变 （如：Travis、Circle）</li><li>chore: 其它不修改src或测试文件的改动</li><li>revert: 回滚之前的提交</li></ul><h2 id="添加新文件步骤" tabindex="-1"><a class="header-anchor" href="#添加新文件步骤" aria-hidden="true">#</a> 添加新文件步骤</h2><p>1、创建文件 <code>./docs/java/demo.md</code></p><p>2、添加侧边栏路由 <code>.vuepress/sidebars/{index.ts,java.ts}</code></p><div class="language-json line-numbers-mode" data-ext="json"><pre class="language-json"><code><span class="token punctuation">{</span>
  text<span class="token operator">:</span> <span class="token string">&quot;Java&quot;</span><span class="token punctuation">,</span>
  icon<span class="token operator">:</span> <span class="token string">&quot;java&quot;</span><span class="token punctuation">,</span>
  prefix<span class="token operator">:</span> <span class="token string">&quot;java/&quot;</span><span class="token punctuation">,</span>
  collapsable<span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>
  children<span class="token operator">:</span> <span class="token punctuation">[</span>
    <span class="token string">&quot;demo&quot;</span><span class="token punctuation">,</span>
  <span class="token punctuation">]</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>自动读取md文件并配置侧边栏目录</p><blockquote><p>children: &quot;structure&quot;,</p></blockquote><h2 id="md文件设置frontmatter" tabindex="-1"><a class="header-anchor" href="#md文件设置frontmatter" aria-hidden="true">#</a> md文件设置frontmatter</h2><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>#顶置，你可以将sticky设置为number来设置它们的顺序。数值大的文章会排列在前面。
sticky: true
#收藏
star: true
#是否是文章，或者 plugins.blog.filter 自定义哪些页面是文章。
article: false
#是否显示在时间线
timeline: false
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="技术选型" tabindex="-1"><a class="header-anchor" href="#技术选型" aria-hidden="true">#</a> 技术选型</h2><ul><li>设置淘宝源</li></ul><p>配置查看：npm config list</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">npm</span> config <span class="token builtin class-name">set</span> registry https://registry.npm.taobao.org
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><ul><li>安装Pnpm：</li></ul><p>第一次安装时执行：<code>corepack enable</code></p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>corepack prepare pnpm@7.22.0 <span class="token parameter variable">--activate</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>卸载：</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>corepack disable <span class="token function">pnpm</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><ul><li>创建初始化项目：</li></ul><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">pnpm</span> create vuepress-theme-hope@next docs
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">npm</span> init vuepress-theme-hope@next docs

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><blockquote><p>docs这里的 docs 是一个参数，代表 VuePress 项目的文件夹名称，在本教程中，我们将 VuePress 项目生成至项目文件夹下的 <code>docs</code>子文件夹。如果你有需求，你可以更改此参数来使用一个新文件夹，或使用 <code>.</code> 直接使用当前的文件夹。</p></blockquote><ul><li>技术版本列表</li></ul><table><thead><tr><th>技术</th><th>地址</th></tr></thead><tbody><tr><td>node</td><td><a href="https://www.npmjs.com/package/node" target="_blank">16.x</a></td></tr><tr><td>npm</td><td><a href="https://www.npmjs.com/package/npm" target="_blank">8.x</a></td></tr><tr><td>pnpm</td><td><a href="https://www.npmjs.com/package/pnpm" target="_blank">7.x</a></td></tr><tr><td>vue</td><td><a href="https://www.npmjs.com/package/vue" target="_blank">🚀🚀</a></td></tr><tr><td>vuepress-theme-hope</td><td><a href="https://www.npmjs.com/package/vuepress-theme-hope" target="_blank">🚀🚀</a></td></tr><tr><td>vuepress</td><td><a href="https://www.npmjs.com/package/vuepress" target="_blank">🚀🚀</a></td></tr></tbody></table>`,27);function v(h,b){const n=d("ExternalLinkIcon");return t(),i("div",null,[o,e("p",null,[p,a("：sh "),e("a",u,[a("commit.sh"),l(n)])]),m])}const k=s(c,[["render",v],["__file","home.html.vue"]]);export{k as default};
