import{_ as i,V as l,W as t,a0 as o,X as a,Y as n,Z as s,$ as p,G as r}from"./framework-ed4f969a.js";const c="/assets/true-image-20220728113402423-868bec6f.png",d="/assets/true-image-20220728113949497-12e14ec5.png",b={},u=a("h1",null,"ansible安装与基础概念",-1),h={href:"http://ansible.com.cn/docs/intro.html",target:"_blank",rel:"noopener noreferrer"},m={href:"https://pan.baidu.com/s/1fkosURl4HaYZALtSjKvcKg",target:"_blank",rel:"noopener noreferrer"},v=p(`<h2 id="虚拟机主机分配" tabindex="-1"><a class="header-anchor" href="#虚拟机主机分配" aria-hidden="true">#</a> 虚拟机主机分配</h2><p>8+2+200G</p><p>控制端-admin：192.168.0.118</p><p>被控制端-n1：192.168.0.8</p><p>被控制端-n2：192.168.0.9</p><p>被控制端-n3：192.168.0.10</p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>vi /etc/selinux/config

把 SELINUX=enforce   改成 disabled
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="一、安装" tabindex="-1"><a class="header-anchor" href="#一、安装" aria-hidden="true">#</a> 一、安装</h2><p>依赖</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>查看 epel-release 版本：yum list <span class="token operator">|</span> <span class="token function">grep</span> epel-release

yum <span class="token function">install</span> <span class="token parameter variable">-y</span> epel-release.noarch
yum <span class="token function">install</span> <span class="token parameter variable">-y</span> python2

yum <span class="token parameter variable">-y</span> clean all <span class="token operator">&amp;&amp;</span> yum <span class="token parameter variable">-y</span> makecache <span class="token operator">&amp;&amp;</span> yum <span class="token parameter variable">-y</span> update <span class="token operator">&amp;&amp;</span> yum <span class="token parameter variable">-y</span> repolist all
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>只需要在主控制端安装：<code>yum install -y ansible</code> yum remove -y ansible</p><p>ansible --version ： 2.9.27</p><h3 id="目录结构" tabindex="-1"><a class="header-anchor" href="#目录结构" aria-hidden="true">#</a> 目录结构</h3><p>安装目录如下(yum安装)：</p><p>配置文件目录：/etc/ansible/【hosts、ansible、roles】</p><p>执行文件目录：/usr/bin/ansible*</p><p>Lib库依赖目录：/usr/lib/pythonX.X/site-packages/ansible/</p><p>Help文档目录：/usr/share/doc/ansible-X.X.X/</p><p>Man文档目录：/usr/share/man/man1/</p><h3 id="赋予普通用户权限" tabindex="-1"><a class="header-anchor" href="#赋予普通用户权限" aria-hidden="true">#</a> 赋予普通用户权限</h3><p>将a用户添加到root组：usermod -aG root a</p><p>赋予a用户对ansible的权限管理：chmod -R 755 /etc/ansible</p><p>赋予a用户对ansible的所属组管理：chown -R root:a /etc/ansible</p><h2 id="二、概念" tabindex="-1"><a class="header-anchor" href="#二、概念" aria-hidden="true">#</a> 二、概念</h2><p>ansible是新出现的自动化运维工具，基于Python开发，集合了众多运维工具（puppet、chef、func、fabric）的优点，实现了批量系统配置、批量程序部署、批量运行命令等功能。</p><h3 id="ansible能做什么" tabindex="-1"><a class="header-anchor" href="#ansible能做什么" aria-hidden="true">#</a> ansible能做什么？</h3><p>正如其他配置管理工具一样，ansible可以帮助我们完成一些批量任务，或者完成一些需要经常重复的工作。</p><p>比如：同时在100台服务器上安装nginx服务，并在安装后启动它们。</p><p>比如：将某个文件一次性拷贝到100台服务器上。</p><p>比如：每当有新服务器加入工作环境时，你都要为新服务器部署redis服务，也就是说你需要经常重复的完成相同的工作。</p><h3 id="特点" tabindex="-1"><a class="header-anchor" href="#特点" aria-hidden="true">#</a> 特点</h3><ol><li>部署简单，只需在主控端部署Ansible环境，被控端无需做任何操作；</li><li>默认使用SSH协议对设备进行管理；</li><li>有大量常规运维操作模块，可实现日常绝大部分操作；</li><li>配置简单、功能强大、扩展性强；</li><li>支持API及自定义模块，可通过Python轻松扩展；</li><li>通过Playbooks来定制强大的配置、状态管理；</li><li>轻量级，无需在客户端安装agent，更新时，只需在操作机上进行一次更新即可；</li><li>提供一个功能强大、操作性强的Web管理界面和REST API接口——AWX平台。</li></ol><h3 id="架构图" tabindex="-1"><a class="header-anchor" href="#架构图" aria-hidden="true">#</a> 架构图</h3><p><img src="`+c+'" alt=""></p><h3 id="主要模块" tabindex="-1"><a class="header-anchor" href="#主要模块" aria-hidden="true">#</a> 主要模块</h3><p><code>Ansible</code>：Ansible核心程序。</p><p><code>HostInventory</code>：记录由Ansible管理的主机信息，包括端口、密码、ip等。</p><p><code>Playbooks</code>：“剧本”YAML格式文件，多个任务定义在一个文件中，定义主机需要调用哪些模块来完成的功能。</p><p><code>CoreModules</code>：<strong>核心模块</strong>，主要操作是通过调用核心模块来完成管理任务。</p><p><code>CustomModules</code>：自定义模块，完成核心模块无法完成的功能，支持多种语言。</p><p><code>ConnectionPlugins</code>：连接插件，Ansible和Host通信使用</p><h3 id="任务执行" tabindex="-1"><a class="header-anchor" href="#任务执行" aria-hidden="true">#</a> 任务执行</h3><h4 id="ansible-任务执行模式" tabindex="-1"><a class="header-anchor" href="#ansible-任务执行模式" aria-hidden="true">#</a> ansible 任务执行模式</h4><p>Ansible 系统由控制主机对被管节点的操作方式可分为两类，即<code>adhoc</code>和<code>playbook</code>：</p><ul><li>ad-hoc模式(点对点模式) 　使用单个模块，支持批量执行单条命令。ad-hoc 命令是一种可以快速输入的命令，而且不需要保存起来的命令。<strong>就相当于bash中的一句话shell。</strong></li><li>playbook模式(剧本模式) 　是Ansible主要管理方式，也是Ansible功能强大的关键所在。<strong>playbook通过多个task集合完成一类功能</strong>，如Web服务的安装部署、数据库服务器的批量备份等。可以简单地把playbook理解为通过组合多条ad-hoc操作的配置文件。</li></ul><h4 id="任务流程" tabindex="-1"><a class="header-anchor" href="#任务流程" aria-hidden="true">#</a> 任务流程</h4><p><img src="'+d+`" alt=""></p><p>简单理解就是Ansible在运行时， 首先读取<code>ansible.cfg</code>中的配置， 根据规则获取<code>Inventory</code>中的管理主机列表， 并行的在这些主机中执行配置的任务， 最后等待执行返回的结果。</p><h4 id="命令执行过程" tabindex="-1"><a class="header-anchor" href="#命令执行过程" aria-hidden="true">#</a> 命令执行过程</h4><ol><li>加载自己的配置文件，默认<code>/etc/ansible/ansible.cfg</code>；</li><li>查找对应的主机配置文件，找到要执行的主机或者组；</li><li>加载自己对应的模块文件，如 command；</li><li>通过ansible将模块或命令生成对应的临时py文件(python脚本)， 并将该文件传输至远程服务器；</li><li>对应执行用户的家目录的<code>.ansible/tmp/XXX/XXX.PY</code>文件；</li><li>给文件 +x 执行权限；</li><li>执行并返回结果；</li><li>删除临时py文件，<code>sleep 0</code>退出；</li></ol><h2 id="三、配置" tabindex="-1"><a class="header-anchor" href="#三、配置" aria-hidden="true">#</a> 三、配置</h2><h3 id="配置文件查找顺序" tabindex="-1"><a class="header-anchor" href="#配置文件查找顺序" aria-hidden="true">#</a> 配置文件查找顺序</h3><p>ansible与我们其他的服务在这一点上有很大不同，这里的配置文件查找是从多个地方找的，顺序如下：</p><ol><li>检查环境变量<code>ANSIBLE_CONFIG</code>指向的路径文件(export ANSIBLE_CONFIG=/etc/ansible.cfg)；</li><li><code>~/.ansible.cfg</code>，检查当前目录下的ansible.cfg配置文件；</li><li><code>/etc/ansible.cfg</code>检查etc目录的配置文件。</li></ol><h3 id="ansible-配置文件" tabindex="-1"><a class="header-anchor" href="#ansible-配置文件" aria-hidden="true">#</a> ansible 配置文件</h3><p>ansible 的配置文件为<code>/etc/ansible/ansible.cfg</code>，常见的参数：</p><div class="language-ini line-numbers-mode" data-ext="ini"><pre class="language-ini"><code><span class="token key attr-name">inventory</span> <span class="token punctuation">=</span> <span class="token value attr-value">/etc/ansible/hosts		#这个参数表示资源清单inventory文件的位置</span>
<span class="token key attr-name">library</span> <span class="token punctuation">=</span> <span class="token value attr-value">/usr/share/ansible		#指向存放Ansible模块的目录，支持多个目录方式，只要用冒号（：）隔开就可以</span>
<span class="token key attr-name">roles_path</span> <span class="token punctuation">=</span> <span class="token value attr-value">/etc/ansible/roles		#指定角色目录</span>
<span class="token key attr-name">forks</span> <span class="token punctuation">=</span> <span class="token value attr-value">5		#并发连接数，默认为5</span>
<span class="token key attr-name">sudo_user</span> <span class="token punctuation">=</span> <span class="token value attr-value">root		#设置默认执行命令的用户</span>
<span class="token key attr-name">remote_port</span> <span class="token punctuation">=</span> <span class="token value attr-value">22		#指定连接被管节点的管理端口，默认为22端口，建议修改，能够更加安全</span>
<span class="token key attr-name">host_key_checking</span> <span class="token punctuation">=</span> <span class="token value attr-value">False		#设置是否检查SSH主机的密钥，值为True/False。关闭后第一次连接不会提示配置实例</span>
<span class="token key attr-name">timeout</span> <span class="token punctuation">=</span> <span class="token value attr-value">60		#设置SSH连接的超时时间，单位为秒</span>
<span class="token key attr-name">log_path</span> <span class="token punctuation">=</span> <span class="token value attr-value">/var/log/ansible.log		#指定一个存储ansible日志的文件（默认不记录日志）</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="ansible-主机清单-inventory" tabindex="-1"><a class="header-anchor" href="#ansible-主机清单-inventory" aria-hidden="true">#</a> ansible 主机清单 inventory</h3><p>vim /etc/ansible/hosts</p><p>在配置文件中，里面保存的是一些 ansible 需要连接管理的主机列表。我们可以来看看他的定义方式：</p><p>[root@admin ~]# vim /etc/ansible/hosts</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>mail.example.com
<span class="token number">192.168</span>.0.120

<span class="token comment"># 自定义主机与组</span>
<span class="token punctuation">[</span>web<span class="token punctuation">]</span>
foo.example.com
<span class="token number">192.168</span>.0.8
<span class="token number">192.168</span>.0.121
<span class="token comment">## 端口号不是默认设置时</span>
bar.example.com:2088
<span class="token comment">## 一组相似的 hostname</span>
www<span class="token punctuation">[</span>001:006<span class="token punctuation">]</span>.example.com
<span class="token comment"># ssh登录</span>
<span class="token number">192.168</span>.0.9 <span class="token assign-left variable">ansible_port</span><span class="token operator">=</span><span class="token number">22</span> <span class="token assign-left variable">ansible_user</span><span class="token operator">=</span>root <span class="token assign-left variable">ansible_ssh_pass</span><span class="token operator">=</span>123456a
<span class="token comment"># 设置别名</span>
test12 <span class="token assign-left variable">ansible_host</span><span class="token operator">=</span><span class="token number">192.168</span>.0.12 <span class="token assign-left variable">ansible_port</span><span class="token operator">=</span><span class="token number">22</span> <span class="token assign-left variable">ansible_user</span><span class="token operator">=</span>root <span class="token assign-left variable">ansible_ssh_pass</span><span class="token operator">=</span>123456a

<span class="token punctuation">[</span>db<span class="token punctuation">]</span>
<span class="token number">192.168</span>.0.122
two.example.com
<span class="token comment">## 主机范围</span>
db-<span class="token punctuation">[</span>a:f<span class="token punctuation">]</span>.example.com


<span class="token comment"># 静态IP地址,希望设置一些别名,但不是在系统的 host 文件中设置,又或者你是通过隧道在连接</span>
<span class="token comment"># 通过 “jumper” 别名,会连接 192.168.1.50:5555</span>
jumper <span class="token assign-left variable">ansible_ssh_port</span><span class="token operator">=</span><span class="token number">5555</span> <span class="token assign-left variable">ansible_ssh_host</span><span class="token operator">=</span><span class="token number">192.168</span>.1.50
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>方括号 []</strong> 是组名,用于对系统进行分类,便于对不同系统进行个别的管理.</p><p>一个系统可以属于不同的组,比如一台服务器可以同时属于 webserver组 和 dbserver组.这时属于两个组的变量都可以为这台主机所用</p><h2 id="四、ansible-常用命令" tabindex="-1"><a class="header-anchor" href="#四、ansible-常用命令" aria-hidden="true">#</a> 四、ansible 常用命令</h2><h3 id="ansible-命令集" tabindex="-1"><a class="header-anchor" href="#ansible-命令集" aria-hidden="true">#</a> ansible 命令集</h3><p><code>/usr/bin/ansible</code>　　Ansibe AD-Hoc 临时命令执行工具，常用于临时命令的执行</p><p><code>/usr/bin/ansible-doc</code> 　　Ansible 模块功能查看工具</p><p><code>/usr/bin/ansible-galaxy</code>　　下载/上传优秀代码或Roles模块 的官网平台，基于网络的</p><p><code>/usr/bin/ansible-playbook</code>　　Ansible 定制自动化的任务集编排工具</p><p><code>/usr/bin/ansible-pull</code>　　Ansible远程执行命令的工具，拉取配置而非推送配置（使用较少，海量机器时使用，对运维的架构能力要求较高）</p><p><code>/usr/bin/ansible-vault</code>　　Ansible 文件加密工具</p><p><code>/usr/bin/ansible-console</code>　　Ansible基于Linux Consoble界面可与用户交互的命令执行工具</p><p>其中，我们比较常用的是<code>/usr/bin/ansible</code>和<code>/usr/bin/ansible-playbook</code>。</p>`,74);function k(g,f){const e=r("ExternalLinkIcon");return l(),t("div",null,[o(" more "),u,a("p",null,[a("a",h,[n("ansible 中文指南"),s(e)])]),a("p",null,[a("a",m,[n("本节示例文件 提取码：1234"),s(e)])]),v])}const _=i(b,[["render",k],["__file","ansible-basis.html.vue"]]);export{_ as default};
