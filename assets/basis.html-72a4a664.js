import{_ as o,a as r}from"./true-image-20220913105720580-45102722.js";import{_ as c,a as d,b as u}from"./true-clip_image010-ef83438d.js";import{_ as m}from"./true-image-20220913120727887-360cb966.js";import{_ as b}from"./true-image-20220913170020223-b797836d.js";import{_ as v,a as k}from"./true-image-20220913105831615-45102722.js";import{_ as h,a as g}from"./true-image-20220913173343290-7b97ff56.js";import{_ as f,V as x,W as _,a0 as E,X as n,Y as s,Z as a,a1 as t,$ as p,G as i}from"./framework-ed4f969a.js";const w="/assets/true-Linux线路图-0c15bd51.png",y="/assets/true-image-20220910220451615-0d89961d.png",B="/assets/true-image-20220910215605979-9de82715.png",q="/assets/true-image-20220913134907915-16972624.png",A="/assets/true-clip_image013-b01c33a2.jpg",S="/assets/true-clip_image015-b27ccee0.png",I="/assets/true-clip_image017-1e7f866f.png",L="/assets/true-clip_image019-452e9288.png",D="/assets/true-clip_image021-3a5b0e70.png",M="/assets/true-clip_image023-7c70457d.png",C="/assets/true-clip_image025-177c1a54.png",P="/assets/true-clip_image027-730c6296.png",T="/assets/true-clip_image029-e55d7e36.png",U="/assets/true-clip_image031-3b6d3409.png",R="/assets/true-clip_image033-1c8cc81d.png",G={},F=n("h1",null,"linux笔记",-1),N=n("h2",{id:"vmware安装",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#vmware安装","aria-hidden":"true"},"#"),s(" VMware安装")],-1),z={href:"https://blog.csdn.net/qq_42476834/article/details/104618910",target:"_blank",rel:"noopener noreferrer"},O=p('<p><strong>如果需要自定义分区请注意看一下：自定义分区设置</strong></p><blockquote><p>linux一般来说分为4个基本区：</p><p><em>用户分区</em>：home——保存用户信息</p><p><em>启动分区</em>：boot ——保存系统启动的数据，一般100到200m</p><p><em>交换分区</em>：swap——理解为虚拟内存，真实内存不够的时候临时会使用swap分区，一般是内存的两倍</p><p><em>根分区</em>：/</p></blockquote><h2 id="linux学习路线" tabindex="-1"><a class="header-anchor" href="#linux学习路线" aria-hidden="true">#</a> Linux学习路线</h2><p><img src="'+w+'" alt=""></p><p><img src="'+y+'" alt=""></p><p><img src="'+B+'" alt=""></p><h2 id="linux-内核" tabindex="-1"><a class="header-anchor" href="#linux-内核" aria-hidden="true">#</a> Linux 内核</h2><p><strong>系统结构</strong></p><p><img src="'+q+'" alt=""></p><h2 id="linux-目录介绍" tabindex="-1"><a class="header-anchor" href="#linux-目录介绍" aria-hidden="true">#</a> linux 目录介绍</h2><table><thead><tr><th>目录名称</th><th>描述</th></tr></thead><tbody><tr><td>/</td><td>虚拟目录的根目录。通常不会在这里存储文件</td></tr><tr><td>/bin</td><td>二进制目录，存放许多用户级的GNU工具</td></tr><tr><td>/boot</td><td>启动目录，存放启动文件</td></tr><tr><td>/dev</td><td>设备目录，Linux在这里创建设备节点</td></tr><tr><td>/etc</td><td>系统配置文件目录</td></tr><tr><td>/home</td><td>主目录，Linux在这里创建用户目录</td></tr><tr><td>/lib</td><td>库目录，存放系统和应用程序的库文件</td></tr><tr><td>/media</td><td>媒体目录，可移动媒体设备的常用挂载点</td></tr><tr><td>/mnt</td><td>挂载目录，另一个可移动媒体设备的常用挂载点</td></tr><tr><td>/opt</td><td>可选目录，常用于存放第三方软件包和数据文件</td></tr><tr><td>/proc</td><td>进程目录，存放现有硬件及当前进程的相关信息</td></tr><tr><td>/root</td><td>root用户的主目录</td></tr><tr><td>/sbin</td><td>系统二进制目录，存放许多GNU管理员级工具</td></tr><tr><td>/run</td><td>运行目录，存放系统运作时的运行时数据</td></tr><tr><td>/srv</td><td>服务目录，存放本地服务的相关文件</td></tr><tr><td>/sys</td><td>系统目录，存放系统硬件信息的相关文件</td></tr><tr><td>/tmp</td><td>临时目录，可以在该目录中创建和删除临时工作文件</td></tr><tr><td>/usr</td><td>用户二进制目录，大量用户级的GNU工具和数据文件都存储在这里</td></tr><tr><td>/var</td><td>可变目录，用以存放经常变化的文件，比如日志文件</td></tr></tbody></table><p><img src="'+A+'" alt=""></p><p><img src="'+S+'" alt=""></p><ul><li><p><strong>可分享的：</strong> 可以分享给其他系统挂载使用的目录，所以包括执行文件与用户的邮件等数据， 是能够分享给 网络上其他主机挂载用的目录；</p></li><li><p><strong>不可分享的：</strong> 自己机器上面运作的装置文件或者是与程序有关的 socket 文件等， 由于仅与自身机器有关， 所以当然就不适合分享给其他主机了。</p></li><li><p><strong>不变的：</strong> 有些数据是不会经常变动的，跟随着 distribution 而不变动。 例如函式库、文件说明文件、系统管 理员所管理的主机服务配置文件等等；</p></li><li><p><strong>可变动的：</strong> 经常改变的数据，例如登录文件、一般用户可自行收受的新闻组等</p></li></ul><p>Filesystem Hierarchy Standard (FHS)标准：已安装软件通常放置于哪个目录</p><ul><li>/ (root, 根目录)：与开机系统有关；</li><li>/usr (unix software resource)：与软件安装/执行有关；</li><li>/var (variable)：与系统运作过程有关。</li></ul><p><img src="'+I+'" alt=""></p><p><img src="'+L+'" alt=""></p><p><img src="'+D+'" alt=""></p><p><img src="'+M+'" alt=""></p><p><img src="'+C+'" alt=""></p><p><img src="'+P+'" alt=""></p><p><img src="'+T+'" alt=""></p><p><img src="'+U+'" alt=""></p><p><img src="'+R+'" alt=""></p><h2 id="linux-文件系统" tabindex="-1"><a class="header-anchor" href="#linux-文件系统" aria-hidden="true">#</a> Linux 文件系统</h2><table><thead><tr><th>文件系统</th><th>描 述</th></tr></thead><tbody><tr><td>ext</td><td>Linux扩展文件系统，最早的Linux文件系统</td></tr><tr><td>ext2</td><td>第二扩展文件系统，在ext的基础上提供了更多的功能</td></tr><tr><td>ext3</td><td>第三扩展文件系统，支持日志功能</td></tr><tr><td>ext4</td><td>第四扩展文件系统，支持高级日志功能</td></tr><tr><td>hpfs</td><td>OS/2高性能文件系统</td></tr><tr><td>jfs</td><td>IBM日志文件系统</td></tr><tr><td>iso9660</td><td>ISO 9660文件系统（CD-ROM）</td></tr><tr><td>minix</td><td>MINIX文件系统</td></tr><tr><td>msdos</td><td>微软的FAT16</td></tr><tr><td>ncp</td><td>Netware文件系统</td></tr><tr><td>nfs</td><td>网络文件系统</td></tr><tr><td>ntfs</td><td>支持Microsoft NT文件系统</td></tr><tr><td>proc</td><td>访问系统信息</td></tr><tr><td>ReiserFS</td><td>高级Linux文件系统，能提供更好的性能和硬盘恢复功能</td></tr><tr><td>smb</td><td>支持网络访问的Samba SMB文件系统</td></tr><tr><td>sysv</td><td>较早期的Unix文件系统</td></tr><tr><td>ufs</td><td>BSD文件系统</td></tr><tr><td>umsdos</td><td>建立在msdos上的类Unix文件系统</td></tr><tr><td>vfat</td><td>Windows 95文件系统（FAT32）</td></tr><tr><td>XFS</td><td>高性能64位日志文件系统</td></tr></tbody></table><p>Linux内核采用虚拟文件系统（Virtual File System，VFS）作为和每个文件系统交互的接口。这为Linux内核同任何类型文件系统通信提供了一个标准接口。当每个文件系统都被挂载和使时，VFS将信息都缓存在内存中。</p><h2 id="linux发行版" tabindex="-1"><a class="header-anchor" href="#linux发行版" aria-hidden="true">#</a> Linux发行版</h2><p><strong>核心Linux发行版</strong></p><table><thead><tr><th>发行版</th><th>描 述</th></tr></thead><tbody><tr><td>Slackware</td><td>最早的Linux发行版中的一员，在Linux极客中比较流行</td></tr><tr><td>Red Hat</td><td>主要用于Internet服务器的商业发行版</td></tr><tr><td>Fedora</td><td>从Red Hat分离出的家用发行版</td></tr><tr><td>Gentoo</td><td>为高级Linux用户设计的发行版，仅包含Linux源代码</td></tr><tr><td>openSUSE</td><td>用于商用和家用的发行版</td></tr><tr><td>Debian</td><td>在Linux专家和商用Linux产品中流行的发行版</td></tr></tbody></table><p><strong>特定用途的Linux发行版</strong></p><table><thead><tr><th>发行版</th><th>描述</th></tr></thead><tbody><tr><td>CentOS</td><td>一款基于Red Hat企业版Linux源代码构建的免费发行版</td></tr><tr><td>Ubuntu</td><td>一款用于学校和家庭的免费发行版</td></tr><tr><td>PCLinuxOS</td><td>一款用于家庭和办公的免费发行版</td></tr><tr><td>Mint</td><td>一款用于家庭娱乐的免费发行版</td></tr><tr><td>dyne:bolic</td><td>一款用于音频和MIDI应用的免费发行版</td></tr><tr><td>Puppy Linux</td><td>一款适用于老旧PC的小型免费发行版</td></tr></tbody></table><p><strong>Linux LiveCD发行版</strong></p><table><thead><tr><th>发行版</th><th>描述</th></tr></thead><tbody><tr><td>Knoppix</td><td>来自德国的一款Linux发行版，也是最早的LiveCD Linux</td></tr><tr><td>PCLinuxOS</td><td>一款成熟的LiveCD形式的Linux发行版</td></tr><tr><td>Ubuntu</td><td>为多种语言设计的世界级Linux项目</td></tr><tr><td>Slax</td><td>基于Slackware Linux的一款LiveCD Linux</td></tr><tr><td>Puppy Linux</td><td>为老旧PC设计的一款全功能Linux</td></tr></tbody></table><h2 id="目录文件管理" tabindex="-1"><a class="header-anchor" href="#目录文件管理" aria-hidden="true">#</a> 目录文件管理</h2><h3 id="cd-切换目录" tabindex="-1"><a class="header-anchor" href="#cd-切换目录" aria-hidden="true">#</a> cd 切换目录</h3>',37),K=p('<p>①、命令名称：cd</p><p>②、英文原意：change directory</p><p>③、命令所在路径：<strong>shell 内置命令</strong></p><p>④、执行权限：所有用户</p><p>⑤、功能描述：切换目录</p><p>⑥、语法： cd【目录名】</p><p><strong>例子：</strong></p><p>切换到指定目录：<code>cd /home</code></p><p>回到上一级目录：<code>cd ..</code></p><p>还是在当前目录：<code>cd .</code></p><p>返回上两级目录：<code>cd ../..</code></p><p>返回进入此目录之前所在的目录：<code>cd - </code></p><h3 id="ls-显示目录文件" tabindex="-1"><a class="header-anchor" href="#ls-显示目录文件" aria-hidden="true">#</a> ls 显示目录文件</h3>',13),V=p(`<p>①、命令名称：ls</p><p>②、英文原意：list</p><p>③、命令所在路径：/bin/ls</p><p>④、执行权限：所有用户</p><p>⑤、功能描述：显示目录文件</p><p>⑥、语法： ls 选项[-al]】[文件或目录]</p><blockquote><p>选项：</p><p><strong>-a</strong> 显示所有文件，包括隐藏文件</p><p><strong>-l</strong> 详细信息显示—— ls-l 可以简写成 ll</p><p><strong>-d</strong> 仅显示目录名，而不显示目录下的内容列表</p><p><strong>-h</strong> 人性化显示（hommization）</p><p><strong>-i</strong> 查看任意一个文件的i节点（类似于身份证唯一信息）</p><p><strong>-t</strong> 用文件和目录的更改时间排序；可以用第一个显示的文件判断最近修改的文件</p><p><strong>-F</strong> 轻松区分文件和目录: /代表目录 @代表链接文件</p><p><strong>-R</strong> 递归选项；它列出了当前目录下包含的子目录中的文件。如果目录很多，这个输出就会很长。</p></blockquote><p><strong>注意：</strong> <code>.</code> 开头的文件除非是目录，否则就是隐藏文件</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token punctuation">[</span>root@admin /<span class="token punctuation">]</span><span class="token comment"># ls -all</span>
总用量 <span class="token number">24</span>
dr-xr-xr-x.  <span class="token number">18</span> root root  <span class="token number">272</span> <span class="token number">8</span>月  <span class="token number">10</span> <span class="token number">17</span>:36 <span class="token builtin class-name">.</span>
dr-xr-xr-x.  <span class="token number">18</span> root root  <span class="token number">272</span> <span class="token number">8</span>月  <span class="token number">10</span> <span class="token number">17</span>:36 <span class="token punctuation">..</span>
-rw-r--r--    <span class="token number">1</span> root root    <span class="token number">0</span> <span class="token number">5</span>月  <span class="token number">10</span> <span class="token number">15</span>:10 .autorelabel
lrwxrwxrwx.   <span class="token number">1</span> root root    <span class="token number">7</span> <span class="token number">5</span>月  <span class="token number">10</span> <span class="token number">14</span>:03 bin -<span class="token operator">&gt;</span> usr/bin
dr-xr-xr-x.   <span class="token number">5</span> root root <span class="token number">4096</span> <span class="token number">5</span>月  <span class="token number">10</span> <span class="token number">15</span>:13 boot
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token punctuation">[</span>root@admin home<span class="token punctuation">]</span><span class="token comment"># ls -F /</span>
bin@   data/  dump.rdb  home/  lib64@    media/  opt/   root/  sbin@  sys/  usr/
boot/  dev/   etc/      lib@   main.log  mnt/    proc/  run/   srv/   tmp/  var
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token punctuation">[</span>root@admin home<span class="token punctuation">]</span><span class="token comment"># ls -F -R  /home/</span>
/home/:
dd.sh  demo.txt  soft/  user1/

/home/soft:
mysql5.7.39-el7-x86_64.tar.gz*  redis-6.2.4.tar.gz*

/home/user1:
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li>ls -l dd?ff.log 代表匹配一个单词</li><li>ls -l dd*ff.log 代表匹配任意一个或多个单单词</li><li>ls -l dd[ai]ff.log [ai]匹配到a或i的文件</li><li>ls -l dd[1-9]ff.log 范围匹；[1-9]或[a-g]匹配到(1到9,a到g)的文件</li><li>ls -l dd[!a]ff.log 排除匹配到a的文件</li><li>ls -l dd* 匹配到以dd开头</li></ul><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token punctuation">[</span>root@admin home<span class="token punctuation">]</span><span class="token comment"># ls</span>
dd1ff.log     dd2ff.log  ddaff.log  ddcff.log  ddeff.log  ddg2ff.log  ddopff.log  soft
dd23opff.log  dd3ff.log  ddbff.log  dddff.log  ddfff.log  ddgff.log   demo.txt    user1
<span class="token punctuation">[</span>root@admin home<span class="token punctuation">]</span><span class="token comment"># ls -l dd?ff.log</span>
-rw-r--r-- <span class="token number">1</span> root root <span class="token number">0</span> <span class="token number">9</span>月  <span class="token number">13</span> <span class="token number">15</span>:10 dd1ff.log
-rw-r--r-- <span class="token number">1</span> root root <span class="token number">0</span> <span class="token number">9</span>月  <span class="token number">13</span> <span class="token number">15</span>:10 dd2ff.log
-rw-r--r-- <span class="token number">1</span> root root <span class="token number">0</span> <span class="token number">9</span>月  <span class="token number">13</span> <span class="token number">15</span>:10 dd3ff.log
-rw-r--r-- <span class="token number">1</span> root root <span class="token number">0</span> <span class="token number">9</span>月  <span class="token number">13</span> <span class="token number">15</span>:09 ddaff.log
-rw-r--r-- <span class="token number">1</span> root root <span class="token number">0</span> <span class="token number">9</span>月  <span class="token number">13</span> <span class="token number">15</span>:09 ddbff.log
-rw-r--r-- <span class="token number">1</span> root root <span class="token number">0</span> <span class="token number">9</span>月  <span class="token number">13</span> <span class="token number">15</span>:09 ddcff.log
-rw-r--r-- <span class="token number">1</span> root root <span class="token number">0</span> <span class="token number">9</span>月  <span class="token number">13</span> <span class="token number">15</span>:09 dddff.log
-rw-r--r-- <span class="token number">1</span> root root <span class="token number">0</span> <span class="token number">9</span>月  <span class="token number">13</span> <span class="token number">15</span>:09 ddeff.log
-rw-r--r-- <span class="token number">1</span> root root <span class="token number">0</span> <span class="token number">9</span>月  <span class="token number">13</span> <span class="token number">15</span>:09 ddfff.log
-rw-r--r-- <span class="token number">1</span> root root <span class="token number">0</span> <span class="token number">9</span>月  <span class="token number">13</span> <span class="token number">15</span>:09 ddgff.log
<span class="token punctuation">[</span>root@admin home<span class="token punctuation">]</span><span class="token comment"># ls -l dd*ff.log</span>
-rw-r--r-- <span class="token number">1</span> root root <span class="token number">0</span> <span class="token number">9</span>月  <span class="token number">13</span> <span class="token number">15</span>:10 dd1ff.log
-rw-r--r-- <span class="token number">1</span> root root <span class="token number">0</span> <span class="token number">9</span>月  <span class="token number">13</span> <span class="token number">15</span>:10 dd23opff.log
-rw-r--r-- <span class="token number">1</span> root root <span class="token number">0</span> <span class="token number">9</span>月  <span class="token number">13</span> <span class="token number">15</span>:10 dd2ff.log
-rw-r--r-- <span class="token number">1</span> root root <span class="token number">0</span> <span class="token number">9</span>月  <span class="token number">13</span> <span class="token number">15</span>:10 dd3ff.log
-rw-r--r-- <span class="token number">1</span> root root <span class="token number">0</span> <span class="token number">9</span>月  <span class="token number">13</span> <span class="token number">15</span>:09 ddaff.log
-rw-r--r-- <span class="token number">1</span> root root <span class="token number">0</span> <span class="token number">9</span>月  <span class="token number">13</span> <span class="token number">15</span>:09 ddbff.log
-rw-r--r-- <span class="token number">1</span> root root <span class="token number">0</span> <span class="token number">9</span>月  <span class="token number">13</span> <span class="token number">15</span>:09 ddcff.log
-rw-r--r-- <span class="token number">1</span> root root <span class="token number">0</span> <span class="token number">9</span>月  <span class="token number">13</span> <span class="token number">15</span>:09 dddff.log
-rw-r--r-- <span class="token number">1</span> root root <span class="token number">0</span> <span class="token number">9</span>月  <span class="token number">13</span> <span class="token number">15</span>:09 ddeff.log
-rw-r--r-- <span class="token number">1</span> root root <span class="token number">0</span> <span class="token number">9</span>月  <span class="token number">13</span> <span class="token number">15</span>:09 ddfff.log
-rw-r--r-- <span class="token number">1</span> root root <span class="token number">0</span> <span class="token number">9</span>月  <span class="token number">13</span> <span class="token number">15</span>:09 ddg2ff.log
-rw-r--r-- <span class="token number">1</span> root root <span class="token number">0</span> <span class="token number">9</span>月  <span class="token number">13</span> <span class="token number">15</span>:09 ddgff.log
-rw-r--r-- <span class="token number">1</span> root root <span class="token number">0</span> <span class="token number">9</span>月  <span class="token number">13</span> <span class="token number">15</span>:10 ddopff.log
<span class="token punctuation">[</span>root@admin home<span class="token punctuation">]</span><span class="token comment"># ls -l dd[ai]ff.log</span>
-rw-r--r-- <span class="token number">1</span> root root <span class="token number">0</span> <span class="token number">9</span>月  <span class="token number">13</span> <span class="token number">15</span>:09 ddaff.log
<span class="token punctuation">[</span>root@admin home<span class="token punctuation">]</span><span class="token comment"># ls -l dd[1-9]ff.log</span>
-rw-r--r-- <span class="token number">1</span> root root <span class="token number">0</span> <span class="token number">9</span>月  <span class="token number">13</span> <span class="token number">15</span>:10 dd1ff.log
-rw-r--r-- <span class="token number">1</span> root root <span class="token number">0</span> <span class="token number">9</span>月  <span class="token number">13</span> <span class="token number">15</span>:10 dd2ff.log
-rw-r--r-- <span class="token number">1</span> root root <span class="token number">0</span> <span class="token number">9</span>月  <span class="token number">13</span> <span class="token number">15</span>:10 dd3ff.log
<span class="token punctuation">[</span>root@admin home<span class="token punctuation">]</span><span class="token comment"># ls -l dd[!a]ff.log</span>
-rw-r--r-- <span class="token number">1</span> root root <span class="token number">0</span> <span class="token number">9</span>月  <span class="token number">13</span> <span class="token number">15</span>:10 dd1ff.log
-rw-r--r-- <span class="token number">1</span> root root <span class="token number">0</span> <span class="token number">9</span>月  <span class="token number">13</span> <span class="token number">15</span>:10 dd2ff.log
-rw-r--r-- <span class="token number">1</span> root root <span class="token number">0</span> <span class="token number">9</span>月  <span class="token number">13</span> <span class="token number">15</span>:10 dd3ff.log
-rw-r--r-- <span class="token number">1</span> root root <span class="token number">0</span> <span class="token number">9</span>月  <span class="token number">13</span> <span class="token number">15</span>:09 ddbff.log
-rw-r--r-- <span class="token number">1</span> root root <span class="token number">0</span> <span class="token number">9</span>月  <span class="token number">13</span> <span class="token number">15</span>:09 ddcff.log
-rw-r--r-- <span class="token number">1</span> root root <span class="token number">0</span> <span class="token number">9</span>月  <span class="token number">13</span> <span class="token number">15</span>:09 dddff.log
-rw-r--r-- <span class="token number">1</span> root root <span class="token number">0</span> <span class="token number">9</span>月  <span class="token number">13</span> <span class="token number">15</span>:09 ddeff.log
-rw-r--r-- <span class="token number">1</span> root root <span class="token number">0</span> <span class="token number">9</span>月  <span class="token number">13</span> <span class="token number">15</span>:09 ddfff.log
-rw-r--r-- <span class="token number">1</span> root root <span class="token number">0</span> <span class="token number">9</span>月  <span class="token number">13</span> <span class="token number">15</span>:09 ddgff.log
<span class="token punctuation">[</span>root@admin home<span class="token punctuation">]</span><span class="token comment"># ls -l dd*</span>
-rw-r--r-- <span class="token number">1</span> root root <span class="token number">0</span> <span class="token number">9</span>月  <span class="token number">13</span> <span class="token number">15</span>:10 dd1ff.log
-rw-r--r-- <span class="token number">1</span> root root <span class="token number">0</span> <span class="token number">9</span>月  <span class="token number">13</span> <span class="token number">15</span>:10 dd23opff.log
-rw-r--r-- <span class="token number">1</span> root root <span class="token number">0</span> <span class="token number">9</span>月  <span class="token number">13</span> <span class="token number">15</span>:10 dd2ff.log
-rw-r--r-- <span class="token number">1</span> root root <span class="token number">0</span> <span class="token number">9</span>月  <span class="token number">13</span> <span class="token number">15</span>:10 dd3ff.log
-rw-r--r-- <span class="token number">1</span> root root <span class="token number">0</span> <span class="token number">9</span>月  <span class="token number">13</span> <span class="token number">15</span>:09 ddaff.log
-rw-r--r-- <span class="token number">1</span> root root <span class="token number">0</span> <span class="token number">9</span>月  <span class="token number">13</span> <span class="token number">15</span>:09 ddbff.log
-rw-r--r-- <span class="token number">1</span> root root <span class="token number">0</span> <span class="token number">9</span>月  <span class="token number">13</span> <span class="token number">15</span>:09 ddcff.log
-rw-r--r-- <span class="token number">1</span> root root <span class="token number">0</span> <span class="token number">9</span>月  <span class="token number">13</span> <span class="token number">15</span>:09 dddff.log
-rw-r--r-- <span class="token number">1</span> root root <span class="token number">0</span> <span class="token number">9</span>月  <span class="token number">13</span> <span class="token number">15</span>:09 ddeff.log
-rw-r--r-- <span class="token number">1</span> root root <span class="token number">0</span> <span class="token number">9</span>月  <span class="token number">13</span> <span class="token number">15</span>:09 ddfff.log
-rw-r--r-- <span class="token number">1</span> root root <span class="token number">0</span> <span class="token number">9</span>月  <span class="token number">13</span> <span class="token number">15</span>:09 ddg2ff.log
-rw-r--r-- <span class="token number">1</span> root root <span class="token number">0</span> <span class="token number">9</span>月  <span class="token number">13</span> <span class="token number">15</span>:09 ddgff.log
-rw-r--r-- <span class="token number">1</span> root root <span class="token number">0</span> <span class="token number">9</span>月  <span class="token number">13</span> <span class="token number">15</span>:10 ddopff.log
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>分析：</strong></p><ul><li><p>①、第一列表示文件类型：<code>-</code> 表示是文件，<code>d</code> 表示目录， <code>l</code> 表示软连接文件，<code>b</code> 表示为装置文件里面的可供储存的接口设备(可随机存取装置)，<code>c</code> 表示为装置文件里面的串行端口设备，例如键盘、鼠标(一次性读取装置)</p></li><li><p>后面的每三个为一组：<code>u g o</code></p></li></ul><p><img src="`+o+'" alt=""></p><p><img src="'+r+`" alt=""></p><p><code>r读</code> <code>w写</code> <code>x执行</code> <code>-无权限</code></p><table><thead><tr><th>代表字符</th><th>权限</th><th>对文件的含义</th><th>对目录的含义</th></tr></thead><tbody><tr><td>r</td><td>读权限</td><td>可以查看文件内容</td><td>可以列出目录中的内容</td></tr><tr><td>w</td><td>写权限</td><td>可以修改文件内容</td><td>可以在目录中创建、删除文件</td></tr><tr><td>x</td><td>执行权限</td><td>可以执行文件</td><td>可以进入目录</td></tr><tr><td>-</td><td>无权限</td><td>不可以对文件的所有操作</td><td>不可以进入目录</td></tr></tbody></table><ul><li><p>②、第2列表示：引用计数，表示文件被引用过多少次</p></li><li><p>③、第3-4列表示：第一个root表示所有者，一般创建一个文件，所有者默认是创建者。第二个root表示所属组。</p></li><li><p>④、第5列表示：文件字节大小，不带单位表示字节</p></li><li><p>⑤、第6列表示：8月 10 17:36 文件的最后修改时间。注意：Linux没有明确的创建时间，只有最后一次访问时间、文件的状态修改时间、文件的数据修改时间</p></li><li><p>⑥、第7列表示：文件名或目录名</p></li></ul><p>案例：进入 <code>/</code> 目录，查看/目录下所有文件和所有文件的详细信息，查看bin目录下所有文件的详细信息</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token punctuation">[</span>root@admin ~<span class="token punctuation">]</span><span class="token comment"># cd /</span>
<span class="token punctuation">[</span>root@admin /<span class="token punctuation">]</span><span class="token comment"># ls -al /</span>
总用量 <span class="token number">24</span>
dr-xr-xr-x.  <span class="token number">18</span> root root  <span class="token number">272</span> <span class="token number">9</span>月   <span class="token number">9</span> <span class="token number">21</span>:15 <span class="token builtin class-name">.</span>
dr-xr-xr-x.  <span class="token number">18</span> root root  <span class="token number">272</span> <span class="token number">9</span>月   <span class="token number">9</span> <span class="token number">21</span>:15 <span class="token punctuation">..</span>
-rw-r--r--    <span class="token number">1</span> root root    <span class="token number">0</span> <span class="token number">5</span>月  <span class="token number">10</span> <span class="token number">15</span>:10 .autorelabel
lrwxrwxrwx.   <span class="token number">1</span> root root    <span class="token number">7</span> <span class="token number">5</span>月  <span class="token number">10</span> <span class="token number">14</span>:03 bin -<span class="token operator">&gt;</span> usr/bin
dr-xr-xr-x.   <span class="token number">5</span> root root <span class="token number">4096</span> <span class="token number">5</span>月  <span class="token number">10</span> <span class="token number">15</span>:13 boot
drwxr-xr-x    <span class="token number">3</span> root root   <span class="token number">26</span> <span class="token number">8</span>月  <span class="token number">10</span> <span class="token number">17</span>:48 data

<span class="token punctuation">[</span>root@admin /<span class="token punctuation">]</span><span class="token comment"># ll /bin</span>
lrwxrwxrwx. <span class="token number">1</span> root root <span class="token number">7</span> <span class="token number">5</span>月  <span class="token number">10</span> <span class="token number">14</span>:03 /bin -<span class="token operator">&gt;</span> usr/bin
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="ln-链接创建" tabindex="-1"><a class="header-anchor" href="#ln-链接创建" aria-hidden="true">#</a> ln 链接创建</h3>`,23),H=p(`<p>权限后的数字代表硬链接数</p><p>①、命令名称：ln</p><p>②、英文原意：link</p><p>③、命令所在路径：/bin/link</p><p>④、执行权限：所有用户</p><p>⑤、功能描述：生成链接文件</p><p>⑥、语法： ln -s 【源文件】【目标文件】</p><blockquote><p><code>-s</code> 创建软链接</p><p><code>不加 -s</code> 创建硬链接</p></blockquote><p><strong>例子：</strong></p><p>一、创建文件 /etc/issue 的软链接 /tmp/issue.soft：ln -s /etc/issue /tmp/issue.soft</p><p>二、创建文件 /etc/issue 的硬链接 /tmp/issue.hard：ln /etc/issue /tmp/issue.hard</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token punctuation">[</span>root@admin /<span class="token punctuation">]</span><span class="token comment"># ln -s /etc/issue /tmp/issue.soft</span>
<span class="token punctuation">[</span>root@admin /<span class="token punctuation">]</span><span class="token comment"># ln /etc/issue /tmp/issue.hard</span>
<span class="token punctuation">[</span>root@admin /<span class="token punctuation">]</span><span class="token comment"># ls -all /tmp/issue.*</span>
-rw-r--r--. <span class="token number">2</span> root root <span class="token number">23</span> <span class="token number">11</span>月 <span class="token number">23</span> <span class="token number">2020</span> /tmp/issue.hard
lrwxrwxrwx  <span class="token number">1</span> root root <span class="token number">10</span> <span class="token number">9</span>月   <span class="token number">9</span> <span class="token number">22</span>:24 /tmp/issue.soft -<span class="token operator">&gt;</span> /etc/issue
<span class="token punctuation">[</span>root@admin /<span class="token punctuation">]</span><span class="token comment"># ls -i /tmp/issue.*</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>第一：软链接 前面是 l 开头的（link）,而硬链接是 - 开头，表示文件</p><p>第二：软链接所有者和所属组具有全部操作的权限，rwxrwxrwx 而硬链接不是。也就是软链接的前面都是 lrwxrwxrwx</p><p>第三：软链接类似与 windows 的快捷方式，有一个明显的箭头指向，而指向的是源文件</p><p>第四：硬链接文件除了文件名与源文件不一样，其余所有信息都是一样的。类似于 cp 复制操作。但是又和复制不一样，硬链接可以同步更新。</p><p>第五：通过 ls -i 操作，来查看 文件的 i 节点。发现硬链接和源文件的 i 节点是相同的，而软链接与源文件的 i 节点是不同的</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token punctuation">[</span>root@admin /<span class="token punctuation">]</span><span class="token comment"># ls -i /etc/issue</span>
<span class="token number">135778923</span> /etc/issue
<span class="token punctuation">[</span>root@admin /<span class="token punctuation">]</span><span class="token comment"># ls -all -i  /tmp/issue.*</span>
<span class="token number">135778923</span> -rw-r--r--. <span class="token number">2</span> root root <span class="token number">23</span> <span class="token number">11</span>月 <span class="token number">23</span> <span class="token number">2020</span> /tmp/issue.hard
<span class="token number">134299727</span> lrwxrwxrwx  <span class="token number">1</span> root root <span class="token number">10</span> <span class="token number">9</span>月   <span class="token number">9</span> <span class="token number">22</span>:24 /tmp/issue.soft -<span class="token operator">&gt;</span> /etc/issue
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>第六：不允许将硬链接指向目录；不允许跨分区创建硬链接</p><p><img src="`+c+'" alt=""></p><p><img src="'+d+'" alt=""></p><p>链接查看指令</p><p><img src="'+u+'" alt=""></p><h3 id="mkdir-创建目录" tabindex="-1"><a class="header-anchor" href="#mkdir-创建目录" aria-hidden="true">#</a> mkdir 创建目录</h3>',24),$=p(`<p>①、命令名称：mkdir</p><p>②、英文原意：make directories</p><p>③、命令所在路径：/bin/mkdir</p><p>④、执行权限：所有用户</p><p>⑤、功能描述：创建新目录</p><p>⑥、语法： mkdir 【-p】【目录名】</p><blockquote><p><code>-p</code> 递归创建</p></blockquote><p><strong>例子：</strong></p><p><em>创建单个目录：</em></p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token punctuation">[</span>root@admin root<span class="token punctuation">]</span><span class="token comment"># mkdir data</span>
<span class="token punctuation">[</span>root@admin root<span class="token punctuation">]</span><span class="token comment"># ls</span>
data
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><em>创建多个目录：</em></p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token punctuation">[</span>root@admin root<span class="token punctuation">]</span><span class="token comment"># mkdir -p {a,b}</span>
<span class="token punctuation">[</span>root@admin root<span class="token punctuation">]</span><span class="token comment"># ls</span>
a  b  data
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>注意：</strong></p><p>1、创建的目录已经存在, 那么 Linux 会提示我们 Linux 无法创建它。</p><p>2、不带任何参数运行 mkdir 命令会在当前目录下创建目录。</p><p>3、不带上<code>-p</code>,如果新建的文件上级目录不存在则不会执行成功这种说法是错误的。加或者不加上 -p 前面的目录没有得都会依次创建。</p><p>4、创建目录的首要条件是， 在想要创建目录的目标路径下你必须具有访问权限</p><ul><li><p>案例：</p><blockquote><p>进入<code>/</code>根目录，创建<code> c，e，d</code> 目录在 <code>home</code> 目录中，其中<code>e</code>中有文件夹 <code>software</code>，<code>d</code>中有文件夹 <code>program</code>，program中有文件夹名为 <code>demo.log</code> 的目录</p></blockquote></li></ul><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token punctuation">[</span>root@admin root<span class="token punctuation">]</span><span class="token comment"># cd /</span>
<span class="token punctuation">[</span>root@admin /<span class="token punctuation">]</span><span class="token comment"># mkdir -p /home/{c,e/software,d/program/demo.log}</span>
<span class="token punctuation">[</span>root@admin /<span class="token punctuation">]</span><span class="token comment"># cd home/</span>
<span class="token punctuation">[</span>root@admin home<span class="token punctuation">]</span><span class="token comment"># tree</span>
<span class="token builtin class-name">.</span>
├── c
├── d
│   └── program
│       └── demo.log
└── e
    └── software

<span class="token number">10</span> directories, <span class="token number">0</span> files
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="pwd-显示当前目录" tabindex="-1"><a class="header-anchor" href="#pwd-显示当前目录" aria-hidden="true">#</a> pwd 显示当前目录</h3>`,20),j=p(`<p>①、命令名称：pwd</p><p>②、英文原意：print working directory</p><p>③、命令所在路径：/bin/pwd</p><p>④、执行权限：所有用户</p><p>⑤、功能描述：显示当前目录</p><p>⑥、语法： pwd</p><p><strong>案例</strong></p><p>将当前目录路径存入c盘下一个文件叫做he.txt文件</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token punctuation">[</span>root@admin home<span class="token punctuation">]</span><span class="token comment"># pwd &gt; /home/c/he.log</span>
<span class="token punctuation">[</span>root@admin home<span class="token punctuation">]</span><span class="token comment"># cat /home/c/he.log</span>
/home
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><code>&gt;</code> 写入内容到指定目录文件，<code>cat</code> 命令为用文本的方式打开一个文件</p><p>直接写字符串进入一个文本 echo &quot;str&quot; &gt; file</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token punctuation">[</span>root@admin home<span class="token punctuation">]</span><span class="token comment"># echo &quot;替换写入文本1&quot; &gt; /home/c/dd.log</span>
<span class="token punctuation">[</span>root@admin home<span class="token punctuation">]</span><span class="token comment"># echo &quot;替换写入文本2&quot; &gt; /home/c/dd.log</span>
<span class="token punctuation">[</span>root@admin home<span class="token punctuation">]</span><span class="token comment"># cat /home/c/dd.log</span>
替换写入文本2
<span class="token punctuation">[</span>root@admin home<span class="token punctuation">]</span><span class="token comment"># echo &quot;追加文本1&quot; &gt;&gt; /home/c/dd.log</span>
<span class="token punctuation">[</span>root@admin home<span class="token punctuation">]</span><span class="token comment"># echo &quot;追加文本2&quot; &gt;&gt; /home/c/dd.log</span>
<span class="token punctuation">[</span>root@admin home<span class="token punctuation">]</span><span class="token comment"># cat /home/c/dd.log</span>
替换写入文本2
追加文本1
追加文本2
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="cp-复制文件或目录" tabindex="-1"><a class="header-anchor" href="#cp-复制文件或目录" aria-hidden="true">#</a> cp 复制文件或目录</h3>`,13),W=p(`<p>①、命令名称：cp</p><p>②、英文原意：copy</p><p>③、命令所在路径：/bin/cp</p><p>④、执行权限：所有用户</p><p>⑤、功能描述：复制文件或目录</p><p>⑥、语法： cp -rp 【原文件或目录】【目标目录】</p><blockquote><p><code>-r</code> 复制目录</p><p><code>-p</code> 保留文件属性</p></blockquote><p><strong>案例：</strong></p><p>请进入根目录，将 <code>/home</code> 目录下的所有文件和文件夹清空并删除，在根目录下 <code>copy /etc/sound/events</code> 目录下的所有文件到<code>/home</code>目录下的<code>c</code>目录中</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token punctuation">[</span>root@admin /<span class="token punctuation">]</span><span class="token comment"># rm -rf /home/*</span>
<span class="token punctuation">[</span>root@admin /<span class="token punctuation">]</span><span class="token comment"># ls /home/</span>
<span class="token punctuation">[</span>root@admin /<span class="token punctuation">]</span><span class="token comment"># cp -rp  /etc/samba/* /home/</span>
<span class="token punctuation">[</span>root@admin /<span class="token punctuation">]</span><span class="token comment"># ls /home/</span>
lmhosts  smb.conf  smb.conf.example
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="mv-剪切文件或目录" tabindex="-1"><a class="header-anchor" href="#mv-剪切文件或目录" aria-hidden="true">#</a> mv 剪切文件或目录</h3>`,11),Z=p(`<p>①、命令名称：mv</p><p>②、英文原意：move</p><p>③、命令所在路径：/bin/mv</p><p>④、执行权限：所有用户</p><p>⑤、功能描述：剪切文件、改名</p><p>⑥、语法： mv【原文件或目录】【目标目录】</p><p><strong>案例：</strong></p><p>在/tmp目录下，创建一个文件夹d，d目录中创建一个文件b.log，进入/，将/tmp 中的d文件夹中的所有内容包含d目录本身剪切到/home目录下</p><div class="language-shell&#39; line-numbers-mode" data-ext="shell&#39;"><pre class="language-shell&#39;"><code>[root@admin /]# cd /tmp/
[root@admin tmp]# mkdir d
[root@admin tmp]# touch ./d/b.log
[root@admin tmp]# cd /
[root@admin /]# mv /tmp/d /home/
[root@admin /]# ls /home/
d
[root@admin /]# ls /home/d/
b.log
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="rmdir-删除空目录" tabindex="-1"><a class="header-anchor" href="#rmdir-删除空目录" aria-hidden="true">#</a> rmdir 删除空目录</h3>`,10),Y=p(`<p>①、命令名称：rmdir</p><p>②、英文原意：remove empty directories</p><p>③、命令所在路径：/bin/rmdir</p><p>④、执行权限：所有用户</p><p>⑤、功能描述：删除空目录（如果目录下存在文件则不能删除）</p><p>⑥、语法： rmdir 【空目录名】</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token punctuation">[</span>root@admin home<span class="token punctuation">]</span><span class="token comment"># mkdir dd</span>
<span class="token punctuation">[</span>root@admin home<span class="token punctuation">]</span><span class="token comment"># ls</span>
c  d  <span class="token function">dd</span>  e  root
<span class="token punctuation">[</span>root@admin home<span class="token punctuation">]</span><span class="token comment"># rmdir dd</span>
<span class="token punctuation">[</span>root@admin home<span class="token punctuation">]</span><span class="token comment"># ls</span>
c  d  e  root
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token punctuation">[</span>root@admin home<span class="token punctuation">]</span><span class="token comment"># mkdir -p ./dd/ff</span>
<span class="token punctuation">[</span>root@admin home<span class="token punctuation">]</span><span class="token comment"># ls</span>
c  d  <span class="token function">dd</span>  e  root
<span class="token punctuation">[</span>root@admin home<span class="token punctuation">]</span><span class="token comment"># rmdir dd</span>
rmdir: 删除 <span class="token string">&quot;dd&quot;</span> 失败: 目录非空
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="rm-删除文件或目录" tabindex="-1"><a class="header-anchor" href="#rm-删除文件或目录" aria-hidden="true">#</a> rm 删除文件或目录</h3>`,9),X=p(`<p>①、命令名称：rm</p><p>②、英文原意：remove</p><p>③、命令所在路径：/bin/rm</p><p>④、执行权限：所有用户</p><p>⑤、功能描述：剪切文件、改名</p><p>⑥、语法： rm -rf 【文件或目录】</p><blockquote><p><code>-r</code> 删除目录</p><p><code>-f</code> 强制执行</p></blockquote><p>案例：</p><p>请进入/目录，然后同时删除 /home/a与b</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token punctuation">[</span>root@admin /<span class="token punctuation">]</span><span class="token comment"># ls /home/</span>
a  b  d
<span class="token punctuation">[</span>root@admin /<span class="token punctuation">]</span><span class="token comment"># rm -rf /home/{a,b}</span>
<span class="token punctuation">[</span>root@admin /<span class="token punctuation">]</span><span class="token comment"># ls /home/</span>
d
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="touch-创建文件" tabindex="-1"><a class="header-anchor" href="#touch-创建文件" aria-hidden="true">#</a> touch 创建文件</h3>`,11),J=p(`<p>①、命令名称：</p><p>②、英文原意：</p><p>③、命令所在路径：</p><p>④、执行权限：所有用户</p><p>⑤、功能描述：</p><p>⑥、语法：</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token punctuation">[</span>root@admin /<span class="token punctuation">]</span><span class="token comment"># touch /home/{a.log,b.log}</span>
<span class="token punctuation">[</span>root@admin /<span class="token punctuation">]</span><span class="token comment"># ls /home/</span>
a.log  b.log  d
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>如果要创建一个带空格文件名的文件</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token punctuation">[</span>root@admin home<span class="token punctuation">]</span><span class="token comment"># touch &quot;a b c&quot;</span>
<span class="token punctuation">[</span>root@admin home<span class="token punctuation">]</span><span class="token comment"># ls -all</span>
-rw-r--r--   <span class="token number">1</span> root root   <span class="token number">0</span> <span class="token number">9</span>月   <span class="token number">9</span> <span class="token number">22</span>:05 a b c
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>案例：</strong></p><p>删除/home中所有文件以及目录，进入/目录，创建同时创建 <code>a,b,c</code> 文件以及<code>a b c</code>文件一共四个文件</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token punctuation">[</span>root@admin home<span class="token punctuation">]</span><span class="token comment"># touch /home/{a,b,c,&quot;a b c&quot;}</span>
<span class="token punctuation">[</span>root@admin home<span class="token punctuation">]</span><span class="token comment"># ls -all</span>
-rw-r--r--   <span class="token number">1</span> root root   <span class="token number">0</span> <span class="token number">9</span>月   <span class="token number">9</span> <span class="token number">22</span>:08 a
-rw-r--r--   <span class="token number">1</span> root root   <span class="token number">0</span> <span class="token number">9</span>月   <span class="token number">9</span> <span class="token number">22</span>:08 a b c
-rw-r--r--   <span class="token number">1</span> root root   <span class="token number">0</span> <span class="token number">9</span>月   <span class="token number">9</span> <span class="token number">22</span>:08 b
-rw-r--r--   <span class="token number">1</span> root root   <span class="token number">0</span> <span class="token number">9</span>月   <span class="token number">9</span> <span class="token number">22</span>:08 c
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="echo-打印字符或者回显" tabindex="-1"><a class="header-anchor" href="#echo-打印字符或者回显" aria-hidden="true">#</a> echo 打印字符或者回显</h3>`,13),Q=p(`<p>①、命令名称：</p><p>②、英文原意：</p><p>③、命令所在路径：</p><p>④、执行权限：所有用户</p><p>⑤、功能描述：打印字符或者回显，例如输入 echo ok，会显示 ok， echo ok &gt; test.txt 则会把 ok 字符覆盖 test.txt 内容</p><p>⑥、语法：</p><p>echo 【选项】 【输出内容】 【（输出重定向）&gt; 文件】</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token builtin class-name">echo</span> <span class="token string">&quot;回显&quot;</span>
<span class="token builtin class-name">echo</span> <span class="token parameter variable">-e</span> <span class="token string">&quot;支持<span class="token entity" title="\\n">\\n</span>回显&quot;</span>
<span class="token builtin class-name">echo</span> <span class="token string">&quot;12311&quot;</span> <span class="token operator">&gt;&gt;</span> 01.txt 文本末尾追加
<span class="token builtin class-name">echo</span> <span class="token string">&quot;4565555&quot;</span> <span class="token operator">&gt;</span> 01.txt 替换文本内容
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>-e 扩展参数的常用参数</strong></p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>\\a 发出警告声
\\b 删除前一个字符
\\c 最后不加上换行符号；
\\f 换行但光标仍旧停留在原来的位置；
\\n 换行且光标移至行首；
\\r 光标移至行首，但不换行；
\\t 插入 tab； \\v 与\\f 相同；
\\\\ 插入\\字符；
\\033[30m 黑色字 \\033[0m
\\033[31m 红色字 \\033[0m
\\033[32m 绿色字 \\033[0m
\\033[33m 黄色字 \\033[0m
\\033[34m 蓝色字 \\033[0m
\\033[35m 紫色字 \\033[0m
\\033[36m 天蓝字 \\033[0m
\\033[37m 白色字 \\033[0m
\\033[40;37m 黑底白字 \\033[0m
\\033[41;37m 红底白字 \\033[0m
\\033[42;37m 绿底白字 \\033[0m
\\033[43;37m 黄底白字 \\033[0m
\\033[44;37m 蓝底白字 \\033[0m
\\033[45;37m 紫底白字 \\033[0m
\\033[46;37m 天蓝底白字 \\033[0m
\\033[47;30m 白底黑字 \\033[0m
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,10),nn={href:"http://auto.sh",target:"_blank",rel:"noopener noreferrer"},sn=p(`<div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token builtin class-name">echo</span> <span class="token parameter variable">-e</span> <span class="token string">&quot;<span class="token entity" title="\\033">\\033</span>[36mPlease Select Install Menu follow:<span class="token entity" title="\\033">\\033</span>[0m&quot;</span>
<span class="token builtin class-name">echo</span> <span class="token parameter variable">-e</span> <span class="token string">&quot;<span class="token entity" title="\\033">\\033</span>[32m1)Install Apache Server<span class="token entity" title="\\033">\\033</span>[1m&quot;</span>
<span class="token builtin class-name">echo</span> <span class="token string">&quot;2)Install MySQL Server&quot;</span>
<span class="token builtin class-name">echo</span> <span class="token string">&quot;3)Install PHP Server&quot;</span>
<span class="token builtin class-name">echo</span> <span class="token string">&quot;4)Configuration index.php and start LAMP server&quot;</span>
<span class="token builtin class-name">echo</span> <span class="token parameter variable">-e</span> <span class="token string">&quot;<span class="token entity" title="\\033">\\033</span>[31mUsage: { /bin/sh <span class="token variable">$0</span> 1|2|3|4|help}<span class="token entity" title="\\033">\\033</span>[0m&quot;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><img src="`+m+'" alt=""></p><h3 id="tee" tabindex="-1"><a class="header-anchor" href="#tee" aria-hidden="true">#</a> tee</h3>',3),an=p(`<p>①、命令名称：</p><p>②、英文原意：</p><p>③、命令所在路径：</p><p>④、执行权限：所有用户</p><p>⑤、功能描述：</p><p>⑥、语法：</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">tee</span> 01.txt <span class="token operator">&lt;&lt;-</span><span class="token string">&#39;EOF&#39;
{
  &quot;registry-mirrors&quot;: [&quot;https&quot;]
}
EOF</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="cat-显示较少内容" tabindex="-1"><a class="header-anchor" href="#cat-显示较少内容" aria-hidden="true">#</a> cat 显示较少内容</h3>`,8),en=p(`<p>①、命令名称：</p><p>②、英文原意：</p><p>③、命令所在路径：</p><p>④、执行权限：所有用户</p><p>⑤、功能描述：</p><p>⑥、语法：</p><p>cat 【选项】【文件名】</p><ul><li>-n 统计行号</li><li>-b 空行不计入行号的统计</li><li>-t 禁用制表符</li></ul><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token punctuation">[</span>root@admin home<span class="token punctuation">]</span><span class="token comment"># cat demo.txt</span>
sdfsdfsdf

<span class="token number">1354354</span>

34sdr23424sdfs

<span class="token punctuation">[</span>root@admin home<span class="token punctuation">]</span><span class="token comment"># cat -n demo.txt</span>
     <span class="token number">1</span>  sdfsdfsdf
     <span class="token number">2</span>
     <span class="token number">3</span>  <span class="token number">1354354</span>
     <span class="token number">4</span>
     <span class="token number">5</span>  34sdr23424sdfs
     <span class="token number">6</span>
<span class="token punctuation">[</span>root@admin home<span class="token punctuation">]</span><span class="token comment"># cat -b demo.txt</span>
     <span class="token number">1</span>  sdfsdfsdf

     <span class="token number">2</span>  <span class="token number">1354354</span>

     <span class="token number">3</span>  34sdr23424sdfs

<span class="token punctuation">[</span>root@admin home<span class="token punctuation">]</span><span class="token comment"># cat -T demo.txt</span>
sdfsdfsdf

<span class="token number">1354354</span>

34sdr23424sdfs

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token comment"># 替换全部内容</span>
<span class="token function">cat</span> <span class="token parameter variable">-s</span> <span class="token operator">&lt;&lt;</span><span class="token string">EOF<span class="token bash punctuation"> <span class="token operator">&gt;</span> /home/test/k8s.conf</span>
vm.swappiness=0
EOF</span>

<span class="token comment"># 追加内容</span>
<span class="token function">cat</span> <span class="token parameter variable">-s</span> <span class="token operator">&lt;&lt;</span><span class="token string">EOF<span class="token bash punctuation"> <span class="token operator">&gt;&gt;</span> /home/test/k8s.conf</span>
vm.swappiness=0
EOF</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="more-向后分页" tabindex="-1"><a class="header-anchor" href="#more-向后分页" aria-hidden="true">#</a> more 向后分页</h3>`,11),tn=p(`<p>①、命令名称：</p><p>②、英文原意：</p><p>③、命令所在路径：</p><p>④、执行权限：所有用户</p><p>⑤、功能描述：</p><p>⑥、语法：</p><p>/bin/more文件，执行效果是翻页翻行——只能往后面翻</p><p>执行more的时候，按enter是往下走一行，space空格键是往下翻一页，q或者Q退出翻页模式</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token punctuation">[</span>root@admin home<span class="token punctuation">]</span><span class="token comment"># more a</span>
rh
r
th
<span class="token function">df</span>
sdf
gffd
ghgh
werwer
hyughj
gyhjg
e
r
--More--<span class="token punctuation">(</span><span class="token number">5</span>%<span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="less-前后翻页" tabindex="-1"><a class="header-anchor" href="#less-前后翻页" aria-hidden="true">#</a> less 前后翻页</h3>`,10),pn=p(`<p>①、命令名称：</p><p>②、英文原意：</p><p>③、命令所在路径：</p><p>④、执行权限：所有用户</p><p>⑤、功能描述：</p><p>⑥、语法：</p><p>pgdn后翻一页，pgup前翻一页，enter翻一行，空格后翻一页</p><p>上键上翻一行，下键下翻一行</p><p>输入/ 后输入关键字例如/echo +enter键 查找当页索引内容</p><p>q或者是Q，直接退出</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token punctuation">[</span>root@admin home<span class="token punctuation">]</span><span class="token comment"># less a</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h3 id="find-查找文件或者目录" tabindex="-1"><a class="header-anchor" href="#find-查找文件或者目录" aria-hidden="true">#</a> find 查找文件或者目录</h3>`,12),ln=p(`<p>①、命令名称： find</p><p>②、英文原意：</p><p>③、命令所在路径： /usr/bin/find</p><p>④、执行权限：所有用户</p><p>⑤、功能描述： find 指令将从指定目录向下递归地遍历其各个子目录，将满足条件的文件显示在终端。</p><p>⑥、语法：</p><p>find 【搜索范围】 【选项】</p><p><em>选项：</em></p><ul><li>-name&lt;查询方式&gt; 按照指定的文件名查找模式查找文件</li><li>-user&lt;用户名&gt; 查找属于指定用户名所有文件</li><li>-size&lt;文件大小&gt; 按照指定的文件大小查找文件 （<code>+n</code>大于 <code>-n</code>小于 <code>n</code>等于）</li></ul><p>我们可以将其计量单位指定为以下约定：</p><ul><li>b：512 字节块（默认）</li><li>c：字节</li><li>w：双字节字</li><li>k：KB</li><li>M：MB</li><li>G：GB</li></ul><p>（1）按文件名：根据名称查找/目录下的所有 txt 文件。</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">find</span> xiaoyu/ <span class="token parameter variable">-name</span> “*.txt”
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>（2）按拥有者：查找/opt目录下，所属用户名称为 user1 的文件</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">find</span> xiaoyu/ <span class="token parameter variable">-user</span> user1
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>（3）按文件大小：在/home目录下查找大于200m的文件</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">find</span> /home <span class="token parameter variable">-size</span> +204800
<span class="token function">find</span> /home <span class="token parameter variable">-type</span> f <span class="token parameter variable">-size</span> +10M <span class="token parameter variable">-size</span> <span class="token parameter variable">-1G</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><p>（4）删除该目录下最后一次访问时间超过一年的日志文件呢？</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">find</span> <span class="token builtin class-name">.</span> <span class="token parameter variable">-type</span> f <span class="token parameter variable">-atime</span> +365 <span class="token parameter variable">-exec</span> <span class="token function">rm</span> <span class="token parameter variable">-rf</span> <span class="token punctuation">{</span><span class="token punctuation">}</span> <span class="token punctuation">\\</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>（5）按名称或正则表达式查找文件</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">find</span> <span class="token builtin class-name">.</span> <span class="token parameter variable">-name</span> test.txt
<span class="token function">find</span> ./books <span class="token parameter variable">-name</span> <span class="token string">&quot;*.pdf&quot;</span>
<span class="token function">find</span> ./books <span class="token parameter variable">-type</span> f <span class="token parameter variable">-name</span> <span class="token string">&quot;*.pdf&quot;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><blockquote><p>默认情况下，find 命令会搜索常规文件，但最好进行指定（-type f）以使所有内容更清晰。</p></blockquote><p>（6）查找不同类型的文件</p><p>除了搜索常规文件外，我们还可以通过指定 <code>-type</code> 选项来搜索其他类型的文件。</p><p>例如目录：</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">find</span> <span class="token builtin class-name">.</span> <span class="token parameter variable">-type</span> d <span class="token parameter variable">-name</span> <span class="token string">&quot;yu*&quot;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>或者符号链接：</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">find</span> <span class="token builtin class-name">.</span> <span class="token parameter variable">-type</span> l <span class="token parameter variable">-name</span> <span class="token string">&quot;yu*&quot;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>（7）按指定的时间戳查找文件</p><p>要按指定的时间戳搜索文件，我们需要知道 Linux 系统中的 3 个不同的时间戳：</p><p><strong>访问时间戳（atime）</strong> ：最后一次读取文件的时间。</p><p><strong>修改时间戳（mtime）</strong> ：文件内容最后一次被修改的时间。</p><p><strong>更改时间戳（ctime）</strong> ：上次更改文件元数据的时间（如，所有权、位置、文件类型和权限设置）</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">find</span> <span class="token builtin class-name">.</span> <span class="token parameter variable">-type</span> f <span class="token parameter variable">-atime</span> +365
<span class="token function">find</span> <span class="token builtin class-name">.</span> <span class="token parameter variable">-type</span> f <span class="token parameter variable">-mtime</span> <span class="token number">5</span>
<span class="token function">find</span> <span class="token builtin class-name">.</span> <span class="token parameter variable">-type</span> f <span class="token parameter variable">-ctime</span> +5 <span class="token parameter variable">-ctime</span> <span class="token parameter variable">-10</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>（9）按权限查找文件</p><p><code>-perm</code> 选项可以帮助我们按指定权限查找文件</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">find</span> <span class="token builtin class-name">.</span> <span class="token parameter variable">-type</span> f <span class="token parameter variable">-perm</span> <span class="token number">777</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>（10）按所有权查找文件</p><p>使用 <code>-user</code> 选项指定用户名。</p><p>例如，以下命令将查找所有属于 yu 的文件：</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">find</span> <span class="token parameter variable">-type</span> f <span class="token parameter variable">-user</span> yu
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>（11）在找到文件后执行命令</p><p>在找到我们需要的文件后进行后续操作。</p><p>例如将其删除，或检查它们的详细信息等等。</p><p><code>-exec</code> 命令使这些所有事情变得更加容易</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">find</span> <span class="token builtin class-name">.</span> <span class="token parameter variable">-type</span> f <span class="token parameter variable">-atime</span> +365 <span class="token parameter variable">-exec</span> <span class="token function">rm</span> <span class="token parameter variable">-rf</span> <span class="token punctuation">{</span><span class="token punctuation">}</span> <span class="token punctuation">\\</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p><code>{}</code> 是用于查找结果的占位符。</p><blockquote><p>注意：占位符 {} 非常重要，尤其是在您想删除文件时。 因为，如果您不使用它，该命令将对所有文件执行 （而不是您刚刚通过 find 命令找到的文件）。</p></blockquote><p><em>一个使用占位符：</em></p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">find</span> <span class="token builtin class-name">.</span> <span class="token parameter variable">-type</span> f <span class="token parameter variable">-atime</span> +5 <span class="token parameter variable">-exec</span> <span class="token function">ls</span> <span class="token punctuation">{</span><span class="token punctuation">}</span> <span class="token punctuation">\\</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p><em>另一个不使用：</em></p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">find</span> <span class="token builtin class-name">.</span> <span class="token parameter variable">-type</span> f <span class="token parameter variable">-atime</span> +5 <span class="token parameter variable">-exec</span> <span class="token function">ls</span> <span class="token punctuation">\\</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p><code>-exec</code> 选项后面的命令必须以分号（;）结束。 众所周知，转义字符用于去除单个字符的特殊含义。 在 Linux 中，反斜杠 \\ 用作转义字符。 所以我们将它用于分号字符。</p><h3 id="head-查看文件内容" tabindex="-1"><a class="header-anchor" href="#head-查看文件内容" aria-hidden="true">#</a> head 查看文件内容</h3>`,54),on=p(`<p>①、命令名称：head</p><p>②、英文原意：</p><p>③、命令所在路径：/usr/bin/head</p><p>④、执行权限：所有用户</p><p>⑤、功能描述： 查看文件内容，通常查看文件前10行</p><p>⑥、语法</p><p>head 【选项】 【文件】</p><ul><li>-c, --bytes=[-]K 显示每个文件的前 K 字节内容，如果附加&quot;-&quot;参数，则除了每个文件的最后 K 字节数据外显示剩余全部内容；</li><li>-n, --lines=[-]K 显示每个文件的前 K 行内容，如果附加&quot;-&quot;参数，则除了每个文件的最后 K 行外显示剩余全部内容</li><li>-q, --quiet, --silent 不显示包含给定文件名的文件头</li><li>-v, --verbose 总是显示包含给定文件名的文件头</li></ul><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token punctuation">[</span>root@admin home<span class="token punctuation">]</span><span class="token comment"># head demo.txt</span>
sdfsdfsdf

<span class="token number">1354354</span>

34sdr23424sdfs

34sdr23424sdfs
34sdr23424sdfs
34sdr23424sdfs
34sdr23424sdfs
<span class="token punctuation">[</span>root@admin home<span class="token punctuation">]</span><span class="token comment"># head -3 demo.txt</span>
sdfsdfsdf

<span class="token number">1354354</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="tail-查看文件内容后10行" tabindex="-1"><a class="header-anchor" href="#tail-查看文件内容后10行" aria-hidden="true">#</a> tail 查看文件内容后10行</h3>`,10),rn=p(`<p>①、命令名称：tail</p><p>②、英文原意：</p><p>③、命令所在路径：</p><p>④、执行权限：所有用户</p><p>⑤、功能描述：查看文件内容后10行</p><p>⑥、语法：</p><p>tail 【选项】 【文件】</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token punctuation">[</span>root@admin home<span class="token punctuation">]</span><span class="token comment"># tail demo.txt</span>
34sdr23424sdfs1
34sdr23424sdfs2
34sdr23424sdfs3
34sdr23424sdfs4
34sdr23424sdfs5
34sdr23424sdfs6
34sdr23424sdfs7
34sdr23424sdfs8
34sdr23424sdfs9
34sdr23424sdfs10

<span class="token punctuation">[</span>root@admin home<span class="token punctuation">]</span><span class="token comment"># tail -n 2 demo.txt</span>
34sdr23424sdfs9
34sdr23424sdfs10

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="file-查看文件类型" tabindex="-1"><a class="header-anchor" href="#file-查看文件类型" aria-hidden="true">#</a> file 查看文件类型</h3>`,9),cn=p(`<p>①、命令名称：file</p><p>②、英文原意：</p><p>③、命令所在路径：</p><p>④、执行权限：所有用户</p><p>⑤、功能描述：查看文件类型</p><p>⑥、语法：</p><p>file 【文件】</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token punctuation">[</span>root@admin home<span class="token punctuation">]</span><span class="token comment"># file user1</span>
user1: directory
<span class="token punctuation">[</span>root@admin home<span class="token punctuation">]</span><span class="token comment"># file demo.txt</span>
demo.txt: empty
<span class="token punctuation">[</span>root@admin home<span class="token punctuation">]</span><span class="token comment"># ln -s ./demo.txt ./user1/</span>
<span class="token punctuation">[</span>root@admin home<span class="token punctuation">]</span><span class="token comment"># ls -l user1/</span>
总用量 <span class="token number">0</span>
lrwxrwxrwx <span class="token number">1</span> root root <span class="token number">10</span> <span class="token number">9</span>月  <span class="token number">13</span> <span class="token number">15</span>:23 demo.txt -<span class="token operator">&gt;</span> ./demo.txt
<span class="token punctuation">[</span>root@admin home<span class="token punctuation">]</span><span class="token comment"># file user1/demo.txt</span>
user1/demo.txt: broken symbolic <span class="token function">link</span> to \`./demo.txt&#39;
<span class="token punctuation">[</span>root@admin home<span class="token punctuation">]</span><span class="token comment"># file /bin/ls</span>
/bin/ls: ELF <span class="token number">64</span>-bit LSB executable, x86-64, version <span class="token number">1</span> <span class="token punctuation">(</span>SYSV<span class="token punctuation">)</span>, dynamically linked <span class="token punctuation">(</span>uses shared libs<span class="token punctuation">)</span>, <span class="token keyword">for</span> GNU/Linux <span class="token number">2.6</span>.32, BuildID<span class="token punctuation">[</span>sha1<span class="token punctuation">]</span><span class="token operator">=</span>c8ada1f7095f6b2bb7ddc848e088c2d615c3743e, stripped
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="which" tabindex="-1"><a class="header-anchor" href="#which" aria-hidden="true">#</a> which</h3>`,9),dn=n("p",null,"①、命令名称：",-1),un=n("p",null,"②、英文原意：",-1),mn=n("p",null,"③、命令所在路径：",-1),bn=n("p",null,"④、执行权限：所有用户",-1),vn=n("p",null,"⑤、功能描述：",-1),kn=n("p",null,"⑥、语法：",-1),hn=n("h3",{id:"whereis",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#whereis","aria-hidden":"true"},"#"),s(" whereis")],-1),gn=p('<p>①、命令名称：</p><p>②、英文原意：</p><p>③、命令所在路径：</p><p>④、执行权限：所有用户</p><p>⑤、功能描述：</p><p>⑥、语法：</p><p>whereis [选项] 文件</p><p><em>选项：</em></p><ul><li>-b 只搜索二进制文件</li><li>-B &lt;目录&gt; 定义二进制文件查找路径</li><li>-m 只搜索 man 手册</li><li>-M &lt;目录&gt; 定义 man 手册查找路径</li><li>-s 只搜索源代码</li><li>-S &lt;目录&gt; 定义源代码查找路径</li><li>-f 终止 &lt;目录&gt; 参数列表</li><li>-u 搜索不常见记录</li><li>-l 输出有效查找路径</li></ul><h3 id="read" tabindex="-1"><a class="header-anchor" href="#read" aria-hidden="true">#</a> read</h3>',10),fn=n("p",null,"①、命令名称：",-1),xn=n("p",null,"②、英文原意：",-1),_n=n("p",null,"③、命令所在路径：",-1),En=n("p",null,"④、执行权限：所有用户",-1),wn=n("p",null,"⑤、功能描述：",-1),yn=n("p",null,"⑥、语法：",-1),Bn=n("h3",{id:"awk",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#awk","aria-hidden":"true"},"#"),s(" awk")],-1),qn=n("p",null,"①、命令名称：",-1),An=n("p",null,"②、英文原意：",-1),Sn=n("p",null,"③、命令所在路径：",-1),In=n("p",null,"④、执行权限：所有用户",-1),Ln=n("p",null,"⑤、功能描述：",-1),Dn=n("p",null,"⑥、语法：",-1),Mn=n("h3",{id:"sort-排序数据",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#sort-排序数据","aria-hidden":"true"},"#"),s(" sort 排序数据")],-1),Cn=p('<p>①、命令名称：sort</p><p>②、英文原意：</p><p>③、命令所在路径：</p><p>④、执行权限：所有用户</p><p>⑤、功能描述：对数据进行排序</p><p>⑥、语法：</p><p>cat 【选项】 【文件】</p><p><img src="'+b+`" alt=""></p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token punctuation">[</span>root@admin home<span class="token punctuation">]</span><span class="token comment"># cat demo.txt</span>
one
two
three
four
five

<span class="token punctuation">[</span>root@admin home<span class="token punctuation">]</span><span class="token comment"># sort demo.txt</span>

five
four
one
three
two

<span class="token punctuation">[</span>root@admin home<span class="token punctuation">]</span><span class="token comment"># sort ds.log</span>
<span class="token number">1</span>
<span class="token number">10</span>
<span class="token number">100</span>
<span class="token number">145</span>
<span class="token number">2</span>
<span class="token number">3</span>
<span class="token number">45</span>
<span class="token number">75</span>
<span class="token punctuation">[</span>root@admin home<span class="token punctuation">]</span><span class="token comment"># sort -n ds.log</span>
<span class="token number">1</span>
<span class="token number">2</span>
<span class="token number">3</span>
<span class="token number">10</span>
<span class="token number">45</span>
<span class="token number">75</span>
<span class="token number">100</span>
<span class="token number">145</span>

<span class="token punctuation">[</span>root@admin home<span class="token punctuation">]</span><span class="token comment"># sort df.log</span>
Apr
Aug
Dec
Feb
Jan
Jul
Jun
Mar
May
Nov
Oct
Sep
<span class="token punctuation">[</span>root@admin home<span class="token punctuation">]</span><span class="token comment"># sort -M df.log</span>
Jan
Feb
Mar
Apr
May
Jun
Jul
Aug
Sep
Oct
Nov
Dec
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>-k 和 -t 参数在对按字段分隔的数据进行排序时非常有用</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token punctuation">[</span>root@admin home<span class="token punctuation">]</span><span class="token comment"># sort -t &#39;:&#39; -k 3 -n /etc/passwd</span>
root:x:0:0:root:/root:/bin/bash
bin:x:1:1:bin:/bin:/sbin/nologin
daemon:x:2:2:daemon:/sbin:/sbin/nologin
adm:x:3:4:adm:/var/adm:/sbin/nologin
lp:x:4:7:lp:/var/spool/lpd:/sbin/nologin
sync:x:5:0:sync:/sbin:/bin/sync
shutdown:x:6:0:shutdown:/sbin:/sbin/shutdown
halt:x:7:0:halt:/sbin:/sbin/halt
mail:x:8:12:mail:/var/spool/mail:/sbin/nologin
operator:x:11:0:operator:/root:/sbin/nologin
games:x:12:100:games:/usr/games:/sbin/nologin
ftp:x:14:50:FTP User:/var/ftp:/sbin/nologin
pkiuser:x:17:17:Certificate System:/usr/share/pki:/sbin/nologin
named:x:25:25:Named:/var/named:/sbin/nologin
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>按第三个字段——用户ID的数值排序</p><p>-n 参数在排序数值时非常有用，比如 du 命令的输出:( -r 参数将结果按降序输出)</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token punctuation">[</span>root@admin home<span class="token punctuation">]</span><span class="token comment"># du -sh * | sort -nr</span>
921M    soft
16K     user1
<span class="token number">4</span>.0K    ds.log
<span class="token number">4</span>.0K    df.log
<span class="token number">4</span>.0K    demo.txt
<span class="token number">0</span>       ddopff.log
<span class="token number">0</span>       ddgff.log
<span class="token number">0</span>       ddg2ff.log

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="符号含义" tabindex="-1"><a class="header-anchor" href="#符号含义" aria-hidden="true">#</a> 符号含义</h2><table><thead><tr><th>符号</th><th>含义</th></tr></thead><tbody><tr><td><code>l</code></td><td>管道符或者正则</td></tr><tr><td><code>&gt;</code></td><td>输出重定向</td></tr><tr><td><code>&gt;&gt;</code></td><td>输出追加重定向</td></tr><tr><td><code>&lt;</code></td><td>输入重定向</td></tr><tr><td><code>&lt;&lt;</code></td><td>输入追加重定向</td></tr><tr><td><code>~</code></td><td>当前用户家的目录</td></tr><tr><td><code>$()</code> \`\`</td><td>引用命令被执行后的结果</td></tr><tr><td><code>$</code></td><td>以 xx结尾的（正则表达式）</td></tr><tr><td><code>^</code></td><td>以 xx开头的（正则表达式）</td></tr><tr><td><code>*</code></td><td>匹配全部字符，通配符</td></tr><tr><td><code>?</code></td><td>任意一个字符，通配符</td></tr><tr><td><code>#</code></td><td>注释</td></tr><tr><td><code>&amp;</code></td><td>让脚本或程序在后台执行</td></tr><tr><td><code>&amp;&amp;</code></td><td>并且，条件同时成立</td></tr><tr><td><code>[]</code></td><td>表示一个范围（正则表达式，通配符）</td></tr><tr><td><code>{}</code></td><td>产生一个系列（通配符）</td></tr><tr><td><code>.</code></td><td>当前目录的硬链接</td></tr><tr><td><code>..</code></td><td>上级目录的硬链接</td></tr><tr><td></td><td></td></tr></tbody></table><h2 id="编辑器" tabindex="-1"><a class="header-anchor" href="#编辑器" aria-hidden="true">#</a> 编辑器</h2><h3 id="vim" tabindex="-1"><a class="header-anchor" href="#vim" aria-hidden="true">#</a> vim</h3>`,18),Pn=p('<p>①、命令名称：</p><p>②、英文原意：</p><p>③、命令所在路径：</p><p>④、执行权限：所有用户</p><p>⑤、功能描述：</p><p>⑥、语法：</p><p>vi filename，创建文件的同时写入内容</p><p>vim 是 vi 编辑器的增强</p><p>vim进入编辑文本，i开始输入，esc命令模式，： 在命令模式下输入冒号进入编辑模式，输入命令+enter回到命令模式，：wq保存退出：q不保存退出 ：q ! 强制退出:x 保存并退出</p><p><strong>快捷键：</strong></p><p><code>dd</code> 删除当前行，<code>yy</code> 复制当前行，<code>p</code>复制当前行，<code>：set nu</code> 设置行号，<code>：set nonu</code>取消行号，<code>：n</code>到第n行，<code>$</code>移动到行尾，<code>0</code>移动到行首</p><h3 id="nano" tabindex="-1"><a class="header-anchor" href="#nano" aria-hidden="true">#</a> nano</h3>',12),Tn=n("p",null,"①、命令名称：",-1),Un=n("p",null,"②、英文原意：",-1),Rn=n("p",null,"③、命令所在路径：",-1),Gn=n("p",null,"④、执行权限：所有用户",-1),Fn=n("p",null,"⑤、功能描述：",-1),Nn=n("p",null,"⑥、语法：",-1),zn=n("h3",{id:"emacs",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#emacs","aria-hidden":"true"},"#"),s(" emacs")],-1),On=n("p",null,"①、命令名称：",-1),Kn=n("p",null,"②、英文原意：",-1),Vn=n("p",null,"③、命令所在路径：",-1),Hn=n("p",null,"④、执行权限：所有用户",-1),$n=n("p",null,"⑤、功能描述：",-1),jn=n("p",null,"⑥、语法：",-1),Wn=n("h3",{id:"kde",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#kde","aria-hidden":"true"},"#"),s(" kde")],-1),Zn=n("p",null,"①、命令名称：",-1),Yn=n("p",null,"②、英文原意：",-1),Xn=n("p",null,"③、命令所在路径：",-1),Jn=n("p",null,"④、执行权限：所有用户",-1),Qn=n("p",null,"⑤、功能描述：",-1),ns=n("p",null,"⑥、语法：",-1),ss=n("h3",{id:"gnome",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#gnome","aria-hidden":"true"},"#"),s(" gnome")],-1),as=p('<p>①、命令名称：</p><p>②、英文原意：</p><p>③、命令所在路径：</p><p>④、执行权限：所有用户</p><p>⑤、功能描述：</p><p>⑥、语法：</p><h2 id="用户及权限管理" tabindex="-1"><a class="header-anchor" href="#用户及权限管理" aria-hidden="true">#</a> 用户及权限管理</h2><h3 id="chown-所属组" tabindex="-1"><a class="header-anchor" href="#chown-所属组" aria-hidden="true">#</a> chown 所属组</h3>',8),es=p(`<p>①、命令名称：</p><p>②、英文原意：</p><p>③、命令所在路径：</p><p>④、执行权限：所有用户</p><p>⑤、功能描述：</p><p>⑥、语法：</p><p>chown 【选项】 【所属用户：所属组】 【文件目录】</p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>#将demo文件所属的用户为 root，组为 kong。
chown -R root:kong demo.txt
#修改 demo 文件夹所属的组为 root
chown -R :root demo.txt
chgrp –R root demo.txt
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="chmod-文件权限" tabindex="-1"><a class="header-anchor" href="#chmod-文件权限" aria-hidden="true">#</a> chmod 文件权限</h3>`,9),ts=p('<p><img src="'+v+'" alt=""></p><p><img src="'+k+`" alt=""></p><p>①、命令名称：chmod</p><p>②、英文原意：change the permissions mode of a file</p><p>③、命令所在路径：/bin/chmod</p><p>④、执行权限：所有用户</p><p>⑤、功能描述：改变文件或目录权限</p><p>⑥、语法：</p><ul><li>chmod 【{ugoa}{+-=}{rwx}】【文件或目录】</li><li>chmod 【mode=421】 【文件或目录】</li></ul><p><code>u</code>:所有者 <code>g</code>:所有组 <code>o</code>:其他人 <code>a</code>:所有人(<code>u、g、o</code> 的总和)</p><p>mode=421， <code>读 r</code> 表示4，<code>写 w</code>表示2，<code>执行 x</code>表示1；<code>rwx</code>=7，<code>rw-</code>=6，<code>r--</code>=4，<code>---</code>=0</p><blockquote><p>-R 递归修改</p><p>u:user 所有者，g：group组，o：other其他访问者，a：all 所有使用者</p><p>对应的位置是前 中 后三个位置</p></blockquote><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">chmod</span> <span class="token parameter variable">-R</span> <span class="token number">777</span> demo.txt
<span class="token function">chmod</span> <span class="token parameter variable">-R</span> <span class="token number">740</span> demo.txt
<span class="token function">chmod</span> <span class="token parameter variable">-R</span> <span class="token number">651</span> demo.txt
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>（1）授予用户对 demo 目录拥有 rwx 权限</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">chmod</span> –R u+rwx demo
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>（2）授予组对 demo 目录拥有 rwx 权限</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">chmod</span> –R g+rwx demo
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>（3）授予用户、组、其他人对 demo 目录拥有 rwx 权限</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">chmod</span> –R u+rwx,g+rwx,o+rwx demo
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>（4） 撤销用户对 demo 目录拥有 w 权限</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">chmod</span> –R u-w demo
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>（5） 撤销用户、组、其他人对 demo 目录拥有 x 权限</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">chmod</span> –R u-x,g-x,o-x demo
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>（6） 授予用户、组、其他人对 demo 目录只有 rx 权限</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">chmod</span> –R <span class="token assign-left variable">u</span><span class="token operator">=</span>rx,g<span class="token operator">=</span>rx,o<span class="token operator">=</span>rx demo
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h3 id="usermod-将用户添加到其他组" tabindex="-1"><a class="header-anchor" href="#usermod-将用户添加到其他组" aria-hidden="true">#</a> usermod 将用户添加到其他组</h3>`,26),ps=n("p",null,"①、命令名称：",-1),ls=n("p",null,"②、英文原意：",-1),is=n("p",null,"③、命令所在路径：",-1),os=n("p",null,"④、执行权限：所有用户",-1),rs=n("p",null,"⑤、功能描述：",-1),cs=n("p",null,"⑥、语法：",-1),ds=n("p",null,"usermod -aG root kong ；将kong添加到root组",-1),us=n("h3",{id:"umask-显示、设置文件的缺省权限",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#umask-显示、设置文件的缺省权限","aria-hidden":"true"},"#"),s(" umask 显示、设置文件的缺省权限")],-1),ms=p(`<p>①、命令名称：umask</p><p>②、英文原意：the user file-creation mask</p><p>③、命令所在路径：shell 内置命令</p><p>④、执行权限：所有用户</p><p>⑤、功能描述：显示、设置文件的缺省权限</p><p>⑥、语法： umask 【-S】</p><blockquote><p><code>-S</code> 以rwx形式显示新建文件的缺省权限</p></blockquote><p><strong>注意：可能大家不太明白这个命令的意思，我们分别执行umask</strong> 和 umask -S 如下：</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token punctuation">[</span>root@admin home<span class="token punctuation">]</span><span class="token comment"># umask</span>
0022
<span class="token punctuation">[</span>root@admin home<span class="token punctuation">]</span><span class="token comment"># umask -S</span>
<span class="token assign-left variable">u</span><span class="token operator">=</span>rwx,g<span class="token operator">=</span>rx,o<span class="token operator">=</span>rx
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>其中umask 执行显示结果是 0022,第一个0表示特殊权限，后面我们会单独进行讲解有哪几种特殊权限。022表示权限的掩码值，我们用7 7 7 减去 0 2 2得到755（是每一位相减），表示的就是下面通过加上-S输出的rwxr-xr-x，这个值用数字表示就是755.</p><p>这个意思说明创建一个文件的默认权限所有者为rwx,所属组为rx,其他人为rx。也就是说创建一个新文件默认权限为 rwxr-xr-x，我们创建一个文件来验证一下：</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token punctuation">[</span>root@admin home<span class="token punctuation">]</span><span class="token comment"># touch a.log</span>
<span class="token punctuation">[</span>root@admin home<span class="token punctuation">]</span><span class="token comment">#</span>
<span class="token punctuation">[</span>root@admin home<span class="token punctuation">]</span><span class="token comment"># ll a.log</span>
-rw-r--r-- <span class="token number">1</span> root root <span class="token number">0</span> <span class="token number">9</span>月   <span class="token number">9</span> <span class="token number">22</span>:42 a.log
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>我们发现使用touch命令创建了一个文件a.txt，然后发现权限并不是rwxr-xr-x，而是rw-r--r--。对比发现少了三个x，也就是少了可执行权限。这是为什么呢？</p><p>这是因为在Linux系统中，所有新创建的文件都是没有可执行权限的。这是出于Linux系统的一种自我保护，因为类似的病毒木马程序都是具有可执行权限的。所以在Linux系统中，新创建的文件是没有可执行权限的。</p><p>那么我们如何设置默认权限呢？比如我们想将新创建的文件权限设置为rwxr-xr--，也就是754。我们用777减去754得到023。也就是通过执行 umask 023 来完成默认权限设置。</p><h3 id="chgrp" tabindex="-1"><a class="header-anchor" href="#chgrp" aria-hidden="true">#</a> chgrp</h3>`,16),bs=p(`<p>①、命令名称：</p><p>②、英文原意：</p><p>③、命令所在路径：</p><p>④、执行权限：所有用户</p><p>⑤、功能描述：</p><p>⑥、语法：</p><hr><h2 id="文件传输" tabindex="-1"><a class="header-anchor" href="#文件传输" aria-hidden="true">#</a> 文件传输</h2><hr><h2 id="sed" tabindex="-1"><a class="header-anchor" href="#sed" aria-hidden="true">#</a> sed</h2><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token comment"># 设置IP</span>
  <span class="token function">sed</span> <span class="token parameter variable">-ri</span> <span class="token string">&quot;/IPADDR/s#(.*.)\\..*#<span class="token entity" title="\\1">\\1</span>.<span class="token variable">\${ip}</span><span class="token entity" title="\\&quot;">\\&quot;</span>#&quot;</span> /etc/sysconfig/network-scripts/ifcfg-ens33
<span class="token comment"># 设置UUID</span>
  <span class="token function">sed</span> <span class="token parameter variable">-ri</span> <span class="token string">&quot;s/UUID=.*/UUID=<span class="token entity" title="\\&quot;">\\&quot;</span><span class="token variable">\${UUID}</span><span class="token entity" title="\\&quot;">\\&quot;</span>/&quot;</span> /etc/sysconfig/network-scripts/ifcfg-ens33
  <span class="token comment">#$(sed -n &#39;3,100p) 读取文件的3-100行</span>
  <span class="token function">cat</span> /etc/hosts<span class="token punctuation">\\</span>n<span class="token variable"><span class="token variable">$(</span><span class="token function">sed</span> <span class="token parameter variable">-n</span> <span class="token string">&#39;3,100p&#39;</span> /etc/hosts<span class="token variable">)</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="gawk" tabindex="-1"><a class="header-anchor" href="#gawk" aria-hidden="true">#</a> gawk</h2><h2 id="正则表达式" tabindex="-1"><a class="header-anchor" href="#正则表达式" aria-hidden="true">#</a> 正则表达式</h2><h2 id="系统管理" tabindex="-1"><a class="header-anchor" href="#系统管理" aria-hidden="true">#</a> 系统管理</h2><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>adduser 	chfn 	useradd 	date
exit 	finger 	fwhios 	sleep
suspend 	groupdel 	 	halt
kill 	last 	lastb 	login
logname 	logout 	ps 	nice
procinfo 	top 	pstree 	reboot
rlogin 	rsh 	sliplogin 	screen
shutdown 	rwho 	sudo 	gitps
swatch 	tload 	logrotate 	uname
chsh 	userconf 	userdel 	usermod
vlock 	who 	whoami 	whois
newgrp 	renice 	su 	skill
w 	id 	groupadd 	free 
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="ps-进程管理" tabindex="-1"><a class="header-anchor" href="#ps-进程管理" aria-hidden="true">#</a> ps 进程管理</h3>`,16),vs=p(`<p>①、命令名称：ps</p><p>②、英文原意：</p><p>③、命令所在路径：</p><p>④、执行权限：所有用户</p><p>⑤、功能描述：进程管理，显示了程序的进程ID（Process ID，PID）、它们运行在哪个终端（TTY） 以及进程已用的CPU时；<strong>它只能显示某个特定时间点的信息</strong></p><p>⑥、语法：</p><p>ps 【选项】</p><p><strong>Unix风格的参数</strong></p><ul><li>-A 显示所有进程</li><li>-N 显示与指定参数不符的所有进程</li><li>-a 显示除控制进程（session leader ① ）和无终端进程外的所有进程</li><li>-d 显示除控制进程外的所有进程</li><li>-e 显示所有进程</li><li>-C cmdlist 显示包含在 cmdlist 列表中的进程</li><li>-G grplist 显示组ID在 grplist 列表中的进程</li><li>-U userlist 显示属主的用户ID在 userlist 列表中的进程</li><li>-g grplist 显示会话或组ID在 grplist 列表中的进程 ②</li><li>-p pidlist 显示PID在 pidlist 列表中的进程</li><li>-s sesslist 显示会话ID在 sesslist 列表中的进程</li><li>-t ttylist 显示终端ID在 ttylist 列表中的进程</li><li>-u userlist 显示有效用户ID在 userlist 列表中的进程</li><li>-F 显示更多额外输出（相对 -f 参数而言）</li><li>-O format 显示默认的输出列以及 format 列表指定的特定列</li><li>-M 显示进程的安全信息</li><li>-c 显示进程的额外调度器信息</li><li>-f 显示完整格式的输出</li><li>-j 显示任务信息</li><li>-l 显示长列表</li><li>-o format 仅显示由 format 指定的列</li><li>-y 不要显示进程标记（process flag，表明进程状态的标记）</li><li>-Z 显示安全标签（security context） ① 信息</li><li>-H 用层级格式来显示进程（树状，用来显示父进程）</li><li>-n namelist 定义了 WCHAN 列显示的值</li><li>-w 采用宽输出模式，不限宽度显示</li><li>-L 显示进程中的线程</li><li>-V 显示 ps 命令的版本号</li></ul><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token punctuation">[</span>root@admin home<span class="token punctuation">]</span><span class="token comment"># ps</span>
   PID TTY          TIME CMD
  <span class="token number">2048</span> pts/0    00:00:00 <span class="token function">bash</span>
 <span class="token number">19813</span> pts/0    00:00:00 <span class="token function">head</span>
 <span class="token number">91275</span> pts/0    00:00:05 <span class="token function">ls</span>
<span class="token number">108430</span> pts/0    00:00:00 <span class="token function">cat</span>
<span class="token number">116369</span> pts/0    00:00:00 <span class="token function">ps</span>

<span class="token punctuation">[</span>root@admin home<span class="token punctuation">]</span><span class="token comment"># ps -ef</span>
<span class="token environment constant">UID</span>         PID   <span class="token environment constant">PPID</span>  C STIME TTY          TIME CMD
root          <span class="token number">2</span>      <span class="token number">0</span>  <span class="token number">0</span> <span class="token number">10</span>:54 ?        00:00:00 <span class="token punctuation">[</span>kthreadd<span class="token punctuation">]</span>
root          <span class="token number">3</span>      <span class="token number">2</span>  <span class="token number">0</span> <span class="token number">10</span>:54 ?        00:00:00 <span class="token punctuation">[</span>rcu_gp<span class="token punctuation">]</span>
root          <span class="token number">4</span>      <span class="token number">2</span>  <span class="token number">0</span> <span class="token number">10</span>:54 ?        00:00:00 <span class="token punctuation">[</span>rcu_par_gp<span class="token punctuation">]</span>
root          <span class="token number">6</span>      <span class="token number">2</span>  <span class="token number">0</span> <span class="token number">10</span>:54 ?        00:00:00 <span class="token punctuation">[</span>kworker/0:0H-kb<span class="token punctuation">]</span>
root          <span class="token number">8</span>      <span class="token number">2</span>  <span class="token number">0</span> <span class="token number">10</span>:54 ?        00:00:00 <span class="token punctuation">[</span>mm_percpu_wq<span class="token punctuation">]</span>
root          <span class="token number">9</span>      <span class="token number">2</span>  <span class="token number">0</span> <span class="token number">10</span>:54 ?        00:00:00 <span class="token punctuation">[</span>ksoftirqd/0<span class="token punctuation">]</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li>UID：启动这些进程的用户。</li><li>PID：进程的进程ID。</li><li>PPID：父进程的进程号（如果该进程是由另一个进程启动的）。</li><li>C：进程生命周期中的CPU利用率。</li><li>STIME：进程启动时的系统时间。</li><li>TTY：进程启动时的终端设备。</li><li>TIME：运行进程需要的累计CPU时间。</li><li>CMD：启动的程序名称。</li></ul><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token punctuation">[</span>root@admin home<span class="token punctuation">]</span><span class="token comment"># ps -l</span>
F S   <span class="token environment constant">UID</span>    PID   <span class="token environment constant">PPID</span>  C PRI  NI ADDR SZ   WCHAN  TTY          TIME CMD
<span class="token number">4</span> S     <span class="token number">0</span>   <span class="token number">2048</span>   <span class="token number">2043</span>  <span class="token number">0</span>  <span class="token number">80</span>   <span class="token number">0</span>  -  <span class="token number">29250</span> do_wai pts/0    00:00:00 <span class="token function">bash</span>
<span class="token number">0</span> T     <span class="token number">0</span>  <span class="token number">19813</span>   <span class="token number">2048</span>  <span class="token number">0</span>  <span class="token number">80</span>   <span class="token number">0</span>  -  <span class="token number">27071</span> do_sig pts/0    00:00:00 <span class="token function">head</span>
<span class="token number">4</span> T     <span class="token number">0</span>  <span class="token number">91275</span>   <span class="token number">2048</span>  <span class="token number">0</span>  <span class="token number">80</span>   <span class="token number">0</span>  -  <span class="token number">30984</span> do_sig pts/0    00:00:05 <span class="token function">ls</span>
<span class="token number">0</span> T     <span class="token number">0</span> <span class="token number">108430</span>   <span class="token number">2048</span>  <span class="token number">0</span>  <span class="token number">80</span>   <span class="token number">0</span>  -  <span class="token number">27020</span> do_sig pts/0    00:00:00 <span class="token function">cat</span>
<span class="token number">4</span> R     <span class="token number">0</span> <span class="token number">119231</span>   <span class="token number">2048</span>  <span class="token number">0</span>  <span class="token number">80</span>   <span class="token number">0</span>  -  <span class="token number">38333</span> -      pts/0    00:00:00 <span class="token function">ps</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li>F ：内核分配给进程的系统标记。</li><li>S ：进程的状态（O代表正在运行；S代表在休眠；R代表可运行，正等待运行；Z代表僵化，进程已结束但父进程已不存在；T代表停止）。</li><li>PRI ：进程的优先级（越大的数字代表越低的优先级）。</li><li>NI ：谦让度值用来参与决定优先级。</li><li>ADDR ：进程的内存地址。</li><li>SZ ：假如进程被换出，所需交换空间的大致大小。</li><li>WCHAN ：进程休眠的内核函数的地址</li></ul><p><strong>BSD风格的参数</strong></p><p>参 数</p><ul><li>T 显示跟当前终端关联的所有进程</li><li>a 显示跟任意终端关联的所有进程</li><li>g 显示所有的进程，包括控制进程</li><li>r 仅显示运行中的进程</li><li>x 显示所有的进程，甚至包括未分配任何终端的进程</li><li>U userlist 显示归 userlist 列表中某用户ID所有的进程</li><li>p pidlist 显示PID在 pidlist 列表中的进程</li><li>t ttylist 显示所关联的终端在 ttylist 列表中的进程</li><li>O format 除了默认输出的列之外，还输出由 format 指定的列</li><li>X 按过去的Linux i386寄存器格式显示</li><li>Z 将安全信息添加到输出中</li><li>j 显示任务信息</li><li>l 采用长模式</li><li>o format 仅显示由 format 指定的列</li><li>s 采用信号格式显示</li><li>u 采用基于用户的格式显示</li><li>v 采用虚拟内存格式显示</li><li>N namelist 定义在 WCHAN 列中使用的值</li><li>O order 定义显示信息列的顺序</li><li>S 将数值信息从子进程加到父进程上，比如CPU和内存的使用情况</li><li>c 显示真实的命令名称（用以启动进程的程序名称）</li><li>e 显示命令使用的环境变量</li><li>f 用分层格式来显示进程，表明哪些进程启动了哪些进程</li><li>h 不显示头信息</li><li>k sort 指定用以将输出排序的列</li><li>n 和 WCHAN 信息一起显示出来，用数值来表示用户ID和组ID</li><li>w 为较宽屏幕显示宽输出</li><li>H 将线程按进程来显示</li><li>m 在进程后显示线程</li><li>L 列出所有格式指定符</li><li>V 显示 ps 命令的版本号</li></ul><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token punctuation">[</span>root@admin home<span class="token punctuation">]</span><span class="token comment"># ps l</span>
F   <span class="token environment constant">UID</span>    PID   <span class="token environment constant">PPID</span> PRI  NI    VSZ   RSS WCHAN  STAT TTY        TIME COMMAND
<span class="token number">4</span>     <span class="token number">0</span>   <span class="token number">1155</span>      <span class="token number">1</span>  <span class="token number">20</span>   <span class="token number">0</span> <span class="token number">110212</span>  <span class="token number">1832</span> wait_w Ss+  tty1       <span class="token number">0</span>:00 /sbin/agetty <span class="token parameter variable">--noclear</span> tty1 linux
<span class="token number">4</span>     <span class="token number">0</span>   <span class="token number">2048</span>   <span class="token number">2043</span>  <span class="token number">20</span>   <span class="token number">0</span> <span class="token number">117000</span>  <span class="token number">5112</span> do_wai Ss   pts/0      <span class="token number">0</span>:00 <span class="token parameter variable">-bash</span>
<span class="token number">0</span>     <span class="token number">0</span>  <span class="token number">19813</span>   <span class="token number">2048</span>  <span class="token number">20</span>   <span class="token number">0</span> <span class="token number">108284</span>  <span class="token number">1784</span> do_sig T    pts/0      <span class="token number">0</span>:00 <span class="token function">head</span>
<span class="token number">4</span>     <span class="token number">0</span>  <span class="token number">91275</span>   <span class="token number">2048</span>  <span class="token number">20</span>   <span class="token number">0</span> <span class="token number">123936</span>  <span class="token number">3304</span> do_sig T    pts/0      <span class="token number">0</span>:05 <span class="token function">ls</span> <span class="token parameter variable">--color</span><span class="token operator">=</span>auto <span class="token parameter variable">-F</span> <span class="token parameter variable">-R</span> /
<span class="token number">0</span>     <span class="token number">0</span> <span class="token number">108430</span>   <span class="token number">2048</span>  <span class="token number">20</span>   <span class="token number">0</span> <span class="token number">108080</span>   <span class="token number">656</span> do_sig T    pts/0      <span class="token number">0</span>:00 <span class="token function">cat</span>
<span class="token number">4</span>     <span class="token number">0</span> <span class="token number">120675</span>   <span class="token number">2048</span>  <span class="token number">20</span>   <span class="token number">0</span> <span class="token number">153332</span>  <span class="token number">3776</span> -      R+   pts/0      <span class="token number">0</span>:00 <span class="token function">ps</span> l
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li>VSZ：进程在内存中的大小，以千字节（KB）为单位。</li><li>RSS：进程在未换出时占用的物理内存。</li><li>STAT：代表当前进程状态的双字符状态码</li><li><ul><li>&lt; ：该进程运行在高优先级上。</li></ul></li><li><ul><li>N ：该进程运行在低优先级上。</li></ul></li><li><ul><li>L ：该进程有页面锁定在内存中。</li></ul></li><li><ul><li>s ：该进程是控制进程。</li></ul></li><li><ul><li>l ：该进程是多线程的。</li></ul></li><li><ul><li><ul><li>：该进程运行在前台</li></ul></li></ul></li></ul><h3 id="top-实时监测进程" tabindex="-1"><a class="header-anchor" href="#top-实时监测进程" aria-hidden="true">#</a> top 实时监测进程</h3>`,19),ks=p(`<p>①、命令名称：top</p><p>②、英文原意：</p><p>③、命令所在路径：</p><p>④、执行权限：所有用户</p><p>⑤、功能描述：实时监测进程</p><p>⑥、语法：</p><p>top</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token punctuation">[</span>root@admin home<span class="token punctuation">]</span><span class="token comment"># top</span>
      当前时间     系统的运行时间  登录的用户数  平均负载<span class="token punctuation">(</span>最近1、5、15分钟的平均负载<span class="token punctuation">)</span> 
<span class="token function">top</span> - <span class="token number">16</span>:11:29 up  <span class="token number">5</span>:17,       <span class="token number">1</span> user,     load average: <span class="token number">0.03</span>, <span class="token number">0.04</span>, <span class="token number">0.01</span>
Tasks: <span class="token number">172</span> total,   <span class="token number">1</span> running,  <span class="token number">94</span> sleeping,   <span class="token number">3</span> stopped,   <span class="token number">0</span> zombie
%Cpu<span class="token punctuation">(</span>s<span class="token punctuation">)</span>:  <span class="token number">0.2</span> us,  <span class="token number">0.2</span> sy,  <span class="token number">0.0</span> ni, <span class="token number">99.5</span> id,  <span class="token number">0.0</span> wa,  <span class="token number">0.0</span> hi,  <span class="token number">0.1</span> si,  <span class="token number">0.0</span> st
KiB Mem <span class="token builtin class-name">:</span>  <span class="token number">8125040</span> total,  <span class="token number">7215700</span> free,   <span class="token number">497648</span> used,   <span class="token number">411692</span> buff/cache
KiB Swap:        <span class="token number">0</span> total,        <span class="token number">0</span> free,        <span class="token number">0</span> used.  <span class="token number">7312988</span> avail Mem

   PID <span class="token environment constant">USER</span>      PR  NI    VIRT    RES    SHR S  %CPU %MEM     TIME+ COMMAND
   <span class="token number">386</span> root     <span class="token parameter variable">-51</span>   <span class="token number">0</span>       <span class="token number">0</span>      <span class="token number">0</span>      <span class="token number">0</span> S   <span class="token number">0.3</span>  <span class="token number">0.0</span>   <span class="token number">0</span>:02.21 irq/16-vmwgfx
  <span class="token number">1341</span> mysql     <span class="token number">20</span>   <span class="token number">0</span> <span class="token number">2145300</span> <span class="token number">278712</span>  <span class="token number">15668</span> S   <span class="token number">0.3</span>  <span class="token number">3.4</span>   <span class="token number">0</span>:11.85 mysqld
  <span class="token number">2049</span> root      <span class="token number">20</span>   <span class="token number">0</span>  <span class="token number">114216</span>   <span class="token number">4088</span>   <span class="token number">2888</span> S   <span class="token number">0.3</span>  <span class="token number">0.1</span>   <span class="token number">0</span>:53.76 <span class="token function">bash</span>
<span class="token number">100754</span> root      <span class="token number">20</span>   <span class="token number">0</span>       <span class="token number">0</span>      <span class="token number">0</span>      <span class="token number">0</span> I   <span class="token number">0.3</span>  <span class="token number">0.0</span>   <span class="token number">0</span>:02.57 kworker/1:0-eve
<span class="token number">121612</span> root      <span class="token number">20</span>   <span class="token number">0</span>       <span class="token number">0</span>      <span class="token number">0</span>      <span class="token number">0</span> I   <span class="token number">0.3</span>  <span class="token number">0.0</span>   <span class="token number">0</span>:00.08 kworker/2:1-mm_
<span class="token number">125813</span> root      <span class="token number">20</span>   <span class="token number">0</span>  <span class="token number">162108</span>   <span class="token number">4536</span>   <span class="token number">3800</span> R   <span class="token number">0.3</span>  <span class="token number">0.1</span>   <span class="token number">0</span>:00.09 <span class="token function">top</span>
     <span class="token number">1</span> root      <span class="token number">20</span>   <span class="token number">0</span>  <span class="token number">125556</span>   <span class="token number">5464</span>   <span class="token number">3940</span> S   <span class="token number">0.0</span>  <span class="token number">0.1</span>   <span class="token number">0</span>:06.66 systemd
     <span class="token number">2</span> root      <span class="token number">20</span>   <span class="token number">0</span>       <span class="token number">0</span>      <span class="token number">0</span>      <span class="token number">0</span> S   <span class="token number">0.0</span>  <span class="token number">0.0</span>   <span class="token number">0</span>:00.02 kthreadd
     <span class="token number">3</span> root       <span class="token number">0</span> <span class="token parameter variable">-20</span>       <span class="token number">0</span>      <span class="token number">0</span>      <span class="token number">0</span> I   <span class="token number">0.0</span>  <span class="token number">0.0</span>   <span class="token number">0</span>:00.00 rcu_gp
     <span class="token number">4</span> root       <span class="token number">0</span> <span class="token parameter variable">-20</span>       <span class="token number">0</span>      <span class="token number">0</span>      <span class="token number">0</span> I   <span class="token number">0.0</span>  <span class="token number">0.0</span>   <span class="token number">0</span>:00.00 rcu_par_gp
     <span class="token number">6</span> root       <span class="token number">0</span> <span class="token parameter variable">-20</span>       <span class="token number">0</span>      <span class="token number">0</span>      <span class="token number">0</span> I   <span class="token number">0.0</span>  <span class="token number">0.0</span>   <span class="token number">0</span>:00.00 kworker/0:0H-kb
     <span class="token number">8</span> root       <span class="token number">0</span> <span class="token parameter variable">-20</span>       <span class="token number">0</span>      <span class="token number">0</span>      <span class="token number">0</span> I   <span class="token number">0.0</span>  <span class="token number">0.0</span>   <span class="token number">0</span>:00.00 mm_percpu_wq
     <span class="token number">9</span> root      <span class="token number">20</span>   <span class="token number">0</span>       <span class="token number">0</span>      <span class="token number">0</span>      <span class="token number">0</span> S   <span class="token number">0.0</span>  <span class="token number">0.0</span>   <span class="token number">0</span>:00.02 ksoftirqd/0
    <span class="token number">10</span> root      <span class="token number">20</span>   <span class="token number">0</span>       <span class="token number">0</span>      <span class="token number">0</span>      <span class="token number">0</span> I   <span class="token number">0.0</span>  <span class="token number">0.0</span>   <span class="token number">0</span>:10.64 rcu_sched
    <span class="token number">11</span> root      rt   <span class="token number">0</span>       <span class="token number">0</span>      <span class="token number">0</span>      <span class="token number">0</span> S   <span class="token number">0.0</span>  <span class="token number">0.0</span>   <span class="token number">0</span>:00.05 migration/0
    <span class="token number">13</span> root      <span class="token number">20</span>   <span class="token number">0</span>       <span class="token number">0</span>      <span class="token number">0</span>      <span class="token number">0</span> S   <span class="token number">0.0</span>  <span class="token number">0.0</span>   <span class="token number">0</span>:00.00 cpuhp/0
    <span class="token number">14</span> root      <span class="token number">20</span>   <span class="token number">0</span>       <span class="token number">0</span>      <span class="token number">0</span>      <span class="token number">0</span> S   <span class="token number">0.0</span>  <span class="token number">0.0</span>   <span class="token number">0</span>:00.00 cpuhp/1
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li>第一行显示了当前时间、系统的运行时间、登录的用户数以及系统的平均负载（最近1分钟的、 最近5分钟的和最近15分钟的平均负载） 值越大说明系统的负载越高。由于进程短期的突发性活动，出现最近1分钟的高负载值也很常见， 但如果近15分钟内的平均负载都很高，就说明系统可能有问题</li><li>第二行显示了进程概要信息—— top 命令的输出中将进程叫作任务（task）：有多少进程处在 运行、休眠、停止或是僵化状态（僵化状态是指进程完成了，但父进程没有响应）</li><li>第三行显示了CPU的概要信息。 top 根据进程的属主（用户还是系统）和进程的状态（运行、 空闲还是等待）将CPU利用率分成几类输出</li><li>其后的两行说明了系统内存的状态。</li><li><ul><li>第一行说的是系统的物理内存：总共有多少内存，当前用了多少，还有多少空闲。</li></ul></li><li><ul><li>后一行说的是同样的信息，不过是针对系统交换空间（如果分配了的话）的状态而言的。</li></ul></li><li>PID：进程的ID。</li><li>USER：进程属主的名字。</li><li>PR：进程的优先级。</li><li>NI：进程的谦让度值。</li><li>VIRT：进程占用的虚拟内存总量。</li><li>RES：进程占用的物理内存总量。</li><li>SHR：进程和其他进程共享的内存总量。</li><li>S：进程的状态（D代表可中断的休眠状态，R代表在运行状态，S代表休眠状态，T代表跟踪状态或停止状态，Z代表僵化状态）。</li><li>%CPU：进程使用的CPU时间比例。</li><li>%MEM：进程使用的内存占可用内存的比例。</li><li>TIME+：自进程启动到目前为止的CPU时间总量。</li><li>COMMAND：进程所对应的命令行名称，也就是启动的程序名。</li></ul><p><strong>Linux进程信号</strong></p>`,10),hs=n("h3",{id:"kill-终止进程",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#kill-终止进程","aria-hidden":"true"},"#"),s(" kill 终止进程")],-1),gs={href:"https://blog.csdn.net/qq_42476834/article/details/124719250",target:"_blank",rel:"noopener noreferrer"},fs=p(`<p>①、命令名称：kill</p><p>②、英文原意：</p><p>③、命令所在路径：</p><p>④、执行权限：所有用户</p><p>⑤、功能描述：终止进程</p><p>⑥、语法：</p><p>kill [参数] 进程号</p><table><thead><tr><th>代码</th><th>名称</th><th>描述</th></tr></thead><tbody><tr><td>0</td><td>EXIT</td><td>程序退出时收到该信息</td></tr><tr><td>1</td><td>HUP</td><td>挂起，也会造成某些进程在没有终止的情况下重新初始化。</td></tr><tr><td>2</td><td>INT</td><td>中断，表示结束进程，但并不是强制性的，常用的 “Ctrl+C” 组合键发出就是一个 kill -2 的信号。</td></tr><tr><td>3</td><td>QUIT</td><td>结束运行</td></tr><tr><td>9</td><td>KILL</td><td>杀死进程，即强制结束进程</td></tr><tr><td>11</td><td>SEGV</td><td>段错误</td></tr><tr><td>15</td><td>TERM</td><td>正常结束进程，是 kill 命令的默认信号。</td></tr><tr><td>17</td><td>STOP</td><td>无条件停止运行，但不终止</td></tr><tr><td>18</td><td>TSTP</td><td>停止或暂停，但继续在后台运行</td></tr><tr><td>19</td><td>CONT</td><td>在 STOP 或 TSTP 之后恢复执行</td></tr></tbody></table><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">kill</span> <span class="token parameter variable">-3</span> <span class="token variable">$$</span>
<span class="token function">kill</span> <span class="token parameter variable">-0</span> <span class="token environment constant">$PPID</span>
<span class="token function">kill</span> <span class="token parameter variable">-9</span> <span class="token number">5215</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>killall</strong></p><p>killall http*</p><p><strong>警告</strong>：以root用户身份登录系统时，使用 killall 命令要特别小心，因为很容易就会误用通配符 而结束了重要的系统进程。这可能会破坏文件系统。</p><h3 id="防火墙" tabindex="-1"><a class="header-anchor" href="#防火墙" aria-hidden="true">#</a> 防火墙</h3><p>实际应用场景中防火墙是要打开的，只能开放端口来外部访问。一般是通过开放端口来实现，关闭防火墙容易导致安全问题。</p><p><strong>启动命令</strong>：systemctl start firewalld；systemctl restart firewalld；systemctl status firewalld</p><p><strong>自动启动</strong>：systemctl disable firewalld | systemctl enablefirewalld</p><p><strong>开放端口</strong>：firewall-cmd --zone=public --add-port=3306/tcp --permanent</p><blockquote><p>--zone #作用域</p><p>--add-port=3306/tcp #添加端口，格式为：端口/通讯协议</p><p>--permanent #永久生效，没有此参数重启后失效</p></blockquote><p><strong>查看开启端口</strong>：netstat -ntlp 或：firewall-cmd --list-ports</p><h3 id="deepin-防火墙" tabindex="-1"><a class="header-anchor" href="#deepin-防火墙" aria-hidden="true">#</a> deepin 防火墙</h3><p><strong>获取更新</strong>：sudo apt-get update</p><p><strong>更新系统</strong>：sudo apt-get dist-upgrade -y</p><p><strong>清理更新缓存</strong>：sudo apt-get autoclean</p><p>sudo apt-get install ufw || sudo apt install gufw</p><p>sudo ufw status：active启动，inactive未启动</p><p>sudo ufw enable</p><p>sudo ufw disable</p><h3 id="端口" tabindex="-1"><a class="header-anchor" href="#端口" aria-hidden="true">#</a> 端口</h3><p>查看：netstat -tunlp |grep port</p><p>netstat -ntlp 或：firewall-cmd --list-ports</p><h3 id="修改文件监视程序数量的系统限制" tabindex="-1"><a class="header-anchor" href="#修改文件监视程序数量的系统限制" aria-hidden="true">#</a> 修改文件监视程序数量的系统限制</h3><p>sudo echo fs.inotify.max_user_watches=524288 | sudo tee -a /etc/sysctl.conf</p><h2 id="系统设置" tabindex="-1"><a class="header-anchor" href="#系统设置" aria-hidden="true">#</a> 系统设置</h2><p>reset</p><p>clear</p><p>alias</p><p>dircolors</p><p>aumix</p><p>bind</p><p>chroot</p><p>clock</p><p>crontab</p><p>declare</p><p>depmod</p><p>dmesg</p><p>enable</p><p>eval</p><p>export</p><p>pwunconv</p><p>grpconv</p><p>rpm</p><p>insmod</p><p>kbdconfig</p><p>lilo</p><p>liloconfig</p><p>lsmod</p><p>minfo</p><p>set</p><p>modprobe</p><p>ntsysv</p><p>mouseconfig</p><p>passwd</p><p>pwconv</p><p>rdate</p><p>resize</p><p>rmmod</p><p>grpunconv</p><p>modinfo</p><p>time</p><p>setup</p><p>sndconfig</p><p>setenv</p><p>setconsole</p><p>timeconfig</p><p>ulimit</p><p>unset</p><p>chkconfig</p><p>apmd</p><p>hwclock</p><p>mkkickstart</p><p>fbset</p><p>unalias</p><p>SVGATextMode</p><p>gpasswd</p><h2 id="安装软件程序" tabindex="-1"><a class="header-anchor" href="#安装软件程序" aria-hidden="true">#</a> 安装软件程序</h2><p>包管理基础</p><p>使用Debian包</p><p>使用Red Hat包</p><p>从源码安装</p><h2 id="备份压缩" tabindex="-1"><a class="header-anchor" href="#备份压缩" aria-hidden="true">#</a> 备份压缩</h2><table><thead><tr><th>命令</th><th>文件格式</th><th>描述</th></tr></thead><tbody><tr><td>bzip2</td><td>.bz2</td><td>采用Burrows-Wheeler块排序文本压缩算法和霍夫曼编码</td></tr><tr><td>gzip</td><td>.gz</td><td>用来压缩文件；输出<code>.gz</code></td></tr><tr><td>gunzip</td><td></td><td>用来解压文件</td></tr><tr><td>gzcat</td><td>.gz</td><td>用来查看压缩过的文本文件的内容</td></tr><tr><td>zip</td><td>.zip</td><td>Windows上PKZIP工具的Unix实现</td></tr><tr><td>zipinfo</td><td></td><td></td></tr><tr><td>gzexe</td><td></td><td></td></tr><tr><td>tar</td><td>.tar</td><td></td></tr></tbody></table><h3 id="tar-归档数据" tabindex="-1"><a class="header-anchor" href="#tar-归档数据" aria-hidden="true">#</a> tar 归档数据</h3>`,92),xs=p('<p>①、命令名称：tar</p><p>②、英文原意：</p><p>③、命令所在路径：</p><p>④、执行权限：所有用户</p><p>⑤、功能描述：归档数据</p><p>⑥、语法：</p><p>tar function [options] object1 object2 ...</p><p><img src="'+h+'" alt=""></p><p><img src="'+g+`" alt=""></p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">tar</span> <span class="token parameter variable">-zxvf</span> xxx.tar
<span class="token function">tar</span> <span class="token parameter variable">-zxvf</span> xxx.tar.gz
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><p>首先，你可以用下列命令来创建一个归档文件：</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">tar</span> <span class="token parameter variable">-cvf</span> test.tar test/ test2/
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>上面的命令创建了名为test.tar的归档文件，含有test和test2目录内容。接着，用下列命令：</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">tar</span> <span class="token parameter variable">-tf</span> test.tar
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>列出tar文件test.tar的内容（但并不提取文件）。最后，用命令：</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">tar</span> <span class="token parameter variable">-xvf</span> test.tar
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h2 id="磁盘管理" tabindex="-1"><a class="header-anchor" href="#磁盘管理" aria-hidden="true">#</a> 磁盘管理</h2><p>dirs</p><p>edquota</p><p>eject</p><p>mcd</p><p>mdeltree</p><p>mdu</p><p>mlabel</p><p>mmd</p><p>mrd</p><p>mzip</p><p>quota</p><p>rmt</p><p>stat</p><p>tree</p><p>umount</p><p>quotacheck</p><p>quotaoff</p><p>lndir</p><p>repquota</p><p>quotaon</p><ul><li><strong>df</strong>（英文全称：disk free）：列出文件系统的整体磁盘使用量</li><li><strong>du</strong>（英文全称：disk used）：检查磁盘空间使用量</li><li><strong>fdisk</strong>：用于磁盘分区</li></ul><h3 id="df-检查文件系统的磁盘空间占用情况" tabindex="-1"><a class="header-anchor" href="#df-检查文件系统的磁盘空间占用情况" aria-hidden="true">#</a> df 检查文件系统的磁盘空间占用情况</h3>`,39),_s=p(`<p>①、命令名称：df</p><p>②、英文原意：</p><p>③、命令所在路径：</p><p>④、执行权限：所有用户</p><p>⑤、功能描述：df命令参数功能：检查文件系统的磁盘空间占用情况。可以利用该命令来获取硬盘被占用了多少空间，目前还剩下多少空间等信息。</p><p>⑥、语法：</p><p>df [-ahikHTm] [目录或文件名]</p><p>选项与参数：</p><ul><li>-a ：列出所有的文件系统，包括系统特有的 /proc 等文件系统；</li><li>-k ：以 KBytes 的容量显示各文件系统；</li><li>-m ：以 MBytes 的容量显示各文件系统；</li><li>-h ：以人们较易阅读的 GBytes, MBytes, KBytes 等格式自行显示；</li><li>-H ：以 M=1000K 取代 M=1024K 的进位方式；</li><li>-T ：显示文件系统类型, 连同该 partition 的 filesystem 名称 (例如 ext3) 也列出；</li><li>-i ：不用硬盘容量，而以 inode 的数量来显示</li></ul><p><strong>实例 1</strong></p><p>将系统内所有的文件系统列出来！</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token punctuation">[</span>root@admin home<span class="token punctuation">]</span><span class="token comment"># df</span>
文件系统                   1K-块    已用     可用 已用% 挂载点
devtmpfs                 <span class="token number">4049260</span>       <span class="token number">0</span>  <span class="token number">4049260</span>    <span class="token number">0</span>% /dev
tmpfs                    <span class="token number">4062520</span>       <span class="token number">0</span>  <span class="token number">4062520</span>    <span class="token number">0</span>% /dev/shm
tmpfs                    <span class="token number">4062520</span>    <span class="token number">9236</span>  <span class="token number">4053284</span>    <span class="token number">1</span>% /run
tmpfs                    <span class="token number">4062520</span>       <span class="token number">0</span>  <span class="token number">4062520</span>    <span class="token number">0</span>% /sys/fs/cgroup
/dev/mapper/centos-root <span class="token number">83845120</span> <span class="token number">7093704</span> <span class="token number">76751416</span>    <span class="token number">9</span>% /
/dev/sda1                <span class="token number">1038336</span>  <span class="token number">148440</span>   <span class="token number">889896</span>   <span class="token number">15</span>% /boot
/dev/mapper/centos-home <span class="token number">95496644</span>  <span class="token number">975504</span> <span class="token number">94521140</span>    <span class="token number">2</span>% /home
tmpfs                     <span class="token number">812504</span>       <span class="token number">0</span>   <span class="token number">812504</span>    <span class="token number">0</span>% /run/user/0
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>在 Linux 底下如果 df 没有加任何选项，那么默认会将系统内所有的 (不含特殊内存内的文件系统与 swap) 都以 1 Kbytes 的容量来列出来！</p><p><strong>实例 2</strong></p><p>将容量结果以易读的容量格式显示出来</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token punctuation">[</span>root@admin home<span class="token punctuation">]</span><span class="token comment"># df -h</span>
文件系统                 容量  已用  可用 已用% 挂载点
devtmpfs                 <span class="token number">3</span>.9G     <span class="token number">0</span>  <span class="token number">3</span>.9G    <span class="token number">0</span>% /dev
tmpfs                    <span class="token number">3</span>.9G     <span class="token number">0</span>  <span class="token number">3</span>.9G    <span class="token number">0</span>% /dev/shm
tmpfs                    <span class="token number">3</span>.9G  <span class="token number">9</span>.1M  <span class="token number">3</span>.9G    <span class="token number">1</span>% /run
tmpfs                    <span class="token number">3</span>.9G     <span class="token number">0</span>  <span class="token number">3</span>.9G    <span class="token number">0</span>% /sys/fs/cgroup
/dev/mapper/centos-root   80G  <span class="token number">6</span>.8G   74G    <span class="token number">9</span>% /
/dev/sda1               1014M  145M  870M   <span class="token number">15</span>% /boot
/dev/mapper/centos-home   92G  953M   91G    <span class="token number">2</span>% /home
tmpfs                    794M     <span class="token number">0</span>  794M    <span class="token number">0</span>% /run/user/0

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>实例 3</strong></p><p>将系统内的所有特殊文件格式及名称都列出来</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token punctuation">[</span>root@admin home<span class="token punctuation">]</span><span class="token comment"># df -aT</span>
文件系统                类型           1K-块    已用     可用 已用% 挂载点
sysfs                   sysfs              <span class="token number">0</span>       <span class="token number">0</span>        <span class="token number">0</span>     - /sys
proc                    proc               <span class="token number">0</span>       <span class="token number">0</span>        <span class="token number">0</span>     - /proc
devtmpfs                devtmpfs     <span class="token number">4049260</span>       <span class="token number">0</span>  <span class="token number">4049260</span>    <span class="token number">0</span>% /dev
securityfs              securityfs         <span class="token number">0</span>       <span class="token number">0</span>        <span class="token number">0</span>     - /sys/kernel/security
tmpfs                   tmpfs        <span class="token number">4062520</span>       <span class="token number">0</span>  <span class="token number">4062520</span>    <span class="token number">0</span>% /dev/shm
devpts                  devpts             <span class="token number">0</span>       <span class="token number">0</span>        <span class="token number">0</span>     - /dev/pts
cgroup                  cgroup             <span class="token number">0</span>       <span class="token number">0</span>        <span class="token number">0</span>     - /sys/fs/cgroup/systemd
pstore                  pstore             <span class="token number">0</span>       <span class="token number">0</span>        <span class="token number">0</span>     - /sys/fs/pstore
configfs                configfs           <span class="token number">0</span>       <span class="token number">0</span>        <span class="token number">0</span>     - /sys/kernel/config
/dev/mapper/centos-root xfs         <span class="token number">83845120</span> <span class="token number">7093704</span> <span class="token number">76751416</span>    <span class="token number">9</span>% /
systemd-1               -                  -       -        -     - /proc/sys/fs/binfmt_misc
debugfs                 debugfs            <span class="token number">0</span>       <span class="token number">0</span>        <span class="token number">0</span>     - /sys/kernel/debug
mqueue                  mqueue             <span class="token number">0</span>       <span class="token number">0</span>        <span class="token number">0</span>     - /dev/mqueue
hugetlbfs               hugetlbfs          <span class="token number">0</span>       <span class="token number">0</span>        <span class="token number">0</span>     - /dev/hugepages
fusectl                 fusectl            <span class="token number">0</span>       <span class="token number">0</span>        <span class="token number">0</span>     - /sys/fs/fuse/connections
/dev/sda1               xfs          <span class="token number">1038336</span>  <span class="token number">148440</span>   <span class="token number">889896</span>   <span class="token number">15</span>% /boot
/dev/mapper/centos-home xfs         <span class="token number">95496644</span>  <span class="token number">975504</span> <span class="token number">94521140</span>    <span class="token number">2</span>% /home
sunrpc                  rpc_pipefs         <span class="token number">0</span>       <span class="token number">0</span>        <span class="token number">0</span>     - /var/lib/nfs/rpc_pipefs
binfmt_misc             binfmt_misc        <span class="token number">0</span>       <span class="token number">0</span>        <span class="token number">0</span>     - /proc/sys/fs/binfmt_misc
tmpfs                   tmpfs         <span class="token number">812504</span>       <span class="token number">0</span>   <span class="token number">812504</span>    <span class="token number">0</span>% /run/user/0
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>实例 4</strong></p><p>将 /etc 底下的可用的磁盘容量以易读的容量格式显示</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token punctuation">[</span>root@admin home<span class="token punctuation">]</span><span class="token comment"># df -h /etc</span>
文件系统                   容量  已用    可用  已用%   挂载点
/dev/mapper/centos-root   80G  <span class="token number">6</span>.8G   74G   <span class="token number">9</span>%    /
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="du-查看使用空间" tabindex="-1"><a class="header-anchor" href="#du-查看使用空间" aria-hidden="true">#</a> du 查看使用空间</h3>`,23),Es=p(`<p>①、命令名称：du</p><p>②、英文原意：</p><p>③、命令所在路径：</p><p>④、执行权限：所有用户</p><p>⑤、功能描述：Linux du 命令也是查看使用空间的，但是与 df 命令不同的是 Linux du 命令是对文件和目录磁盘使用的空间的查看，还是和df命令有一些区别的，这里介绍 Linux du 命令。</p><p>⑥、语法：</p><p>du [-ahskm] 文件或目录名称</p><p>选项与参数：</p><ul><li>-a ：列出所有的文件与目录容量，因为默认仅统计目录底下的文件量而已。</li><li>-h ：以人们较易读的容量格式 (G/M) 显示；</li><li>-s ：列出总量而已，而不列出每个各别的目录占用容量；</li><li>-S ：不包括子目录下的总计，与 -s 有点差别。</li><li>-k ：以 KBytes 列出容量显示；</li><li>-m ：以 MBytes 列出容量显示；</li></ul><p><strong>实例 1</strong></p><p>只列出当前目录下的所有文件夹容量（包括隐藏文件夹）:</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token punctuation">[</span>root@admin home<span class="token punctuation">]</span><span class="token comment"># du</span>
<span class="token number">4</span>       ./c 	<span class="token operator">&lt;=</span><span class="token operator">=</span>每个目录都会列出来
<span class="token number">942476</span>  ./soft	<span class="token operator">&lt;=</span><span class="token operator">=</span>每个目录都会列出来
<span class="token number">942480</span>  <span class="token builtin class-name">.</span>		<span class="token operator">&lt;=</span><span class="token operator">=</span>这个目录<span class="token punctuation">(</span>.<span class="token punctuation">)</span>所占用的总量
<span class="token punctuation">..</span><span class="token punctuation">..</span>中间省略<span class="token punctuation">..</span><span class="token punctuation">..</span>
<span class="token number">12</span>      ./.gconfd   <span class="token operator">&lt;=</span><span class="token operator">=</span>包括隐藏文件的目录          
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>直接输入 du 没有加任何选项时，则 du 会分析当前所在目录里的子目录所占用的硬盘空间。</p><p><strong>实例 2</strong></p><p>将文件的容量也列出来</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token punctuation">[</span>root@admin ~<span class="token punctuation">]</span><span class="token comment"># du -a</span>
<span class="token number">4</span>       ./.bash_logout
<span class="token number">4</span>       ./.bash_profile
<span class="token number">4</span>       ./.bashrc
<span class="token number">4</span>       ./.ssh/id_rsa
<span class="token number">4</span>       ./.ssh/id_rsa.pub
<span class="token number">4</span>       ./.ssh/known_hosts
<span class="token number">12</span>      ./.ssh
<span class="token punctuation">..</span><span class="token punctuation">..</span>中间省略<span class="token punctuation">..</span><span class="token punctuation">..</span>
<span class="token number">8080</span>    <span class="token builtin class-name">.</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>实例 3</strong></p><p>检查根目录底下每个目录所占用的容量</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token punctuation">[</span>root@admin ~<span class="token punctuation">]</span><span class="token comment"># du -sm /*</span>
<span class="token number">0</span>       /bin
<span class="token number">113</span>     /boot
<span class="token number">0</span>       /data
<span class="token number">0</span>       /dev
<span class="token number">1</span>       /dump.rdb
<span class="token number">367</span>     /etc
<span class="token number">921</span>     /home
<span class="token number">0</span>       /lib
<span class="token number">0</span>       /lib64
<span class="token number">1</span>       /main.log
<span class="token number">0</span>       /media
<span class="token number">0</span>       /mnt
<span class="token number">0</span>       /opt
du: 无法访问<span class="token string">&quot;/proc/14950&quot;</span><span class="token builtin class-name">:</span> 没有那个文件或目录
du: 无法访问<span class="token string">&quot;/proc/14951/task/14951/fd/3&quot;</span><span class="token builtin class-name">:</span> 没有那个文件或目录
du: 无法访问<span class="token string">&quot;/proc/14951/task/14951/fdinfo/3&quot;</span><span class="token builtin class-name">:</span> 没有那个文件或目录
du: 无法访问<span class="token string">&quot;/proc/14951/fd/3&quot;</span><span class="token builtin class-name">:</span> 没有那个文件或目录
du: 无法访问<span class="token string">&quot;/proc/14951/fdinfo/3&quot;</span><span class="token builtin class-name">:</span> 没有那个文件或目录
<span class="token number">0</span>       /proc
<span class="token number">8</span>       /root
<span class="token number">10</span>      /run
<span class="token number">0</span>       /sbin
<span class="token number">0</span>       /srv
<span class="token number">0</span>       /sys
<span class="token number">1</span>       /tmp
<span class="token number">4724</span>    /usr
<span class="token number">1725</span>    /var
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>通配符 * 来代表每个目录。</p><p>与 df 不一样的是，du 这个命令其实会直接到文件系统内去搜寻所有的文件数据。</p><h3 id="fdisk-磁盘分区表" tabindex="-1"><a class="header-anchor" href="#fdisk-磁盘分区表" aria-hidden="true">#</a> fdisk 磁盘分区表</h3>`,22),ws=p(`<p>①、命令名称：</p><p>②、英文原意：</p><p>③、命令所在路径：</p><p>④、执行权限：所有用户</p><p>⑤、功能描述：</p><p>⑥、语法：</p><p>fdisk 是 Linux 的磁盘分区表操作工具。</p><p>语法：</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">fdisk</span> <span class="token punctuation">[</span>-l<span class="token punctuation">]</span> 装置名称
<span class="token function">fdisk</span> <span class="token punctuation">[</span>选项<span class="token punctuation">]</span> <span class="token operator">&lt;</span>磁盘<span class="token operator">&gt;</span>    更改分区表
<span class="token function">fdisk</span> <span class="token punctuation">[</span>选项<span class="token punctuation">]</span> <span class="token parameter variable">-l</span> <span class="token operator">&lt;</span>磁盘<span class="token operator">&gt;</span> 列出分区表
<span class="token function">fdisk</span> <span class="token parameter variable">-s</span> <span class="token operator">&lt;</span>分区<span class="token operator">&gt;</span>        给出分区大小<span class="token punctuation">(</span>块数<span class="token punctuation">)</span>
选项：
 <span class="token parameter variable">-b</span> <span class="token operator">&lt;</span>大小<span class="token operator">&gt;</span>             扇区大小<span class="token punctuation">(</span><span class="token number">512</span>、1024、2048或4096<span class="token punctuation">)</span>
 -c<span class="token punctuation">[</span><span class="token operator">=</span><span class="token operator">&lt;</span>模式<span class="token operator">&gt;</span><span class="token punctuation">]</span>           兼容模式：“dos”或“nondos”<span class="token punctuation">(</span>默认<span class="token punctuation">)</span>
 <span class="token parameter variable">-h</span>                    打印此帮助文本
 -u<span class="token punctuation">[</span><span class="token operator">=</span><span class="token operator">&lt;</span>单位<span class="token operator">&gt;</span><span class="token punctuation">]</span>           显示单位：“cylinders”<span class="token punctuation">(</span>柱面<span class="token punctuation">)</span>或“sectors”<span class="token punctuation">(</span>扇区，默认<span class="token punctuation">)</span>
 <span class="token parameter variable">-v</span>                    打印程序版本
 <span class="token parameter variable">-C</span> <span class="token operator">&lt;</span>数字<span class="token operator">&gt;</span>             指定柱面数
 <span class="token parameter variable">-H</span> <span class="token operator">&lt;</span>数字<span class="token operator">&gt;</span>             指定磁头数
 <span class="token parameter variable">-S</span> <span class="token operator">&lt;</span>数字<span class="token operator">&gt;</span>             指定每个磁道的扇区数
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>选项与参数：</p><ul><li>-l ：输出后面接的装置所有的分区内容。若仅有 fdisk -l 时，则系统将会把整个系统内能够搜寻到的装置的分区均列出来。</li></ul><p><strong>实例 1</strong></p><p>列出所有分区信息</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token punctuation">[</span>root@admin ~<span class="token punctuation">]</span><span class="token comment"># fdisk -l</span>

磁盘 /dev/sda：193.3 GB, <span class="token number">193273528320</span> 字节，377487360 个扇区
Units <span class="token operator">=</span> 扇区 of <span class="token number">1</span> * <span class="token number">512</span> <span class="token operator">=</span> <span class="token number">512</span> bytes
扇区大小<span class="token punctuation">(</span>逻辑/物理<span class="token punctuation">)</span>：512 字节 / <span class="token number">512</span> 字节
I/O 大小<span class="token punctuation">(</span>最小/最佳<span class="token punctuation">)</span>：512 字节 / <span class="token number">512</span> 字节
磁盘标签类型：dos
磁盘标识符：0x000ab2a1

   设备 Boot      Start         End      Blocks   Id  System
/dev/sda1   *        <span class="token number">2048</span>     <span class="token number">2099199</span>     <span class="token number">1048576</span>   <span class="token number">83</span>  Linux
/dev/sda2         <span class="token number">2099200</span>   <span class="token number">377487359</span>   <span class="token number">187694080</span>   8e  Linux LVM

磁盘 /dev/mapper/centos-root：85.9 GB, <span class="token number">85899345920</span> 字节，167772160 个扇区
Units <span class="token operator">=</span> 扇区 of <span class="token number">1</span> * <span class="token number">512</span> <span class="token operator">=</span> <span class="token number">512</span> bytes
扇区大小<span class="token punctuation">(</span>逻辑/物理<span class="token punctuation">)</span>：512 字节 / <span class="token number">512</span> 字节
I/O 大小<span class="token punctuation">(</span>最小/最佳<span class="token punctuation">)</span>：512 字节 / <span class="token number">512</span> 字节


磁盘 /dev/mapper/centos-swap：8455 MB, <span class="token number">8455716864</span> 字节，16515072 个扇区
Units <span class="token operator">=</span> 扇区 of <span class="token number">1</span> * <span class="token number">512</span> <span class="token operator">=</span> <span class="token number">512</span> bytes
扇区大小<span class="token punctuation">(</span>逻辑/物理<span class="token punctuation">)</span>：512 字节 / <span class="token number">512</span> 字节
I/O 大小<span class="token punctuation">(</span>最小/最佳<span class="token punctuation">)</span>：512 字节 / <span class="token number">512</span> 字节


磁盘 /dev/mapper/centos-home：97.8 GB, <span class="token number">97836335104</span> 字节，191086592 个扇区
Units <span class="token operator">=</span> 扇区 of <span class="token number">1</span> * <span class="token number">512</span> <span class="token operator">=</span> <span class="token number">512</span> bytes
扇区大小<span class="token punctuation">(</span>逻辑/物理<span class="token punctuation">)</span>：512 字节 / <span class="token number">512</span> 字节
I/O 大小<span class="token punctuation">(</span>最小/最佳<span class="token punctuation">)</span>：512 字节 / <span class="token number">512</span> 字节
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>实例 2</strong></p><p>找出你系统中的根目录所在磁盘，并查阅该硬盘内的相关信息</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token punctuation">[</span>root@admin ~<span class="token punctuation">]</span><span class="token comment"># df /</span>
文件系统                   1K-块    已用     可用 已用% 挂载点
/dev/mapper/centos-root <span class="token number">83845120</span> <span class="token number">7093716</span> <span class="token number">76751404</span>    <span class="token number">9</span>% /
<span class="token punctuation">[</span>root@admin ~<span class="token punctuation">]</span><span class="token comment">#</span>
<span class="token punctuation">[</span>root@admin ~<span class="token punctuation">]</span><span class="token comment"># fdisk /dev/mapper/centos-root</span>
欢迎使用 <span class="token function">fdisk</span> <span class="token punctuation">(</span>util-linux <span class="token number">2.23</span>.2<span class="token punctuation">)</span>。

更改将停留在内存中，直到您决定将更改写入磁盘。
使用写入命令前请三思。

Device does not contain a recognized partition table
使用磁盘标识符 0x49e1bab1 创建新的 DOS 磁盘标签。

命令<span class="token punctuation">(</span>输入 m 获取帮助<span class="token punctuation">)</span>： 			<span class="token operator">&lt;=</span><span class="token operator">=</span>等待你的输入！
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>命令操作</strong></p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>命令<span class="token punctuation">(</span>输入 m 获取帮助<span class="token punctuation">)</span>：m			<span class="token operator">&lt;=</span><span class="token operator">=</span> 输入 m 后，就会看到底下这些命令介绍
命令操作
    a	切换可引导标志
    b	编辑bsd磁盘标签
    c	切换dos兼容性标志
    d	删除分区
    g	创建一个新的空GPT分区表
    G	创建IRIX（SGI）分区表
    l	已知分区类型列表
    m	打印此菜单
    n	添加新分区
    o	创建一个新的空DOS分区表
    p	打印分区表
    q	退出而不保存更改
    s	创建一个新的空Sun磁盘标签
    t	更改分区的系统id
    u	更改显示/输入单位
    <span class="token function">v</span>	验证分区表
    w	将表写入磁盘并退出
    x	额外功能（仅限专家）
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>离开 fdisk 时按下 <code>q</code>，那么所有的动作都不会生效！相反的， 按下<code>w</code>就是动作生效的意思。</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>Command <span class="token punctuation">(</span>m <span class="token keyword">for</span> <span class="token builtin class-name">help</span><span class="token punctuation">)</span>: p  <span class="token operator">&lt;=</span><span class="token operator">=</span> 这里可以输出目前磁盘的状态

Disk /dev/hdc: <span class="token number">41.1</span> GB, <span class="token number">41174138880</span> bytes        <span class="token operator">&lt;=</span><span class="token operator">=</span>这个磁盘的文件名与容量
<span class="token number">255</span> heads, <span class="token number">63</span> sectors/track, <span class="token number">5005</span> cylinders      <span class="token operator">&lt;=</span><span class="token operator">=</span>磁头、扇区与磁柱大小
Units <span class="token operator">=</span> cylinders of <span class="token number">16065</span> * <span class="token number">512</span> <span class="token operator">=</span> <span class="token number">8225280</span> bytes <span class="token operator">&lt;=</span><span class="token operator">=</span>每个磁柱的大小

   Device Boot      Start         End      Blocks   Id  System
/dev/hdc1   *           <span class="token number">1</span>          <span class="token number">13</span>      <span class="token number">104391</span>   <span class="token number">83</span>  Linux
/dev/hdc2              <span class="token number">14</span>        <span class="token number">1288</span>    <span class="token number">10241437</span>+  <span class="token number">83</span>  Linux
/dev/hdc3            <span class="token number">1289</span>        <span class="token number">1925</span>     <span class="token number">5116702</span>+  <span class="token number">83</span>  Linux
/dev/hdc4            <span class="token number">1926</span>        <span class="token number">5005</span>    <span class="token number">24740100</span>    <span class="token number">5</span>  Extended
/dev/hdc5            <span class="token number">1926</span>        <span class="token number">2052</span>     <span class="token number">1020096</span>   <span class="token number">82</span>  Linux swap / Solaris
<span class="token comment"># 装置文件名 启动区否 开始磁柱    结束磁柱  1K大小容量 磁盘分区槽内的系统</span>

Command <span class="token punctuation">(</span>m <span class="token keyword">for</span> <span class="token builtin class-name">help</span><span class="token punctuation">)</span>: q
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>想要不储存离开吗？按下 q 就对了！不要随便按 w 啊！</p><p>使用 <code>p</code> 可以列出目前这颗磁盘的分割表信息，这个信息的上半部在显示整体磁盘的状态。</p><h3 id="mkfs-磁盘格式化" tabindex="-1"><a class="header-anchor" href="#mkfs-磁盘格式化" aria-hidden="true">#</a> mkfs 磁盘格式化</h3>`,24),ys=p(`<p>①、命令名称：</p><p>②、英文原意：</p><p>③、命令所在路径：</p><p>④、执行权限：所有用户</p><p>⑤、功能描述：</p><p>⑥、语法：</p><p>磁盘分割完毕后自然就是要进行文件系统的格式化，格式化的命令非常的简单，使用 <code>mkfs</code>（make filesystem） 命令。</p><p>语法：</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">mkfs</span> <span class="token punctuation">[</span>-t 文件系统格式<span class="token punctuation">]</span> 装置文件名
<span class="token function">mkfs</span> <span class="token punctuation">[</span>选项<span class="token punctuation">]</span> <span class="token punctuation">[</span>-t <span class="token operator">&lt;</span>类型<span class="token operator">&gt;</span><span class="token punctuation">]</span> <span class="token punctuation">[</span>文件系统选项<span class="token punctuation">]</span> <span class="token operator">&lt;</span>设备<span class="token operator">&gt;</span> <span class="token punctuation">[</span><span class="token operator">&lt;</span>大小<span class="token operator">&gt;</span><span class="token punctuation">]</span>
选项：
 -t, <span class="token parameter variable">--type</span><span class="token operator">=</span><span class="token operator">&lt;</span>类型<span class="token operator">&gt;</span>   文件系统类型；若不指定，将使用 ext2
     fs-options     实际文件系统构建程序的参数
     <span class="token operator">&lt;</span>设备<span class="token operator">&gt;</span>          要使用设备的路径
     <span class="token operator">&lt;</span>大小<span class="token operator">&gt;</span>          要使用设备上的块数
 -V, <span class="token parameter variable">--verbose</span>       解释正在进行的操作；
                      多次指定 <span class="token parameter variable">-V</span> 将导致空运行<span class="token punctuation">(</span>dry-run<span class="token punctuation">)</span>
 -V, <span class="token parameter variable">--version</span>       显示版本信息并退出
                      将 <span class="token parameter variable">-V</span> 作为 <span class="token parameter variable">--version</span> 选项时必须是惟一选项
 -h, <span class="token parameter variable">--help</span>          显示此帮助并退出
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>实例 1</strong></p><p>查看 mkfs 支持的文件格式</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token punctuation">[</span>root@admin ~<span class="token punctuation">]</span><span class="token comment"># mkfs[tab][tab]</span>
<span class="token function">mkfs</span>         mkfs.cramfs  mkfs.ext2    mkfs.ext3    mkfs.msdos   mkfs.vfat
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><p>按下两个[tab]，会发现 mkfs 支持的文件格式如上所示。</p><p><strong>实例 2</strong></p><p>将分区 <code>/dev/hdc6</code>（可指定你自己的分区） 格式化为 <code>ext3</code> 文件系统：</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token punctuation">[</span>root@admin ~<span class="token punctuation">]</span><span class="token comment"># mkfs -t ext3 /dev/hdc6</span>
<span class="token function">mke2fs</span> <span class="token number">1.39</span> <span class="token punctuation">(</span><span class="token number">29</span>-May-2006<span class="token punctuation">)</span>
Filesystem <span class="token assign-left variable">label</span><span class="token operator">=</span>                <span class="token operator">&lt;=</span><span class="token operator">=</span>这里指的是分割槽的名称<span class="token punctuation">(</span>label<span class="token punctuation">)</span>
OS type: Linux
Block <span class="token assign-left variable">size</span><span class="token operator">=</span><span class="token number">4096</span> <span class="token punctuation">(</span>log<span class="token operator">=</span><span class="token number">2</span><span class="token punctuation">)</span>          <span class="token operator">&lt;=</span><span class="token operator">=</span>block 的大小配置为 4K 
Fragment <span class="token assign-left variable">size</span><span class="token operator">=</span><span class="token number">4096</span> <span class="token punctuation">(</span>log<span class="token operator">=</span><span class="token number">2</span><span class="token punctuation">)</span>
<span class="token number">251392</span> inodes, <span class="token number">502023</span> blocks     <span class="token operator">&lt;=</span><span class="token operator">=</span>由此配置决定的inode/block数量
<span class="token number">25101</span> blocks <span class="token punctuation">(</span><span class="token number">5.00</span>%<span class="token punctuation">)</span> reserved <span class="token keyword">for</span> the super user
First data <span class="token assign-left variable">block</span><span class="token operator">=</span><span class="token number">0</span>
Maximum filesystem <span class="token assign-left variable">blocks</span><span class="token operator">=</span><span class="token number">515899392</span>
<span class="token number">16</span> block <span class="token function">groups</span>
<span class="token number">32768</span> blocks per group, <span class="token number">32768</span> fragments per group
<span class="token number">15712</span> inodes per group
Superblock backups stored on blocks:
        <span class="token number">32768</span>, <span class="token number">98304</span>, <span class="token number">163840</span>, <span class="token number">229376</span>, <span class="token number">294912</span>

Writing inode tables: <span class="token keyword">done</span>
Creating journal <span class="token punctuation">(</span><span class="token number">8192</span> blocks<span class="token punctuation">)</span>: <span class="token keyword">done</span> <span class="token operator">&lt;=</span><span class="token operator">=</span>有日志记录
Writing superblocks and filesystem accounting information: <span class="token keyword">done</span>

This filesystem will be automatically checked every <span class="token number">34</span> mounts or
<span class="token number">180</span> days, whichever comes first.  Use tune2fs <span class="token parameter variable">-c</span> or <span class="token parameter variable">-i</span> to override.
<span class="token comment"># 这样就创建起来我们所需要的 Ext3 文件系统了！简单明了！</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="fsck-磁盘检验" tabindex="-1"><a class="header-anchor" href="#fsck-磁盘检验" aria-hidden="true">#</a> fsck 磁盘检验</h3>`,17),Bs=p(`<p>①、命令名称：</p><p>②、英文原意：</p><p>③、命令所在路径：</p><p>④、执行权限：所有用户</p><p>⑤、功能描述：</p><p>⑥、语法：</p><p>fsck（file system check）用来检查和维护不一致的文件系统。</p><p>若系统掉电或磁盘发生问题，可利用fsck命令对文件系统进行检查。</p><p>语法：</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">fsck</span> <span class="token punctuation">[</span>-t 文件系统<span class="token punctuation">]</span> <span class="token punctuation">[</span>-ACay<span class="token punctuation">]</span> 装置名称
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>选项与参数：</p><ul><li>-t : 给定档案系统的型式，若在 /etc/fstab 中已有定义或 kernel 本身已支援的则不需加上此参数</li><li>-s : 依序一个一个地执行 fsck 的指令来检查</li><li>-A : 对/etc/fstab 中所有列出来的 分区（partition）做检查</li><li>-C : 显示完整的检查进度</li><li>-d : 打印出 e2fsck 的 debug 结果</li><li>-p : 同时有 -A 条件时，同时有多个 fsck 的检查一起执行</li><li>-R : 同时有 -A 条件时，省略 / 不检查</li><li>-V : 详细显示模式</li><li>-a : 如果检查有错则自动修复</li><li>-r : 如果检查有错则由使用者回答是否修复</li><li>-y : 选项指定检测每个文件是自动输入yes，在不确定那些是不正常的时候，可以执行 # fsck -y 全部检查修复。</li></ul><p><strong>实例 1</strong></p><p>查看系统有多少文件系统支持的 fsck 命令：</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token punctuation">[</span>root@admin ~<span class="token punctuation">]</span><span class="token comment"># fsck[tab][tab]</span>
<span class="token function">fsck</span>         fsck.cramfs  fsck.ext2    fsck.ext3    fsck.msdos   fsck.vfat
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>实例 2</strong></p><p>强制检测 /dev/hdc6 分区:</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token punctuation">[</span>root@admin ~<span class="token punctuation">]</span><span class="token comment"># fsck -C -f -t ext3 /dev/hdc6 </span>
<span class="token function">fsck</span> <span class="token number">1.39</span> <span class="token punctuation">(</span><span class="token number">29</span>-May-2006<span class="token punctuation">)</span>
e2fsck <span class="token number">1.39</span> <span class="token punctuation">(</span><span class="token number">29</span>-May-2006<span class="token punctuation">)</span>
Pass <span class="token number">1</span>: Checking inodes, blocks, and sizes
Pass <span class="token number">2</span>: Checking directory structure
Pass <span class="token number">3</span>: Checking directory connectivity
Pass <span class="token number">4</span>: Checking reference counts
Pass <span class="token number">5</span>: Checking group summary information
vbird_logical: <span class="token number">11</span>/251968 files <span class="token punctuation">(</span><span class="token number">9.1</span>% non-contiguous<span class="token punctuation">)</span>, <span class="token number">36926</span>/1004046 blocks
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>如果没有加上 -f 的选项，则由于这个文件系统不曾出现问题，检查的经过非常快速！若加上 -f 强制检查，才会一项一项的显示过程。</p><h3 id="mount-磁盘挂载与卸除" tabindex="-1"><a class="header-anchor" href="#mount-磁盘挂载与卸除" aria-hidden="true">#</a> mount 磁盘挂载与卸除</h3>`,20),qs=p(`<p>①、命令名称：</p><p>②、英文原意：</p><p>③、命令所在路径：</p><p>④、执行权限：所有用户</p><p>⑤、功能描述：</p><p>⑥、语法：</p><p>Linux 的磁盘挂载使用 <code>mount</code> 命令，卸载使用 <code>umount</code> 命令。</p><p><strong>磁盘挂载语法：</strong></p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">mount</span> <span class="token punctuation">[</span>-t 文件系统<span class="token punctuation">]</span> <span class="token punctuation">[</span>-L Label名<span class="token punctuation">]</span> <span class="token punctuation">[</span>-o 额外选项<span class="token punctuation">]</span> <span class="token punctuation">[</span>-n<span class="token punctuation">]</span>  装置文件名  挂载点
<span class="token function">mount</span> <span class="token punctuation">[</span>-lhV<span class="token punctuation">]</span>
<span class="token function">mount</span> <span class="token parameter variable">-a</span> <span class="token punctuation">[</span>选项<span class="token punctuation">]</span>
<span class="token function">mount</span> <span class="token punctuation">[</span>选项<span class="token punctuation">]</span> <span class="token punctuation">[</span>--source<span class="token punctuation">]</span> <span class="token operator">&lt;</span>源<span class="token operator">&gt;</span> <span class="token operator">|</span> <span class="token punctuation">[</span>--target<span class="token punctuation">]</span> <span class="token operator">&lt;</span>目录<span class="token operator">&gt;</span>
<span class="token function">mount</span> <span class="token punctuation">[</span>选项<span class="token punctuation">]</span> <span class="token operator">&lt;</span>源<span class="token operator">&gt;</span> <span class="token operator">&lt;</span>目录<span class="token operator">&gt;</span>
<span class="token function">mount</span> <span class="token operator">&lt;</span>操作<span class="token operator">&gt;</span> <span class="token operator">&lt;</span>挂载点<span class="token operator">&gt;</span> <span class="token punctuation">[</span><span class="token operator">&lt;</span>目标<span class="token operator">&gt;</span><span class="token punctuation">]</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li>-a 挂载/etc/fstab文件中指定的所有文件系统</li><li>-f 使 mount 命令模拟挂载设备，但并不真的挂载</li><li>-F 和 -a 参数一起使用时，会同时挂载所有文件系统</li><li>-v 详细模式，将会说明挂载设备的每一步</li><li>-I 不启用任何/sbin/mount.filesystem下的文件系统帮助文件</li><li>-l 给ext2、ext3或XFS文件系统自动添加文件系统标签</li><li>-n 挂载设备，但不注册到/etc/mtab已挂载设备文件中</li><li>-p num 进行加密挂载时，从文件描述符 num 中获得密码短语</li><li>-s 忽略该文件系统不支持的挂载选项</li><li>-r 将设备挂载为只读的</li><li>-w 将设备挂载为可读写的（默认参数）</li><li>-L label 将设备按指定的 label 挂载</li><li>-U uuid 将设备按指定的 uuid 挂载</li><li>-O 和 -a 参数一起使用，限制命令只作用到特定的一组文件系统上</li><li>-o 给文件系统添加特定的选项</li></ul><p><code>-o</code> 参数允许在挂载文件系统时添加一些以逗号分隔的额外选项。以下为常用的选项。</p><ul><li>ro ：以只读形式挂载。</li><li>rw ：以读写形式挂载。</li><li>user ：允许普通用户挂载文件系统。</li><li>check=none ：挂载文件系统时不进行完整性校验。</li><li>loop ：挂载一个文件。</li></ul><p>mount 命令提供如下四部分信息：</p><ul><li>媒体的设备文件名</li><li>媒体挂载到虚拟目录的挂载点</li><li>文件系统类型</li><li>已挂载媒体的访问状态</li></ul><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token punctuation">[</span>root@admin home<span class="token punctuation">]</span><span class="token comment"># mount</span>
sysfs on /sys <span class="token builtin class-name">type</span> sysfs <span class="token punctuation">(</span>rw,nosuid,nodev,noexec,relatime<span class="token punctuation">)</span>
proc on /proc <span class="token builtin class-name">type</span> proc <span class="token punctuation">(</span>rw,nosuid,nodev,noexec,relatime<span class="token punctuation">)</span>
devtmpfs on /dev <span class="token builtin class-name">type</span> devtmpfs <span class="token punctuation">(</span>rw,nosuid,size<span class="token operator">=</span>4049260k,nr_inodes<span class="token operator">=</span><span class="token number">1012315</span>,mode<span class="token operator">=</span><span class="token number">755</span><span class="token punctuation">)</span>
securityfs on /sys/kernel/security <span class="token builtin class-name">type</span> securityfs <span class="token punctuation">(</span>rw,nosuid,nodev,noexec,relatime<span class="token punctuation">)</span>
tmpfs on /dev/shm <span class="token builtin class-name">type</span> tmpfs <span class="token punctuation">(</span>rw,nosuid,nodev<span class="token punctuation">)</span>

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>用默认的方式，将刚刚创建的 /dev/hdc6 挂载到 /mnt/hdc6 上面！</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token punctuation">[</span>root@admin ~<span class="token punctuation">]</span><span class="token comment"># mkdir /mnt/hdc6</span>
<span class="token punctuation">[</span>root@admin ~<span class="token punctuation">]</span><span class="token comment"># mount /dev/hdc6 /mnt/hdc6</span>
<span class="token punctuation">[</span>root@admin ~<span class="token punctuation">]</span><span class="token comment"># df</span>
Filesystem           1K-blocks      Used Available Use% Mounted on
<span class="token punctuation">..</span><span class="token punctuation">..</span>.中间省略<span class="token punctuation">..</span><span class="token punctuation">..</span>.
/dev/hdc6              <span class="token number">1976312</span>     <span class="token number">42072</span>   <span class="token number">1833836</span>   <span class="token number">3</span>% /mnt/hdc6
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>手动挂载媒体设备的基本命令</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">mount</span> <span class="token parameter variable">-t</span> <span class="token builtin class-name">type</span> device directory
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>手动将U盘/dev/sdb1挂载到/media/disk</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">mount</span> <span class="token parameter variable">-t</span> vfat /dev/sdb1 /media/disk
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p><strong>磁盘卸载命令 <code>umount</code> 语法：</strong></p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">umount</span> <span class="token punctuation">[</span>-fn<span class="token punctuation">]</span> 装置文件名或挂载点
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>选项与参数：</p><ul><li>-f ：强制卸除！可用在类似网络文件系统 (NFS) 无法读取到的情况下；</li><li>-n ：不升级 /etc/mtab 情况下卸除。</li></ul><p><strong>卸载 /dev/hdc6</strong></p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token punctuation">[</span>root@admin ~<span class="token punctuation">]</span><span class="token comment"># umount /dev/hdc6     </span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h2 id="磁盘维护" tabindex="-1"><a class="header-anchor" href="#磁盘维护" aria-hidden="true">#</a> 磁盘维护</h2><p>badblocks</p><p>cfdisk</p><p>dd</p><p>e2fsck</p><p>ext2ed</p><p>fsck</p><p>fsck.minix</p><p>fsconf</p><p>fdformat</p><p>hdparm</p><p>mformat</p><p>mkbootdisk</p><p>mkdosfs</p><p>mke2fs</p><p>mkfs.ext2</p><p>mkfs.msdos</p><p>mkinitrd</p><p>mkisofs</p><p>mkswap</p><p>mpartition</p><p>swapon</p><p>symlinks</p><p>sync</p><p>mbadblocks</p><p>mkfs.minix</p><p>fsck.ext2</p><p>fdisk</p><p>losetup</p><p>mkfs</p><p>sfdisk</p><p>swapoff</p><h2 id="网络通讯" tabindex="-1"><a class="header-anchor" href="#网络通讯" aria-hidden="true">#</a> 网络通讯</h2><p>apachectl</p><p>arpwatch</p><p>dip</p><p>getty</p><p>mingetty</p><p>uux</p><p>telnet</p><p>uulog</p><p>uustat</p><p>ppp-off</p><p>netconfig</p><p>nc</p><p>httpd</p><p>ifconfig</p><p>minicom</p><p>mesg</p><p>dnsconf</p><p>wall</p><p>netstat</p><p>ping</p><p>pppstats</p><p>samba</p><p>setserial</p><p>talk</p><p>traceroute</p><p>tty</p><p>newaliases</p><p>uuname</p><p>netconf</p><p>write</p><p>statserial</p><p>efax</p><p>pppsetup</p><p>tcpdump</p><p>ytalk</p><p>cu</p><p>smbd</p><p>testparm</p><p>smbclient</p><p>shapecfg</p><h2 id="设备管理" tabindex="-1"><a class="header-anchor" href="#设备管理" aria-hidden="true">#</a> 设备管理</h2><p>setleds</p><p>loadkey</p><p>rdev</p><p>dumpkeys</p><p>MAKEDEV</p><p>poweroff</p><h2 id="电子邮件与新闻组" tabindex="-1"><a class="header-anchor" href="#电子邮件与新闻组" aria-hidden="true">#</a> 电子邮件与新闻组</h2><h2 id="其他命令" tabindex="-1"><a class="header-anchor" href="#其他命令" aria-hidden="true">#</a> 其他命令</h2><p>bc</p><p>tail</p><p>head</p><p>xargs</p><p>ip</p><p>nohub</p><p>killall</p><p>kill</p><p>pkill</p><h2 id="启动-java-服务" tabindex="-1"><a class="header-anchor" href="#启动-java-服务" aria-hidden="true">#</a> 启动 java 服务</h2><p>nohub java -jar xxx.jar</p>`,120),As={href:"http://start.sh",target:"_blank",rel:"noopener noreferrer"},Ss=n("h2",{id:"实用的工具",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#实用的工具","aria-hidden":"true"},"#"),s(" 实用的工具")],-1),Is={href:"https://www.zhihu.com/question/59227720/answer/163594782",target:"_blank",rel:"noopener noreferrer"};function Ls(Ds,Ms){const l=i("ExternalLinkIcon"),e=i("RouterLink");return x(),_("div",null,[E(" more "),F,N,n("p",null,[n("a",z,[s("参考博客 csdn"),a(l)])]),O,n("ul",null,[n("li",null,[a(e,{to:"/linux/basis/command.html#%E7%A3%81%E7%9B%98%E7%AE%A1%E7%90%86"},{default:t(()=>[s("返回命令大全列表")]),_:1})])]),K,n("ul",null,[n("li",null,[a(e,{to:"/linux/basis/command.html#%E6%96%87%E4%BB%B6%E7%AE%A1%E7%90%86"},{default:t(()=>[s("返回命令大全列表")]),_:1})])]),V,n("ul",null,[n("li",null,[a(e,{to:"/linux/basis/command.html#%E6%96%87%E4%BB%B6%E7%AE%A1%E7%90%86"},{default:t(()=>[s("返回命令大全列表")]),_:1})])]),H,n("ul",null,[n("li",null,[a(e,{to:"/linux/basis/command.html#%E6%96%87%E4%BB%B6%E7%AE%A1%E7%90%86"},{default:t(()=>[s("返回命令大全列表")]),_:1})])]),$,n("ul",null,[n("li",null,[a(e,{to:"/linux/basis/command.html#%E7%A3%81%E7%9B%98%E7%AE%A1%E7%90%86"},{default:t(()=>[s("返回命令大全列表")]),_:1})])]),j,n("ul",null,[n("li",null,[a(e,{to:"/linux/basis/command.html#%E6%96%87%E4%BB%B6%E7%AE%A1%E7%90%86"},{default:t(()=>[s("返回命令大全列表")]),_:1})])]),W,n("ul",null,[n("li",null,[a(e,{to:"/linux/basis/command.html#%E6%96%87%E4%BB%B6%E7%AE%A1%E7%90%86"},{default:t(()=>[s("返回命令大全列表")]),_:1})])]),Z,n("ul",null,[n("li",null,[a(e,{to:"/linux/basis/command.html#%E6%96%87%E4%BB%B6%E7%AE%A1%E7%90%86"},{default:t(()=>[s("返回命令大全列表")]),_:1})])]),Y,n("ul",null,[n("li",null,[a(e,{to:"/linux/basis/command.html#%E6%96%87%E4%BB%B6%E7%AE%A1%E7%90%86"},{default:t(()=>[s("返回命令大全列表")]),_:1})])]),X,n("ul",null,[n("li",null,[a(e,{to:"/linux/basis/command.html#%E6%96%87%E4%BB%B6%E7%AE%A1%E7%90%86"},{default:t(()=>[s("返回命令大全列表")]),_:1})])]),J,n("ul",null,[n("li",null,[a(e,{to:"/linux/basis/command.html#%E6%96%87%E6%A1%A3%E7%BC%96%E8%BE%91"},{default:t(()=>[s("返回命令大全列表")]),_:1})])]),Q,n("p",null,[s("echo 颜色打印扩展，"),n("a",nn,[s("auto.sh"),a(l)]),s(" 内容如下：")]),sn,n("ul",null,[n("li",null,[a(e,{to:"/linux/basis/command.html#%E6%96%87%E4%BB%B6%E7%AE%A1%E7%90%86"},{default:t(()=>[s("返回命令大全列表")]),_:1})])]),an,n("ul",null,[n("li",null,[a(e,{to:"/linux/basis/command.html#%E6%96%87%E4%BB%B6%E7%AE%A1%E7%90%86"},{default:t(()=>[s("返回命令大全列表")]),_:1})])]),en,n("ul",null,[n("li",null,[a(e,{to:"/linux/basis/command.html#%E6%96%87%E4%BB%B6%E7%AE%A1%E7%90%86"},{default:t(()=>[s("返回命令大全列表")]),_:1})])]),tn,n("ul",null,[n("li",null,[a(e,{to:"/linux/basis/command.html#%E6%96%87%E4%BB%B6%E7%AE%A1%E7%90%86"},{default:t(()=>[s("返回命令大全列表")]),_:1})])]),pn,n("ul",null,[n("li",null,[a(e,{to:"/linux/basis/command.html#%E6%96%87%E4%BB%B6%E7%AE%A1%E7%90%86"},{default:t(()=>[s("返回命令大全列表")]),_:1})])]),ln,n("ul",null,[n("li",null,[a(e,{to:"/linux/basis/command.html#%E6%96%87%E4%BB%B6%E7%AE%A1%E7%90%86"},{default:t(()=>[s("返回命令大全列表")]),_:1})])]),on,n("ul",null,[n("li",null,[a(e,{to:"/linux/basis/command.html#%E6%96%87%E4%BB%B6%E7%AE%A1%E7%90%86"},{default:t(()=>[s("返回命令大全列表")]),_:1})])]),rn,n("ul",null,[n("li",null,[a(e,{to:"/linux/basis/command.html#%E6%96%87%E4%BB%B6%E7%AE%A1%E7%90%86"},{default:t(()=>[s("返回命令大全列表")]),_:1})])]),cn,n("ul",null,[n("li",null,[a(e,{to:"/linux/basis/command.html#%E6%96%87%E4%BB%B6%E7%AE%A1%E7%90%86"},{default:t(()=>[s("返回命令大全列表")]),_:1})])]),dn,un,mn,bn,vn,kn,hn,n("ul",null,[n("li",null,[a(e,{to:"/linux/basis/command.html#%E6%96%87%E4%BB%B6%E7%AE%A1%E7%90%86"},{default:t(()=>[s("返回命令大全列表")]),_:1})])]),gn,n("ul",null,[n("li",null,[a(e,{to:"/linux/basis/command.html#%E6%96%87%E4%BB%B6%E7%AE%A1%E7%90%86"},{default:t(()=>[s("返回命令大全列表")]),_:1})])]),fn,xn,_n,En,wn,yn,Bn,n("ul",null,[n("li",null,[a(e,{to:"/linux/basis/command.html#%E6%96%87%E4%BB%B6%E7%AE%A1%E7%90%86"},{default:t(()=>[s("返回命令大全列表")]),_:1})])]),qn,An,Sn,In,Ln,Dn,Mn,n("ul",null,[n("li",null,[a(e,{to:"/linux/basis/command.html#%E6%96%87%E6%A1%A3%E7%BC%96%E8%BE%91"},{default:t(()=>[s("返回命令大全列表")]),_:1})])]),Cn,n("ul",null,[n("li",null,[a(e,{to:"/linux/basis/command.html#%E6%96%87%E4%BB%B6%E7%BC%96%E8%BE%91"},{default:t(()=>[s("返回命令大全列表")]),_:1})])]),Pn,n("ul",null,[n("li",null,[a(e,{to:"/linux/basis/command.html#%E6%96%87%E6%A1%A3%E7%BC%96%E8%BE%91"},{default:t(()=>[s("返回命令大全列表")]),_:1})])]),Tn,Un,Rn,Gn,Fn,Nn,zn,n("ul",null,[n("li",null,[a(e,{to:"/linux/basis/command.html#%E6%96%87%E6%A1%A3%E7%BC%96%E8%BE%91"},{default:t(()=>[s("返回命令大全列表")]),_:1})])]),On,Kn,Vn,Hn,$n,jn,Wn,n("ul",null,[n("li",null,[a(e,{to:"/linux/basis/command.html#%E6%96%87%E6%A1%A3%E7%BC%96%E8%BE%91"},{default:t(()=>[s("返回命令大全列表")]),_:1})])]),Zn,Yn,Xn,Jn,Qn,ns,ss,n("ul",null,[n("li",null,[a(e,{to:"/linux/basis/command.html#%E6%96%87%E6%A1%A3%E7%BC%96%E8%BE%91"},{default:t(()=>[s("返回命令大全列表")]),_:1})])]),as,n("ul",null,[n("li",null,[a(e,{to:"/linux/basis/command.html#%E6%96%87%E4%BB%B6%E7%AE%A1%E7%90%86"},{default:t(()=>[s("返回命令大全列表")]),_:1})])]),es,n("ul",null,[n("li",null,[a(e,{to:"/linux/basis/command.html#%E6%96%87%E4%BB%B6%E7%AE%A1%E7%90%86"},{default:t(()=>[s("返回命令大全列表")]),_:1})])]),ts,n("ul",null,[n("li",null,[a(e,{to:"/linux/basis/command.html#%E7%B3%BB%E7%BB%9F%E7%AE%A1%E7%90%86"},{default:t(()=>[s("返回命令大全列表")]),_:1})])]),ps,ls,is,os,rs,cs,ds,us,n("ul",null,[n("li",null,[a(e,{to:"/linux/basis/command.html#%E6%96%87%E4%BB%B6%E7%AE%A1%E7%90%86"},{default:t(()=>[s("返回命令大全列表")]),_:1})])]),ms,n("ul",null,[n("li",null,[a(e,{to:"/linux/basis/command.html#%E6%96%87%E4%BB%B6%E7%AE%A1%E7%90%86"},{default:t(()=>[s("返回命令大全列表")]),_:1})])]),bs,n("ul",null,[n("li",null,[a(e,{to:"/linux/basis/command.html#%E6%96%87%E4%BB%B6%E7%AE%A1%E7%90%86"},{default:t(()=>[s("返回命令大全列表")]),_:1})])]),vs,n("ul",null,[n("li",null,[a(e,{to:"/linux/basis/command.html#%E6%96%87%E4%BB%B6%E7%AE%A1%E7%90%86"},{default:t(()=>[s("返回命令大全列表")]),_:1})])]),ks,n("p",null,[a(e,{to:"/linux/basis/kill.html"},{default:t(()=>[s("具体操作命令")]),_:1})]),hs,n("ul",null,[n("li",null,[a(e,{to:"/linux/basis/command.html#%E6%96%87%E4%BB%B6%E7%AE%A1%E7%90%86"},{default:t(()=>[s("返回命令大全列表")]),_:1})])]),n("p",null,[n("a",gs,[s("CSDN博客"),a(l)])]),fs,n("ul",null,[n("li",null,[a(e,{to:"/linux/basis/command.html#%E5%A4%87%E4%BB%BD%E5%8E%8B%E7%BC%A9"},{default:t(()=>[s("返回命令大全列表")]),_:1})])]),xs,n("ul",null,[n("li",null,[a(e,{to:"/linux/basis/command.html#%E7%A3%81%E7%9B%98%E7%AE%A1%E7%90%86"},{default:t(()=>[s("返回命令大全列表")]),_:1})])]),_s,n("ul",null,[n("li",null,[a(e,{to:"/linux/basis/command.html#%E7%A3%81%E7%9B%98%E7%AE%A1%E7%90%86"},{default:t(()=>[s("返回命令大全列表")]),_:1})])]),Es,n("ul",null,[n("li",null,[a(e,{to:"/linux/basis/command.html#%E7%A3%81%E7%9B%98%E7%AE%A1%E7%90%86"},{default:t(()=>[s("返回命令大全列表")]),_:1})])]),ws,n("ul",null,[n("li",null,[a(e,{to:"/linux/basis/command.html#%E7%A3%81%E7%9B%98%E7%AE%A1%E7%90%86"},{default:t(()=>[s("返回命令大全列表")]),_:1})])]),ys,n("ul",null,[n("li",null,[a(e,{to:"/linux/basis/command.html#%E7%A3%81%E7%9B%98%E7%AE%A1%E7%90%86"},{default:t(()=>[s("返回命令大全列表")]),_:1})])]),Bs,n("ul",null,[n("li",null,[a(e,{to:"/linux/basis/command.html#%E7%A3%81%E7%9B%98%E7%AE%A1%E7%90%86"},{default:t(()=>[s("返回命令大全列表")]),_:1})])]),qs,n("p",null,[s("sh "),n("a",As,[s("start.sh"),a(l)]),s(" start")]),Ss,n("p",null,[n("a",Is,[s("https://www.zhihu.com/question/59227720/answer/163594782"),a(l)])])])}const Ns=f(G,[["render",Ls],["__file","basis.html.vue"]]);export{Ns as default};
