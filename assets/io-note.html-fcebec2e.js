const t=JSON.parse('{"key":"v-f77a2f36","path":"/java/basis/io-note.html","title":"IO文件流","lang":"zh-CN","frontmatter":{"icon":"edit","title":"IO文件流","category":["Java"],"date":"2019-08-12T00:00:00.000Z","tag":["io"],"description":"分类 1、字节类， 2、字符类 java输入/输出流体系中常用的流的分类表 分类 字节输入流 字节输出流 字符输入流 字符输出流 抽象基类 InputStream OutputStream Reader Writer 访问文件 FileInputStream FileOutputStream FileReader FileWriter 访问数组 ByteArrayInputStream ByteArrayOutputStream CharArrayReader CharArrayWriter 访问管道 PipedInputStream PipedOutputStream PipedReader PipedWriter 访问字符串 StringReader StringWriter 缓冲流 BufferedInputStream BufferedOutputStream BufferedReader BufferedWriter 转换流 InputStreamReader OutputStreamWriter 对象流 ObjectInputStream ObjectOutputStream 抽象基类 FilterInputStream FilterOutputStream FilterReader FilterWriter 打印流 PrintStream PrintWriter 推回输入流 PushbackInputStream PushbackReader 特殊流 DataInputStream DataOutputStream","head":[["meta",{"property":"og:url","content":"https://topjf.github.io/java/basis/io-note.html"}],["meta",{"property":"og:site_name","content":"topjf"}],["meta",{"property":"og:title","content":"IO文件流"}],["meta",{"property":"og:description","content":"分类 1、字节类， 2、字符类 java输入/输出流体系中常用的流的分类表 分类 字节输入流 字节输出流 字符输入流 字符输出流 抽象基类 InputStream OutputStream Reader Writer 访问文件 FileInputStream FileOutputStream FileReader FileWriter 访问数组 ByteArrayInputStream ByteArrayOutputStream CharArrayReader CharArrayWriter 访问管道 PipedInputStream PipedOutputStream PipedReader PipedWriter 访问字符串 StringReader StringWriter 缓冲流 BufferedInputStream BufferedOutputStream BufferedReader BufferedWriter 转换流 InputStreamReader OutputStreamWriter 对象流 ObjectInputStream ObjectOutputStream 抽象基类 FilterInputStream FilterOutputStream FilterReader FilterWriter 打印流 PrintStream PrintWriter 推回输入流 PushbackInputStream PushbackReader 特殊流 DataInputStream DataOutputStream"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:image","content":"https://topjf.github.io/"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2022-12-16T06:02:03.000Z"}],["meta",{"name":"twitter:card","content":"summary_large_image"}],["meta",{"name":"twitter:image:alt","content":"IO文件流"}],["meta",{"property":"article:tag","content":"io"}],["meta",{"property":"article:published_time","content":"2019-08-12T00:00:00.000Z"}],["meta",{"property":"article:modified_time","content":"2022-12-16T06:02:03.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"IO文件流\\",\\"image\\":[\\"https://topjf.github.io/\\"],\\"datePublished\\":\\"2019-08-12T00:00:00.000Z\\",\\"dateModified\\":\\"2022-12-16T06:02:03.000Z\\",\\"author\\":[]}"]]},"headers":[{"level":2,"title":"分类","slug":"分类","link":"#分类","children":[]},{"level":2,"title":"什么是流","slug":"什么是流","link":"#什么是流","children":[]},{"level":2,"title":"文件输入流","slug":"文件输入流","link":"#文件输入流","children":[]},{"level":2,"title":"文件输出流","slug":"文件输出流","link":"#文件输出流","children":[]},{"level":2,"title":"Ascll码概念","slug":"ascll码概念","link":"#ascll码概念","children":[]},{"level":2,"title":"以字节流的形式读取文件","slug":"以字节流的形式读取文件","link":"#以字节流的形式读取文件","children":[]},{"level":2,"title":"以字节流的形式向文件写数据","slug":"以字节流的形式向文件写数据","link":"#以字节流的形式向文件写数据","children":[]},{"level":2,"title":"字符流读取文件","slug":"字符流读取文件","link":"#字符流读取文件","children":[]},{"level":2,"title":"字符流写入到文件","slug":"字符流写入到文件","link":"#字符流写入到文件","children":[]},{"level":2,"title":"使用缓存流读取数据","slug":"使用缓存流读取数据","link":"#使用缓存流读取数据","children":[{"level":3,"title":"使用缓存流写数据","slug":"使用缓存流写数据","link":"#使用缓存流写数据","children":[]}]},{"level":2,"title":"步骤 1 : 编码概念","slug":"步骤-1-编码概念","link":"#步骤-1-编码概念","children":[]},{"level":2,"title":"步骤 2 : 常见编码","slug":"步骤-2-常见编码","link":"#步骤-2-常见编码","children":[]},{"level":2,"title":"步骤 3 : UNICODE和UTF","slug":"步骤-3-unicode和utf","link":"#步骤-3-unicode和utf","children":[]},{"level":2,"title":"步骤 4 : Java采用的是Unicode","slug":"步骤-4-java采用的是unicode","link":"#步骤-4-java采用的是unicode","children":[]},{"level":2,"title":"步骤 5 : 一个汉字使用不同编码方式的表现","slug":"步骤-5-一个汉字使用不同编码方式的表现","link":"#步骤-5-一个汉字使用不同编码方式的表现","children":[]},{"level":2,"title":"以字符 中 为例，查看其在不同编码方式下的值是多少  也即在不同的棋盘上的位置","slug":"以字符-中-为例-查看其在不同编码方式下的值是多少-也即在不同的棋盘上的位置","link":"#以字符-中-为例-查看其在不同编码方式下的值是多少-也即在不同的棋盘上的位置","children":[]},{"level":2,"title":"步骤 6 : 文件的编码方式-记事本","slug":"步骤-6-文件的编码方式-记事本","link":"#步骤-6-文件的编码方式-记事本","children":[]},{"level":2,"title":"步骤 7 : 文件的编码方式-eclipse","slug":"步骤-7-文件的编码方式-eclipse","link":"#步骤-7-文件的编码方式-eclipse","children":[]},{"level":2,"title":"步骤 8 : 用FileInputStream 字节流正确读取中文","slug":"步骤-8-用fileinputstream-字节流正确读取中文","link":"#步骤-8-用fileinputstream-字节流正确读取中文","children":[]},{"level":2,"title":"步骤 9 : 用FileReader 字符流正确读取中文","slug":"步骤-9-用filereader-字符流正确读取中文","link":"#步骤-9-用filereader-字符流正确读取中文","children":[]},{"level":2,"title":"直接进行字符串的读写","slug":"直接进行字符串的读写","link":"#直接进行字符串的读写","children":[]},{"level":2,"title":"序列化一个对象","slug":"序列化一个对象","link":"#序列化一个对象","children":[]}],"git":{"createdTime":1671170523000,"updatedTime":1671170523000,"contributors":[{"name":"jinfang","email":"topjfk@163.com","commits":1}]},"readingTime":{"minutes":14.33,"words":4300},"filePathRelative":"java/basis/io-note.md","localizedDate":"2019年8月12日","excerpt":"<p></p>\\n<h2> 分类</h2>\\n<p>1、字节类，</p>\\n<p></p>\\n<p>2、字符类</p>\\n<p></p>\\n<p>java输入/输出流体系中常用的流的分类表</p>\\n<table>\\n<thead>\\n<tr>\\n<th style=\\"text-align:center\\">分类</th>\\n<th>字节输入流</th>\\n<th>字节输出流</th>\\n<th>字符输入流</th>\\n<th>字符输出流</th>\\n</tr>\\n</thead>\\n<tbody>\\n<tr>\\n<td style=\\"text-align:center\\">抽象基类</td>\\n<td>InputStream</td>\\n<td>OutputStream</td>\\n<td>Reader</td>\\n<td>Writer</td>\\n</tr>\\n<tr>\\n<td style=\\"text-align:center\\">访问文件</td>\\n<td><strong>FileInputStream</strong></td>\\n<td><strong>FileOutputStream</strong></td>\\n<td><strong>FileReader</strong></td>\\n<td><strong>FileWriter</strong></td>\\n</tr>\\n<tr>\\n<td style=\\"text-align:center\\">访问数组</td>\\n<td><strong>ByteArrayInputStream</strong></td>\\n<td><strong>ByteArrayOutputStream</strong></td>\\n<td><strong>CharArrayReader</strong></td>\\n<td><strong>CharArrayWriter</strong></td>\\n</tr>\\n<tr>\\n<td style=\\"text-align:center\\">访问管道</td>\\n<td><strong>PipedInputStream</strong></td>\\n<td><strong>PipedOutputStream</strong></td>\\n<td><strong>PipedReader</strong></td>\\n<td><strong>PipedWriter</strong></td>\\n</tr>\\n<tr>\\n<td style=\\"text-align:center\\">访问字符串</td>\\n<td></td>\\n<td></td>\\n<td><strong>StringReader</strong></td>\\n<td><strong>StringWriter</strong></td>\\n</tr>\\n<tr>\\n<td style=\\"text-align:center\\">缓冲流</td>\\n<td>BufferedInputStream</td>\\n<td>BufferedOutputStream</td>\\n<td>BufferedReader</td>\\n<td>BufferedWriter</td>\\n</tr>\\n<tr>\\n<td style=\\"text-align:center\\">转换流</td>\\n<td></td>\\n<td></td>\\n<td>InputStreamReader</td>\\n<td>OutputStreamWriter</td>\\n</tr>\\n<tr>\\n<td style=\\"text-align:center\\">对象流</td>\\n<td>ObjectInputStream</td>\\n<td>ObjectOutputStream</td>\\n<td></td>\\n<td></td>\\n</tr>\\n<tr>\\n<td style=\\"text-align:center\\">抽象基类</td>\\n<td>FilterInputStream</td>\\n<td>FilterOutputStream</td>\\n<td>FilterReader</td>\\n<td>FilterWriter</td>\\n</tr>\\n<tr>\\n<td style=\\"text-align:center\\">打印流</td>\\n<td></td>\\n<td>PrintStream</td>\\n<td></td>\\n<td>PrintWriter</td>\\n</tr>\\n<tr>\\n<td style=\\"text-align:center\\">推回输入流</td>\\n<td>PushbackInputStream</td>\\n<td></td>\\n<td>PushbackReader</td>\\n<td></td>\\n</tr>\\n<tr>\\n<td style=\\"text-align:center\\">特殊流</td>\\n<td>DataInputStream</td>\\n<td>DataOutputStream</td>\\n<td></td>\\n<td></td>\\n</tr>\\n</tbody>\\n</table>","autoDesc":true}');export{t as data};
